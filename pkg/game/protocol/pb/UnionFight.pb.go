// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: UnionFight.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UnionFightPb int32

const (
	UnionFightPb_UnionFightPb_Null                          UnionFightPb = 0
	UnionFightPb_UnionFightPb_Main                          UnionFightPb = 206701
	UnionFightPb_UnionFightPb_Apply                         UnionFightPb = 206702
	UnionFightPb_UnionFightPb_Enter                         UnionFightPb = 206703
	UnionFightPb_UnionFightPb_Request                       UnionFightPb = 206704
	UnionFightPb_UnionFightPb_Position                      UnionFightPb = 206705
	UnionFightPb_UnionFightPb_UnPosition                    UnionFightPb = 206706
	UnionFightPb_UnionFightPb_Group_Rank                    UnionFightPb = 206707
	UnionFightPb_UnionFightPb_Leave                         UnionFightPb = 206708
	UnionFightPb_UnionFightPb_Supremacy_List                UnionFightPb = 206709
	UnionFightPb_UnionFightPb_Worship                       UnionFightPb = 206710
	UnionFightPb_UnionFightPb_Play_Back                     UnionFightPb = 206711
	UnionFightPb_UnionFightPb_Battle_Record                 UnionFightPb = 206712
	UnionFightPb_UnionFightPb_History_Data                  UnionFightPb = 206713
	UnionFightPb_UnionFightPb_Get_Locked_Detail             UnionFightPb = 206714
	UnionFightPb_UnionFightPb_Change_Lock_Status            UnionFightPb = 206715
	UnionFightPb_UnionFightPb_Get_ToDay_Result              UnionFightPb = 206716
	UnionFightPb_UnionFightPb_Get_Union_Rank_List           UnionFightPb = 206717
	UnionFightPb_UnionFightPb_CrossToGame_Apply             UnionFightPb = 206720
	UnionFightPb_UnionFightPb_CrossToGame_Prepare_Data_Sync UnionFightPb = 206721
	UnionFightPb_UnionFightPb_CrossToGame_Send_Reward       UnionFightPb = 206722
	UnionFightPb_UnionFightPb_CrossToGame_Login_Sync_Data   UnionFightPb = 206723
	UnionFightPb_UnionFightPb_CrossToGame_Dan_Sync_Data     UnionFightPb = 206724
	UnionFightPb_UnionFightPb_CrossToGame_Get_Union_List    UnionFightPb = 206725
	UnionFightPb_UnionFightPb_CrossToGame_Worship           UnionFightPb = 206726
	UnionFightPb_UnionFightPb_CrossToGame_Sync_Union_Data   UnionFightPb = 206727
	UnionFightPb_UnionFightPb_Login_Sync                    UnionFightPb = 206730
)

// Enum value maps for UnionFightPb.
var (
	UnionFightPb_name = map[int32]string{
		0:      "UnionFightPb_Null",
		206701: "UnionFightPb_Main",
		206702: "UnionFightPb_Apply",
		206703: "UnionFightPb_Enter",
		206704: "UnionFightPb_Request",
		206705: "UnionFightPb_Position",
		206706: "UnionFightPb_UnPosition",
		206707: "UnionFightPb_Group_Rank",
		206708: "UnionFightPb_Leave",
		206709: "UnionFightPb_Supremacy_List",
		206710: "UnionFightPb_Worship",
		206711: "UnionFightPb_Play_Back",
		206712: "UnionFightPb_Battle_Record",
		206713: "UnionFightPb_History_Data",
		206714: "UnionFightPb_Get_Locked_Detail",
		206715: "UnionFightPb_Change_Lock_Status",
		206716: "UnionFightPb_Get_ToDay_Result",
		206717: "UnionFightPb_Get_Union_Rank_List",
		206720: "UnionFightPb_CrossToGame_Apply",
		206721: "UnionFightPb_CrossToGame_Prepare_Data_Sync",
		206722: "UnionFightPb_CrossToGame_Send_Reward",
		206723: "UnionFightPb_CrossToGame_Login_Sync_Data",
		206724: "UnionFightPb_CrossToGame_Dan_Sync_Data",
		206725: "UnionFightPb_CrossToGame_Get_Union_List",
		206726: "UnionFightPb_CrossToGame_Worship",
		206727: "UnionFightPb_CrossToGame_Sync_Union_Data",
		206730: "UnionFightPb_Login_Sync",
	}
	UnionFightPb_value = map[string]int32{
		"UnionFightPb_Null":                          0,
		"UnionFightPb_Main":                          206701,
		"UnionFightPb_Apply":                         206702,
		"UnionFightPb_Enter":                         206703,
		"UnionFightPb_Request":                       206704,
		"UnionFightPb_Position":                      206705,
		"UnionFightPb_UnPosition":                    206706,
		"UnionFightPb_Group_Rank":                    206707,
		"UnionFightPb_Leave":                         206708,
		"UnionFightPb_Supremacy_List":                206709,
		"UnionFightPb_Worship":                       206710,
		"UnionFightPb_Play_Back":                     206711,
		"UnionFightPb_Battle_Record":                 206712,
		"UnionFightPb_History_Data":                  206713,
		"UnionFightPb_Get_Locked_Detail":             206714,
		"UnionFightPb_Change_Lock_Status":            206715,
		"UnionFightPb_Get_ToDay_Result":              206716,
		"UnionFightPb_Get_Union_Rank_List":           206717,
		"UnionFightPb_CrossToGame_Apply":             206720,
		"UnionFightPb_CrossToGame_Prepare_Data_Sync": 206721,
		"UnionFightPb_CrossToGame_Send_Reward":       206722,
		"UnionFightPb_CrossToGame_Login_Sync_Data":   206723,
		"UnionFightPb_CrossToGame_Dan_Sync_Data":     206724,
		"UnionFightPb_CrossToGame_Get_Union_List":    206725,
		"UnionFightPb_CrossToGame_Worship":           206726,
		"UnionFightPb_CrossToGame_Sync_Union_Data":   206727,
		"UnionFightPb_Login_Sync":                    206730,
	}
)

func (x UnionFightPb) Enum() *UnionFightPb {
	p := new(UnionFightPb)
	*p = x
	return p
}

func (x UnionFightPb) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnionFightPb) Descriptor() protoreflect.EnumDescriptor {
	return file_UnionFight_proto_enumTypes[0].Descriptor()
}

func (UnionFightPb) Type() protoreflect.EnumType {
	return &file_UnionFight_proto_enumTypes[0]
}

func (x UnionFightPb) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UnionFightPb) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UnionFightPb(num)
	return nil
}

// Deprecated: Use UnionFightPb.Descriptor instead.
func (UnionFightPb) EnumDescriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{0}
}

type UnionFightLockType int32

const (
	UnionFightLockType_UnionFightLockType_Lock   UnionFightLockType = 1
	UnionFightLockType_UnionFightLockType_UnLock UnionFightLockType = 2
)

// Enum value maps for UnionFightLockType.
var (
	UnionFightLockType_name = map[int32]string{
		1: "UnionFightLockType_Lock",
		2: "UnionFightLockType_UnLock",
	}
	UnionFightLockType_value = map[string]int32{
		"UnionFightLockType_Lock":   1,
		"UnionFightLockType_UnLock": 2,
	}
)

func (x UnionFightLockType) Enum() *UnionFightLockType {
	p := new(UnionFightLockType)
	*p = x
	return p
}

func (x UnionFightLockType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnionFightLockType) Descriptor() protoreflect.EnumDescriptor {
	return file_UnionFight_proto_enumTypes[1].Descriptor()
}

func (UnionFightLockType) Type() protoreflect.EnumType {
	return &file_UnionFight_proto_enumTypes[1]
}

func (x UnionFightLockType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UnionFightLockType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UnionFightLockType(num)
	return nil
}

// Deprecated: Use UnionFightLockType.Descriptor instead.
func (UnionFightLockType) EnumDescriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{1}
}

type UnionFightMainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId *int64 `protobuf:"varint,1,req,name=unionId" json:"unionId,omitempty"`
}

func (x *UnionFightMainReq) Reset() {
	*x = UnionFightMainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightMainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightMainReq) ProtoMessage() {}

func (x *UnionFightMainReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightMainReq.ProtoReflect.Descriptor instead.
func (*UnionFightMainReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{0}
}

func (x *UnionFightMainReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

type UnionFightMainRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret            *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	LastWeekActive *int32 `protobuf:"varint,2,opt,name=lastWeekActive" json:"lastWeekActive,omitempty"`
	UnionRank      *int32 `protobuf:"varint,3,opt,name=unionRank" json:"unionRank,omitempty"`
}

func (x *UnionFightMainRsp) Reset() {
	*x = UnionFightMainRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightMainRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightMainRsp) ProtoMessage() {}

func (x *UnionFightMainRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightMainRsp.ProtoReflect.Descriptor instead.
func (*UnionFightMainRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{1}
}

func (x *UnionFightMainRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *UnionFightMainRsp) GetLastWeekActive() int32 {
	if x != nil && x.LastWeekActive != nil {
		return *x.LastWeekActive
	}
	return 0
}

func (x *UnionFightMainRsp) GetUnionRank() int32 {
	if x != nil && x.UnionRank != nil {
		return *x.UnionRank
	}
	return 0
}

type UnionFightApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId *int64 `protobuf:"varint,1,req,name=unionId" json:"unionId,omitempty"`
}

func (x *UnionFightApplyReq) Reset() {
	*x = UnionFightApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightApplyReq) ProtoMessage() {}

func (x *UnionFightApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightApplyReq.ProtoReflect.Descriptor instead.
func (*UnionFightApplyReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{2}
}

func (x *UnionFightApplyReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

type UnionFightApplyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *UnionFightApplyRsp) Reset() {
	*x = UnionFightApplyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightApplyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightApplyRsp) ProtoMessage() {}

func (x *UnionFightApplyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightApplyRsp.ProtoReflect.Descriptor instead.
func (*UnionFightApplyRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{3}
}

func (x *UnionFightApplyRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type UnionFightApplyDataSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsApply      *bool  `protobuf:"varint,1,opt,name=isApply" json:"isApply,omitempty"`
	HasQuality   *bool  `protobuf:"varint,2,opt,name=hasQuality" json:"hasQuality,omitempty"`
	IsRequest    *bool  `protobuf:"varint,3,opt,name=isRequest" json:"isRequest,omitempty"`
	LastWeekDan  *int32 `protobuf:"varint,4,opt,name=lastWeekDan" json:"lastWeekDan,omitempty"`
	LastWeekStar *int32 `protobuf:"varint,5,opt,name=lastWeekStar" json:"lastWeekStar,omitempty"`
	LastWeekRank *int32 `protobuf:"varint,6,opt,name=lastWeekRank" json:"lastWeekRank,omitempty"`
	NeedRedPoint *bool  `protobuf:"varint,7,opt,name=needRedPoint" json:"needRedPoint,omitempty"`
	Energy       *int32 `protobuf:"varint,8,opt,name=energy" json:"energy,omitempty"`
	IsOpen       *bool  `protobuf:"varint,9,opt,name=isOpen" json:"isOpen,omitempty"`
	NeedShow     *bool  `protobuf:"varint,10,opt,name=needShow" json:"needShow,omitempty"`
	CanWorship   *bool  `protobuf:"varint,11,opt,name=canWorship" json:"canWorship,omitempty"`
}

func (x *UnionFightApplyDataSync) Reset() {
	*x = UnionFightApplyDataSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightApplyDataSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightApplyDataSync) ProtoMessage() {}

func (x *UnionFightApplyDataSync) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightApplyDataSync.ProtoReflect.Descriptor instead.
func (*UnionFightApplyDataSync) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{4}
}

func (x *UnionFightApplyDataSync) GetIsApply() bool {
	if x != nil && x.IsApply != nil {
		return *x.IsApply
	}
	return false
}

func (x *UnionFightApplyDataSync) GetHasQuality() bool {
	if x != nil && x.HasQuality != nil {
		return *x.HasQuality
	}
	return false
}

func (x *UnionFightApplyDataSync) GetIsRequest() bool {
	if x != nil && x.IsRequest != nil {
		return *x.IsRequest
	}
	return false
}

func (x *UnionFightApplyDataSync) GetLastWeekDan() int32 {
	if x != nil && x.LastWeekDan != nil {
		return *x.LastWeekDan
	}
	return 0
}

func (x *UnionFightApplyDataSync) GetLastWeekStar() int32 {
	if x != nil && x.LastWeekStar != nil {
		return *x.LastWeekStar
	}
	return 0
}

func (x *UnionFightApplyDataSync) GetLastWeekRank() int32 {
	if x != nil && x.LastWeekRank != nil {
		return *x.LastWeekRank
	}
	return 0
}

func (x *UnionFightApplyDataSync) GetNeedRedPoint() bool {
	if x != nil && x.NeedRedPoint != nil {
		return *x.NeedRedPoint
	}
	return false
}

func (x *UnionFightApplyDataSync) GetEnergy() int32 {
	if x != nil && x.Energy != nil {
		return *x.Energy
	}
	return 0
}

func (x *UnionFightApplyDataSync) GetIsOpen() bool {
	if x != nil && x.IsOpen != nil {
		return *x.IsOpen
	}
	return false
}

func (x *UnionFightApplyDataSync) GetNeedShow() bool {
	if x != nil && x.NeedShow != nil {
		return *x.NeedShow
	}
	return false
}

func (x *UnionFightApplyDataSync) GetCanWorship() bool {
	if x != nil && x.CanWorship != nil {
		return *x.CanWorship
	}
	return false
}

type UnionFightEnterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId *int64 `protobuf:"varint,1,req,name=unionId" json:"unionId,omitempty"`
	Type    *int32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
}

func (x *UnionFightEnterReq) Reset() {
	*x = UnionFightEnterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightEnterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightEnterReq) ProtoMessage() {}

func (x *UnionFightEnterReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightEnterReq.ProtoReflect.Descriptor instead.
func (*UnionFightEnterReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{5}
}

func (x *UnionFightEnterReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

func (x *UnionFightEnterReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type UnionFightEnterRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                 *int32                  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Rank                *int32                  `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	Integral            *int64                  `protobuf:"varint,3,opt,name=integral" json:"integral,omitempty"`
	OtherUnionData      *OtherUnionData         `protobuf:"bytes,4,opt,name=otherUnionData" json:"otherUnionData,omitempty"`
	MyUnionData         *OtherUnionData         `protobuf:"bytes,5,opt,name=myUnionData" json:"myUnionData,omitempty"`
	MyMemberListData    []*UnionFightMemberData `protobuf:"bytes,6,rep,name=myMemberListData" json:"myMemberListData,omitempty"`
	OtherMemberListData []*UnionFightMemberData `protobuf:"bytes,7,rep,name=otherMemberListData" json:"otherMemberListData,omitempty"`
	IsSuccess           *int32                  `protobuf:"varint,8,opt,name=isSuccess" json:"isSuccess,omitempty"`
	LastWeekDan         *int32                  `protobuf:"varint,9,opt,name=lastWeekDan" json:"lastWeekDan,omitempty"`
}

func (x *UnionFightEnterRsp) Reset() {
	*x = UnionFightEnterRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightEnterRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightEnterRsp) ProtoMessage() {}

func (x *UnionFightEnterRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightEnterRsp.ProtoReflect.Descriptor instead.
func (*UnionFightEnterRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{6}
}

func (x *UnionFightEnterRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *UnionFightEnterRsp) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *UnionFightEnterRsp) GetIntegral() int64 {
	if x != nil && x.Integral != nil {
		return *x.Integral
	}
	return 0
}

func (x *UnionFightEnterRsp) GetOtherUnionData() *OtherUnionData {
	if x != nil {
		return x.OtherUnionData
	}
	return nil
}

func (x *UnionFightEnterRsp) GetMyUnionData() *OtherUnionData {
	if x != nil {
		return x.MyUnionData
	}
	return nil
}

func (x *UnionFightEnterRsp) GetMyMemberListData() []*UnionFightMemberData {
	if x != nil {
		return x.MyMemberListData
	}
	return nil
}

func (x *UnionFightEnterRsp) GetOtherMemberListData() []*UnionFightMemberData {
	if x != nil {
		return x.OtherMemberListData
	}
	return nil
}

func (x *UnionFightEnterRsp) GetIsSuccess() int32 {
	if x != nil && x.IsSuccess != nil {
		return *x.IsSuccess
	}
	return 0
}

func (x *UnionFightEnterRsp) GetLastWeekDan() int32 {
	if x != nil && x.LastWeekDan != nil {
		return *x.LastWeekDan
	}
	return 0
}

type UnionFightLeaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnionFightLeaveReq) Reset() {
	*x = UnionFightLeaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightLeaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightLeaveReq) ProtoMessage() {}

func (x *UnionFightLeaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightLeaveReq.ProtoReflect.Descriptor instead.
func (*UnionFightLeaveReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{7}
}

type UnionFightRequestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId *int64 `protobuf:"varint,1,req,name=unionId" json:"unionId,omitempty"`
}

func (x *UnionFightRequestReq) Reset() {
	*x = UnionFightRequestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightRequestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightRequestReq) ProtoMessage() {}

func (x *UnionFightRequestReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightRequestReq.ProtoReflect.Descriptor instead.
func (*UnionFightRequestReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{8}
}

func (x *UnionFightRequestReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

type UnionFightRequestRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *UnionFightRequestRsp) Reset() {
	*x = UnionFightRequestRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightRequestRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightRequestRsp) ProtoMessage() {}

func (x *UnionFightRequestRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightRequestRsp.ProtoReflect.Descriptor instead.
func (*UnionFightRequestRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{9}
}

func (x *UnionFightRequestRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type UnionFightPositionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *int32 `protobuf:"varint,1,req,name=position" json:"position,omitempty"`
	PlayerId *int64 `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
	UnionId  *int64 `protobuf:"varint,3,req,name=unionId" json:"unionId,omitempty"`
}

func (x *UnionFightPositionReq) Reset() {
	*x = UnionFightPositionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightPositionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightPositionReq) ProtoMessage() {}

func (x *UnionFightPositionReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightPositionReq.ProtoReflect.Descriptor instead.
func (*UnionFightPositionReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{10}
}

func (x *UnionFightPositionReq) GetPosition() int32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *UnionFightPositionReq) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *UnionFightPositionReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

type UnionFightPositionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *UnionFightPositionRsp) Reset() {
	*x = UnionFightPositionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightPositionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightPositionRsp) ProtoMessage() {}

func (x *UnionFightPositionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightPositionRsp.ProtoReflect.Descriptor instead.
func (*UnionFightPositionRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{11}
}

func (x *UnionFightPositionRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type UnionFightUnPositionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId  *int64 `protobuf:"varint,1,req,name=unionId" json:"unionId,omitempty"`
	PlayerId *int64 `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
	Position *int32 `protobuf:"varint,3,req,name=position" json:"position,omitempty"`
}

func (x *UnionFightUnPositionReq) Reset() {
	*x = UnionFightUnPositionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightUnPositionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightUnPositionReq) ProtoMessage() {}

func (x *UnionFightUnPositionReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightUnPositionReq.ProtoReflect.Descriptor instead.
func (*UnionFightUnPositionReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{12}
}

func (x *UnionFightUnPositionReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

func (x *UnionFightUnPositionReq) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *UnionFightUnPositionReq) GetPosition() int32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

type UnionFightUnPositionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *UnionFightUnPositionRsp) Reset() {
	*x = UnionFightUnPositionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightUnPositionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightUnPositionRsp) ProtoMessage() {}

func (x *UnionFightUnPositionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightUnPositionRsp.ProtoReflect.Descriptor instead.
func (*UnionFightUnPositionRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{13}
}

func (x *UnionFightUnPositionRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type UnionFightGroupRankReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId *int64 `protobuf:"varint,1,req,name=unionId" json:"unionId,omitempty"`
}

func (x *UnionFightGroupRankReq) Reset() {
	*x = UnionFightGroupRankReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightGroupRankReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightGroupRankReq) ProtoMessage() {}

func (x *UnionFightGroupRankReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightGroupRankReq.ProtoReflect.Descriptor instead.
func (*UnionFightGroupRankReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{14}
}

func (x *UnionFightGroupRankReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

type UnionFightGroupRankRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32                 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	UnionDataList []*UnionFightGroupData `protobuf:"bytes,2,rep,name=unionDataList" json:"unionDataList,omitempty"`
	MyUnionData   *UnionFightGroupData   `protobuf:"bytes,3,opt,name=myUnionData" json:"myUnionData,omitempty"`
}

func (x *UnionFightGroupRankRsp) Reset() {
	*x = UnionFightGroupRankRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightGroupRankRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightGroupRankRsp) ProtoMessage() {}

func (x *UnionFightGroupRankRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightGroupRankRsp.ProtoReflect.Descriptor instead.
func (*UnionFightGroupRankRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{15}
}

func (x *UnionFightGroupRankRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *UnionFightGroupRankRsp) GetUnionDataList() []*UnionFightGroupData {
	if x != nil {
		return x.UnionDataList
	}
	return nil
}

func (x *UnionFightGroupRankRsp) GetMyUnionData() *UnionFightGroupData {
	if x != nil {
		return x.MyUnionData
	}
	return nil
}

type UnionFightPrepareDataSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyMemberListData    []*UnionFightMemberData `protobuf:"bytes,1,rep,name=myMemberListData" json:"myMemberListData,omitempty"`
	OtherMemberListData []*UnionFightMemberData `protobuf:"bytes,2,rep,name=otherMemberListData" json:"otherMemberListData,omitempty"`
}

func (x *UnionFightPrepareDataSync) Reset() {
	*x = UnionFightPrepareDataSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightPrepareDataSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightPrepareDataSync) ProtoMessage() {}

func (x *UnionFightPrepareDataSync) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightPrepareDataSync.ProtoReflect.Descriptor instead.
func (*UnionFightPrepareDataSync) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{16}
}

func (x *UnionFightPrepareDataSync) GetMyMemberListData() []*UnionFightMemberData {
	if x != nil {
		return x.MyMemberListData
	}
	return nil
}

func (x *UnionFightPrepareDataSync) GetOtherMemberListData() []*UnionFightMemberData {
	if x != nil {
		return x.OtherMemberListData
	}
	return nil
}

type UnionFightMemberData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position   *int32             `protobuf:"varint,1,req,name=position" json:"position,omitempty"`
	Energy     *int32             `protobuf:"varint,2,opt,name=energy" json:"energy,omitempty"`
	PlayerData *PlayerBaseDataMsg `protobuf:"bytes,3,opt,name=playerData" json:"playerData,omitempty"`
	Outcome    *int32             `protobuf:"varint,4,opt,name=outcome" json:"outcome,omitempty"`
	IsRequest  *bool              `protobuf:"varint,5,opt,name=isRequest" json:"isRequest,omitempty"`
}

func (x *UnionFightMemberData) Reset() {
	*x = UnionFightMemberData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightMemberData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightMemberData) ProtoMessage() {}

func (x *UnionFightMemberData) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightMemberData.ProtoReflect.Descriptor instead.
func (*UnionFightMemberData) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{17}
}

func (x *UnionFightMemberData) GetPosition() int32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *UnionFightMemberData) GetEnergy() int32 {
	if x != nil && x.Energy != nil {
		return *x.Energy
	}
	return 0
}

func (x *UnionFightMemberData) GetPlayerData() *PlayerBaseDataMsg {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

func (x *UnionFightMemberData) GetOutcome() int32 {
	if x != nil && x.Outcome != nil {
		return *x.Outcome
	}
	return 0
}

func (x *UnionFightMemberData) GetIsRequest() bool {
	if x != nil && x.IsRequest != nil {
		return *x.IsRequest
	}
	return false
}

type UnionFightGroupData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionData  *OtherUnionData `protobuf:"bytes,1,opt,name=UnionData" json:"UnionData,omitempty"`
	Integral   *int64          `protobuf:"varint,2,opt,name=integral" json:"integral,omitempty"`
	Rank       *int32          `protobuf:"varint,3,opt,name=rank" json:"rank,omitempty"`
	Relegation *int32          `protobuf:"varint,4,opt,name=relegation" json:"relegation,omitempty"`
}

func (x *UnionFightGroupData) Reset() {
	*x = UnionFightGroupData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightGroupData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightGroupData) ProtoMessage() {}

func (x *UnionFightGroupData) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightGroupData.ProtoReflect.Descriptor instead.
func (*UnionFightGroupData) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{18}
}

func (x *UnionFightGroupData) GetUnionData() *OtherUnionData {
	if x != nil {
		return x.UnionData
	}
	return nil
}

func (x *UnionFightGroupData) GetIntegral() int64 {
	if x != nil && x.Integral != nil {
		return *x.Integral
	}
	return 0
}

func (x *UnionFightGroupData) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *UnionFightGroupData) GetRelegation() int32 {
	if x != nil && x.Relegation != nil {
		return *x.Relegation
	}
	return 0
}

type UnionFightFightPlaybackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position  *int32 `protobuf:"varint,1,req,name=position" json:"position,omitempty"`
	SessionId *int32 `protobuf:"varint,2,opt,name=SessionId" json:"SessionId,omitempty"`
	UnionId   *int64 `protobuf:"varint,3,opt,name=unionId" json:"unionId,omitempty"`
}

func (x *UnionFightFightPlaybackReq) Reset() {
	*x = UnionFightFightPlaybackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightFightPlaybackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightFightPlaybackReq) ProtoMessage() {}

func (x *UnionFightFightPlaybackReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightFightPlaybackReq.ProtoReflect.Descriptor instead.
func (*UnionFightFightPlaybackReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{19}
}

func (x *UnionFightFightPlaybackReq) GetPosition() int32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *UnionFightFightPlaybackReq) GetSessionId() int32 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *UnionFightFightPlaybackReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

type UnionFightFightPlaybackRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret             *int32             `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	BattleRecordMsg []*BattleRecordMsg `protobuf:"bytes,2,rep,name=battleRecordMsg" json:"battleRecordMsg,omitempty"`
	IsLeft          *bool              `protobuf:"varint,3,opt,name=isLeft" json:"isLeft,omitempty"`
}

func (x *UnionFightFightPlaybackRsp) Reset() {
	*x = UnionFightFightPlaybackRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightFightPlaybackRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightFightPlaybackRsp) ProtoMessage() {}

func (x *UnionFightFightPlaybackRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightFightPlaybackRsp.ProtoReflect.Descriptor instead.
func (*UnionFightFightPlaybackRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{20}
}

func (x *UnionFightFightPlaybackRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *UnionFightFightPlaybackRsp) GetBattleRecordMsg() []*BattleRecordMsg {
	if x != nil {
		return x.BattleRecordMsg
	}
	return nil
}

func (x *UnionFightFightPlaybackRsp) GetIsLeft() bool {
	if x != nil && x.IsLeft != nil {
		return *x.IsLeft
	}
	return false
}

type UnionFightSupremacyListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId *int64 `protobuf:"varint,1,req,name=unionId" json:"unionId,omitempty"`
}

func (x *UnionFightSupremacyListReq) Reset() {
	*x = UnionFightSupremacyListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightSupremacyListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightSupremacyListReq) ProtoMessage() {}

func (x *UnionFightSupremacyListReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightSupremacyListReq.ProtoReflect.Descriptor instead.
func (*UnionFightSupremacyListReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{21}
}

func (x *UnionFightSupremacyListReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

type UnionFightSupremacyListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32                     `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	UnionDataList []*UnionFightSupremacyData `protobuf:"bytes,2,rep,name=unionDataList" json:"unionDataList,omitempty"`
	MyUnionData   *UnionFightSupremacyData   `protobuf:"bytes,3,opt,name=myUnionData" json:"myUnionData,omitempty"`
	Worship       *bool                      `protobuf:"varint,4,opt,name=worship" json:"worship,omitempty"`
	FirstNum      *int32                     `protobuf:"varint,5,opt,name=firstNum" json:"firstNum,omitempty"`
}

func (x *UnionFightSupremacyListRsp) Reset() {
	*x = UnionFightSupremacyListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightSupremacyListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightSupremacyListRsp) ProtoMessage() {}

func (x *UnionFightSupremacyListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightSupremacyListRsp.ProtoReflect.Descriptor instead.
func (*UnionFightSupremacyListRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{22}
}

func (x *UnionFightSupremacyListRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *UnionFightSupremacyListRsp) GetUnionDataList() []*UnionFightSupremacyData {
	if x != nil {
		return x.UnionDataList
	}
	return nil
}

func (x *UnionFightSupremacyListRsp) GetMyUnionData() *UnionFightSupremacyData {
	if x != nil {
		return x.MyUnionData
	}
	return nil
}

func (x *UnionFightSupremacyListRsp) GetWorship() bool {
	if x != nil && x.Worship != nil {
		return *x.Worship
	}
	return false
}

func (x *UnionFightSupremacyListRsp) GetFirstNum() int32 {
	if x != nil && x.FirstNum != nil {
		return *x.FirstNum
	}
	return 0
}

type UnionFightSupremacyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionData *OtherUnionData `protobuf:"bytes,1,opt,name=UnionData" json:"UnionData,omitempty"`
	Integral  *int64          `protobuf:"varint,2,opt,name=integral" json:"integral,omitempty"`
	Rank      *int32          `protobuf:"varint,3,opt,name=rank" json:"rank,omitempty"`
}

func (x *UnionFightSupremacyData) Reset() {
	*x = UnionFightSupremacyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightSupremacyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightSupremacyData) ProtoMessage() {}

func (x *UnionFightSupremacyData) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightSupremacyData.ProtoReflect.Descriptor instead.
func (*UnionFightSupremacyData) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{23}
}

func (x *UnionFightSupremacyData) GetUnionData() *OtherUnionData {
	if x != nil {
		return x.UnionData
	}
	return nil
}

func (x *UnionFightSupremacyData) GetIntegral() int64 {
	if x != nil && x.Integral != nil {
		return *x.Integral
	}
	return 0
}

func (x *UnionFightSupremacyData) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

type UnionFightWorshipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId *int64 `protobuf:"varint,1,req,name=unionId" json:"unionId,omitempty"`
}

func (x *UnionFightWorshipReq) Reset() {
	*x = UnionFightWorshipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightWorshipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightWorshipReq) ProtoMessage() {}

func (x *UnionFightWorshipReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightWorshipReq.ProtoReflect.Descriptor instead.
func (*UnionFightWorshipReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{24}
}

func (x *UnionFightWorshipReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

type UnionFightWorshipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret             *int32                    `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Reward          *string                   `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
	PlayerShowData  *UnionFightWorshipShowMsg `protobuf:"bytes,3,opt,name=playerShowData" json:"playerShowData,omitempty"`
	PlayerUnionData *UnionFightSupremacyData  `protobuf:"bytes,4,opt,name=playerUnionData" json:"playerUnionData,omitempty"`
	FirstNum        *int32                    `protobuf:"varint,5,opt,name=firstNum" json:"firstNum,omitempty"`
}

func (x *UnionFightWorshipRsp) Reset() {
	*x = UnionFightWorshipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightWorshipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightWorshipRsp) ProtoMessage() {}

func (x *UnionFightWorshipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightWorshipRsp.ProtoReflect.Descriptor instead.
func (*UnionFightWorshipRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{25}
}

func (x *UnionFightWorshipRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *UnionFightWorshipRsp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *UnionFightWorshipRsp) GetPlayerShowData() *UnionFightWorshipShowMsg {
	if x != nil {
		return x.PlayerShowData
	}
	return nil
}

func (x *UnionFightWorshipRsp) GetPlayerUnionData() *UnionFightSupremacyData {
	if x != nil {
		return x.PlayerUnionData
	}
	return nil
}

func (x *UnionFightWorshipRsp) GetFirstNum() int32 {
	if x != nil && x.FirstNum != nil {
		return *x.FirstNum
	}
	return 0
}

type UnionFightWorshipShowMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId         *int64             `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	ServerId         *int64             `protobuf:"varint,2,req,name=serverId" json:"serverId,omitempty"`
	NickName         *string            `protobuf:"bytes,3,req,name=nickName" json:"nickName,omitempty"`
	Pet              []int32            `protobuf:"varint,4,rep,name=pet" json:"pet,omitempty"`
	Spirit           []int32            `protobuf:"varint,5,rep,name=spirit" json:"spirit,omitempty"`
	AppearanceId     *int32             `protobuf:"varint,6,opt,name=appearanceId" json:"appearanceId,omitempty"`
	EquipCloudId     *int32             `protobuf:"varint,7,opt,name=equipCloudId" json:"equipCloudId,omitempty"`
	RealmsId         *int32             `protobuf:"varint,8,opt,name=realmsId" json:"realmsId,omitempty"`
	Time             *int64             `protobuf:"varint,9,opt,name=time" json:"time,omitempty"`
	Rank             *int32             `protobuf:"varint,10,opt,name=rank" json:"rank,omitempty"`
	HeadIcon         *int32             `protobuf:"varint,11,opt,name=headIcon" json:"headIcon,omitempty"`
	WxHeadUrl        *string            `protobuf:"bytes,12,opt,name=wxHeadUrl" json:"wxHeadUrl,omitempty"`
	HeadInfo         *PlayerHeadDataMsg `protobuf:"bytes,13,opt,name=headInfo" json:"headInfo,omitempty"`
	PetSoulShapeList []int32            `protobuf:"varint,14,rep,name=petSoulShapeList" json:"petSoulShapeList,omitempty"`
	TitleId          *int32             `protobuf:"varint,15,opt,name=titleId" json:"titleId,omitempty"`
	PetLinkageId     []int32            `protobuf:"varint,16,rep,name=petLinkageId" json:"petLinkageId,omitempty"`
	SpiritLinkageId  []int32            `protobuf:"varint,17,rep,name=spiritLinkageId" json:"spiritLinkageId,omitempty"`
}

func (x *UnionFightWorshipShowMsg) Reset() {
	*x = UnionFightWorshipShowMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightWorshipShowMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightWorshipShowMsg) ProtoMessage() {}

func (x *UnionFightWorshipShowMsg) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightWorshipShowMsg.ProtoReflect.Descriptor instead.
func (*UnionFightWorshipShowMsg) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{26}
}

func (x *UnionFightWorshipShowMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *UnionFightWorshipShowMsg) GetServerId() int64 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

func (x *UnionFightWorshipShowMsg) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *UnionFightWorshipShowMsg) GetPet() []int32 {
	if x != nil {
		return x.Pet
	}
	return nil
}

func (x *UnionFightWorshipShowMsg) GetSpirit() []int32 {
	if x != nil {
		return x.Spirit
	}
	return nil
}

func (x *UnionFightWorshipShowMsg) GetAppearanceId() int32 {
	if x != nil && x.AppearanceId != nil {
		return *x.AppearanceId
	}
	return 0
}

func (x *UnionFightWorshipShowMsg) GetEquipCloudId() int32 {
	if x != nil && x.EquipCloudId != nil {
		return *x.EquipCloudId
	}
	return 0
}

func (x *UnionFightWorshipShowMsg) GetRealmsId() int32 {
	if x != nil && x.RealmsId != nil {
		return *x.RealmsId
	}
	return 0
}

func (x *UnionFightWorshipShowMsg) GetTime() int64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *UnionFightWorshipShowMsg) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *UnionFightWorshipShowMsg) GetHeadIcon() int32 {
	if x != nil && x.HeadIcon != nil {
		return *x.HeadIcon
	}
	return 0
}

func (x *UnionFightWorshipShowMsg) GetWxHeadUrl() string {
	if x != nil && x.WxHeadUrl != nil {
		return *x.WxHeadUrl
	}
	return ""
}

func (x *UnionFightWorshipShowMsg) GetHeadInfo() *PlayerHeadDataMsg {
	if x != nil {
		return x.HeadInfo
	}
	return nil
}

func (x *UnionFightWorshipShowMsg) GetPetSoulShapeList() []int32 {
	if x != nil {
		return x.PetSoulShapeList
	}
	return nil
}

func (x *UnionFightWorshipShowMsg) GetTitleId() int32 {
	if x != nil && x.TitleId != nil {
		return *x.TitleId
	}
	return 0
}

func (x *UnionFightWorshipShowMsg) GetPetLinkageId() []int32 {
	if x != nil {
		return x.PetLinkageId
	}
	return nil
}

func (x *UnionFightWorshipShowMsg) GetSpiritLinkageId() []int32 {
	if x != nil {
		return x.SpiritLinkageId
	}
	return nil
}

type UnionFightRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId *int32 `protobuf:"varint,1,req,name=sessionId" json:"sessionId,omitempty"`
	UnionId   *int64 `protobuf:"varint,2,req,name=unionId" json:"unionId,omitempty"`
}

func (x *UnionFightRecordReq) Reset() {
	*x = UnionFightRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightRecordReq) ProtoMessage() {}

func (x *UnionFightRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightRecordReq.ProtoReflect.Descriptor instead.
func (*UnionFightRecordReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{27}
}

func (x *UnionFightRecordReq) GetSessionId() int32 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *UnionFightRecordReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

type UnionFightRecordRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32                  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	RecordData []*UnionFightRecordData `protobuf:"bytes,2,rep,name=recordData" json:"recordData,omitempty"`
}

func (x *UnionFightRecordRsp) Reset() {
	*x = UnionFightRecordRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightRecordRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightRecordRsp) ProtoMessage() {}

func (x *UnionFightRecordRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightRecordRsp.ProtoReflect.Descriptor instead.
func (*UnionFightRecordRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{28}
}

func (x *UnionFightRecordRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *UnionFightRecordRsp) GetRecordData() []*UnionFightRecordData {
	if x != nil {
		return x.RecordData
	}
	return nil
}

type UnionFightRecordData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeftUnionData       *OtherUnionData         `protobuf:"bytes,1,opt,name=leftUnionData" json:"leftUnionData,omitempty"`
	RightUnionData      *OtherUnionData         `protobuf:"bytes,2,opt,name=rightUnionData" json:"rightUnionData,omitempty"`
	LeftMemberListData  []*UnionFightMemberData `protobuf:"bytes,3,rep,name=leftMemberListData" json:"leftMemberListData,omitempty"`
	RightMemberListData []*UnionFightMemberData `protobuf:"bytes,4,rep,name=rightMemberListData" json:"rightMemberListData,omitempty"`
	IsSuccess           *int32                  `protobuf:"varint,5,opt,name=isSuccess" json:"isSuccess,omitempty"`
	LeftDanData         *UnionFightDanMsg       `protobuf:"bytes,6,opt,name=leftDanData" json:"leftDanData,omitempty"`
	RightDanData        *UnionFightDanMsg       `protobuf:"bytes,7,opt,name=rightDanData" json:"rightDanData,omitempty"`
	NeedShow            *bool                   `protobuf:"varint,8,opt,name=needShow" json:"needShow,omitempty"`
}

func (x *UnionFightRecordData) Reset() {
	*x = UnionFightRecordData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightRecordData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightRecordData) ProtoMessage() {}

func (x *UnionFightRecordData) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightRecordData.ProtoReflect.Descriptor instead.
func (*UnionFightRecordData) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{29}
}

func (x *UnionFightRecordData) GetLeftUnionData() *OtherUnionData {
	if x != nil {
		return x.LeftUnionData
	}
	return nil
}

func (x *UnionFightRecordData) GetRightUnionData() *OtherUnionData {
	if x != nil {
		return x.RightUnionData
	}
	return nil
}

func (x *UnionFightRecordData) GetLeftMemberListData() []*UnionFightMemberData {
	if x != nil {
		return x.LeftMemberListData
	}
	return nil
}

func (x *UnionFightRecordData) GetRightMemberListData() []*UnionFightMemberData {
	if x != nil {
		return x.RightMemberListData
	}
	return nil
}

func (x *UnionFightRecordData) GetIsSuccess() int32 {
	if x != nil && x.IsSuccess != nil {
		return *x.IsSuccess
	}
	return 0
}

func (x *UnionFightRecordData) GetLeftDanData() *UnionFightDanMsg {
	if x != nil {
		return x.LeftDanData
	}
	return nil
}

func (x *UnionFightRecordData) GetRightDanData() *UnionFightDanMsg {
	if x != nil {
		return x.RightDanData
	}
	return nil
}

func (x *UnionFightRecordData) GetNeedShow() bool {
	if x != nil && x.NeedShow != nil {
		return *x.NeedShow
	}
	return false
}

type UnionFightDanMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastWeekDan  *int32 `protobuf:"varint,1,opt,name=lastWeekDan" json:"lastWeekDan,omitempty"`
	LastWeekStar *int32 `protobuf:"varint,2,opt,name=lastWeekStar" json:"lastWeekStar,omitempty"`
}

func (x *UnionFightDanMsg) Reset() {
	*x = UnionFightDanMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightDanMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightDanMsg) ProtoMessage() {}

func (x *UnionFightDanMsg) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightDanMsg.ProtoReflect.Descriptor instead.
func (*UnionFightDanMsg) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{30}
}

func (x *UnionFightDanMsg) GetLastWeekDan() int32 {
	if x != nil && x.LastWeekDan != nil {
		return *x.LastWeekDan
	}
	return 0
}

func (x *UnionFightDanMsg) GetLastWeekStar() int32 {
	if x != nil && x.LastWeekStar != nil {
		return *x.LastWeekStar
	}
	return 0
}

type UnionFightGetHistoryDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId *int64 `protobuf:"varint,1,opt,name=unionId" json:"unionId,omitempty"`
}

func (x *UnionFightGetHistoryDataReq) Reset() {
	*x = UnionFightGetHistoryDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightGetHistoryDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightGetHistoryDataReq) ProtoMessage() {}

func (x *UnionFightGetHistoryDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightGetHistoryDataReq.ProtoReflect.Descriptor instead.
func (*UnionFightGetHistoryDataReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{31}
}

func (x *UnionFightGetHistoryDataReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

type UnionFightGetHistoryDataRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistoryMaxDan  *int32 `protobuf:"varint,1,opt,name=historyMaxDan" json:"historyMaxDan,omitempty"`
	HistoryMaxStar *int32 `protobuf:"varint,2,opt,name=historyMaxStar" json:"historyMaxStar,omitempty"`
	Ret            *int32 `protobuf:"varint,3,opt,name=ret" json:"ret,omitempty"`
}

func (x *UnionFightGetHistoryDataRsp) Reset() {
	*x = UnionFightGetHistoryDataRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightGetHistoryDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightGetHistoryDataRsp) ProtoMessage() {}

func (x *UnionFightGetHistoryDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightGetHistoryDataRsp.ProtoReflect.Descriptor instead.
func (*UnionFightGetHistoryDataRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{32}
}

func (x *UnionFightGetHistoryDataRsp) GetHistoryMaxDan() int32 {
	if x != nil && x.HistoryMaxDan != nil {
		return *x.HistoryMaxDan
	}
	return 0
}

func (x *UnionFightGetHistoryDataRsp) GetHistoryMaxStar() int32 {
	if x != nil && x.HistoryMaxStar != nil {
		return *x.HistoryMaxStar
	}
	return 0
}

func (x *UnionFightGetHistoryDataRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type UnionFightChangeLockStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *UnionFightLockType `protobuf:"varint,1,opt,name=type,enum=com.yq.msg.CityMsg.UnionFightLockType" json:"type,omitempty"`
}

func (x *UnionFightChangeLockStatusReq) Reset() {
	*x = UnionFightChangeLockStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightChangeLockStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightChangeLockStatusReq) ProtoMessage() {}

func (x *UnionFightChangeLockStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightChangeLockStatusReq.ProtoReflect.Descriptor instead.
func (*UnionFightChangeLockStatusReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{33}
}

func (x *UnionFightChangeLockStatusReq) GetType() UnionFightLockType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return UnionFightLockType_UnionFightLockType_Lock
}

type UnionFightChangeLockStatusRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *UnionFightChangeLockStatusRsp) Reset() {
	*x = UnionFightChangeLockStatusRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightChangeLockStatusRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightChangeLockStatusRsp) ProtoMessage() {}

func (x *UnionFightChangeLockStatusRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightChangeLockStatusRsp.ProtoReflect.Descriptor instead.
func (*UnionFightChangeLockStatusRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{34}
}

func (x *UnionFightChangeLockStatusRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type UnionFightGetLockedDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JustGetLock *int32 `protobuf:"varint,1,opt,name=justGetLock" json:"justGetLock,omitempty"`
}

func (x *UnionFightGetLockedDetailReq) Reset() {
	*x = UnionFightGetLockedDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightGetLockedDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightGetLockedDetailReq) ProtoMessage() {}

func (x *UnionFightGetLockedDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightGetLockedDetailReq.ProtoReflect.Descriptor instead.
func (*UnionFightGetLockedDetailReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{35}
}

func (x *UnionFightGetLockedDetailReq) GetJustGetLock() int32 {
	if x != nil && x.JustGetLock != nil {
		return *x.JustGetLock
	}
	return 0
}

type UnionFightGetLockedDetailRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32               `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	IsLock       *bool                `protobuf:"varint,2,opt,name=isLock" json:"isLock,omitempty"`
	PlayerDetail *PlayerDetailDataMsg `protobuf:"bytes,3,opt,name=playerDetail" json:"playerDetail,omitempty"`
}

func (x *UnionFightGetLockedDetailRsp) Reset() {
	*x = UnionFightGetLockedDetailRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightGetLockedDetailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightGetLockedDetailRsp) ProtoMessage() {}

func (x *UnionFightGetLockedDetailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightGetLockedDetailRsp.ProtoReflect.Descriptor instead.
func (*UnionFightGetLockedDetailRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{36}
}

func (x *UnionFightGetLockedDetailRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *UnionFightGetLockedDetailRsp) GetIsLock() bool {
	if x != nil && x.IsLock != nil {
		return *x.IsLock
	}
	return false
}

func (x *UnionFightGetLockedDetailRsp) GetPlayerDetail() *PlayerDetailDataMsg {
	if x != nil {
		return x.PlayerDetail
	}
	return nil
}

type UnionFightGetTodayResultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnionFightGetTodayResultReq) Reset() {
	*x = UnionFightGetTodayResultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightGetTodayResultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightGetTodayResultReq) ProtoMessage() {}

func (x *UnionFightGetTodayResultReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightGetTodayResultReq.ProtoReflect.Descriptor instead.
func (*UnionFightGetTodayResultReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{37}
}

type UnionFightGetTodayResultRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret            *int32          `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	MyUnionData    *OtherUnionData `protobuf:"bytes,2,opt,name=myUnionData" json:"myUnionData,omitempty"`
	OtherUnionData *OtherUnionData `protobuf:"bytes,3,opt,name=otherUnionData" json:"otherUnionData,omitempty"`
	MyWinScore     *int32          `protobuf:"varint,4,opt,name=myWinScore" json:"myWinScore,omitempty"`
	OtherWinScore  *int32          `protobuf:"varint,5,opt,name=otherWinScore" json:"otherWinScore,omitempty"`
	Dan            *int32          `protobuf:"varint,6,opt,name=dan" json:"dan,omitempty"`
}

func (x *UnionFightGetTodayResultRsp) Reset() {
	*x = UnionFightGetTodayResultRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightGetTodayResultRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightGetTodayResultRsp) ProtoMessage() {}

func (x *UnionFightGetTodayResultRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightGetTodayResultRsp.ProtoReflect.Descriptor instead.
func (*UnionFightGetTodayResultRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{38}
}

func (x *UnionFightGetTodayResultRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *UnionFightGetTodayResultRsp) GetMyUnionData() *OtherUnionData {
	if x != nil {
		return x.MyUnionData
	}
	return nil
}

func (x *UnionFightGetTodayResultRsp) GetOtherUnionData() *OtherUnionData {
	if x != nil {
		return x.OtherUnionData
	}
	return nil
}

func (x *UnionFightGetTodayResultRsp) GetMyWinScore() int32 {
	if x != nil && x.MyWinScore != nil {
		return *x.MyWinScore
	}
	return 0
}

func (x *UnionFightGetTodayResultRsp) GetOtherWinScore() int32 {
	if x != nil && x.OtherWinScore != nil {
		return *x.OtherWinScore
	}
	return 0
}

func (x *UnionFightGetTodayResultRsp) GetDan() int32 {
	if x != nil && x.Dan != nil {
		return *x.Dan
	}
	return 0
}

type UnionFightGetUnionRankListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId *int64 `protobuf:"varint,1,req,name=unionId" json:"unionId,omitempty"`
}

func (x *UnionFightGetUnionRankListReq) Reset() {
	*x = UnionFightGetUnionRankListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightGetUnionRankListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightGetUnionRankListReq) ProtoMessage() {}

func (x *UnionFightGetUnionRankListReq) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightGetUnionRankListReq.ProtoReflect.Descriptor instead.
func (*UnionFightGetUnionRankListReq) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{39}
}

func (x *UnionFightGetUnionRankListReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

type UnionFightGetUnionRankListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32                 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	UnionDataList []*UnionFightGroupData `protobuf:"bytes,2,rep,name=unionDataList" json:"unionDataList,omitempty"`
	MyUnionData   *UnionFightGroupData   `protobuf:"bytes,3,opt,name=myUnionData" json:"myUnionData,omitempty"`
}

func (x *UnionFightGetUnionRankListRsp) Reset() {
	*x = UnionFightGetUnionRankListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UnionFight_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionFightGetUnionRankListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionFightGetUnionRankListRsp) ProtoMessage() {}

func (x *UnionFightGetUnionRankListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_UnionFight_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionFightGetUnionRankListRsp.ProtoReflect.Descriptor instead.
func (*UnionFightGetUnionRankListRsp) Descriptor() ([]byte, []int) {
	return file_UnionFight_proto_rawDescGZIP(), []int{40}
}

func (x *UnionFightGetUnionRankListRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *UnionFightGetUnionRankListRsp) GetUnionDataList() []*UnionFightGroupData {
	if x != nil {
		return x.UnionDataList
	}
	return nil
}

func (x *UnionFightGetUnionRankListRsp) GetMyUnionData() *UnionFightGroupData {
	if x != nil {
		return x.MyUnionData
	}
	return nil
}

var File_UnionFight_proto protoreflect.FileDescriptor

var file_UnionFight_proto_rawDesc = []byte{
	0x0a, 0x10, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0b, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x11, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x4d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x6b, 0x0a, 0x11, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x4d,
	0x61, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74,
	0x57, 0x65, 0x65, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x2e,
	0x0a, 0x12, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x26,
	0x0a, 0x12, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0xeb, 0x02, 0x0a, 0x17, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79,
	0x6e, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x68, 0x61, 0x73, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x68, 0x61, 0x73, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61,
	0x73, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x44, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x44, 0x61, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x53, 0x74, 0x61, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x52, 0x61, 0x6e, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x57, 0x65, 0x65, 0x6b,
	0x52, 0x61, 0x6e, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x52, 0x65, 0x64, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64,
	0x52, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x65, 0x64,
	0x53, 0x68, 0x6f, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x65, 0x65, 0x64,
	0x53, 0x68, 0x6f, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x57, 0x6f, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x57, 0x6f, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x22, 0x42, 0x0a, 0x12, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xda, 0x03, 0x0a, 0x12, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x12, 0x4a, 0x0a, 0x0e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a,
	0x0b, 0x6d, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x6d, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x10, 0x6d, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x6d, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5a, 0x0a, 0x13, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x13, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x44,
	0x61, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x57, 0x65,
	0x65, 0x6b, 0x44, 0x61, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x22, 0x30, 0x0a, 0x14, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x28, 0x0a,
	0x14, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x69, 0x0a, 0x15, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x29, 0x0a, 0x15, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x6b, 0x0a,
	0x17, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x55, 0x6e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x17, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x55, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x32, 0x0a, 0x16, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x16,
	0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x61, 0x6e, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x4d, 0x0a, 0x0d, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0b, 0x6d, 0x79, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x6d, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xcd, 0x01, 0x0a, 0x19, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63,
	0x12, 0x54, 0x0a, 0x10, 0x6d, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x6d, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5a, 0x0a, 0x13, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x13, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xc9, 0x01, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12,
	0x45, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa7,
	0x01, 0x0a, 0x13, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x1a, 0x55, 0x6e, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x1a, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x4d, 0x0a, 0x0f, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x0f, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x4c, 0x65, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x65,
	0x66, 0x74, 0x22, 0x36, 0x0a, 0x1a, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x86, 0x02, 0x0a, 0x1a, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61,
	0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x51, 0x0a, 0x0d, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0d, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4d,
	0x0a, 0x0b, 0x6d, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0b, 0x6d, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x77, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x77, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x75, 0x6d, 0x22, 0x8b, 0x01, 0x0a, 0x17, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x40, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x22, 0x30, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x57,
	0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x89, 0x02, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x57, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x54, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x68, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x57, 0x6f,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x73, 0x67, 0x52, 0x0e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x55, 0x0a, 0x0f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x22,
	0xb5, 0x04, 0x0a, 0x18, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x57, 0x6f,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x70,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70,
	0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x78, 0x48, 0x65, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x78, 0x48, 0x65, 0x61, 0x64, 0x55, 0x72, 0x6c,
	0x12, 0x41, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x65,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x6c, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x05, 0x52, 0x10, 0x70,
	0x65, 0x74, 0x53, 0x6f, 0x75, 0x6c, 0x53, 0x68, 0x61, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x10, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0c, 0x70, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x11, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x13, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x13, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12,
	0x48, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0xae, 0x04, 0x0a, 0x14, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x48, 0x0a, 0x0d, 0x6c, 0x65, 0x66, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x6c,
	0x65, 0x66, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x0e,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x72, 0x69, 0x67, 0x68, 0x74, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x58, 0x0a, 0x12, 0x6c, 0x65, 0x66, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12,
	0x6c, 0x65, 0x66, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x5a, 0x0a, 0x13, 0x72, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x13, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x46, 0x0a, 0x0b,
	0x6c, 0x65, 0x66, 0x74, 0x44, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x44, 0x61, 0x6e, 0x4d, 0x73, 0x67, 0x52, 0x0b, 0x6c, 0x65, 0x66, 0x74, 0x44, 0x61, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x0c, 0x72, 0x69, 0x67, 0x68, 0x74, 0x44, 0x61, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x44, 0x61, 0x6e, 0x4d, 0x73, 0x67,
	0x52, 0x0c, 0x72, 0x69, 0x67, 0x68, 0x74, 0x44, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x58, 0x0a, 0x10, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x44, 0x61, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x44, 0x61, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x44, 0x61, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x53, 0x74, 0x61, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x57, 0x65, 0x65, 0x6b,
	0x53, 0x74, 0x61, 0x72, 0x22, 0x37, 0x0a, 0x1b, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x7d, 0x0a,
	0x1b, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x47, 0x65, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x0d,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x61, 0x78, 0x44, 0x61, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x61, 0x78, 0x44,
	0x61, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x61, 0x78,
	0x53, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x5b, 0x0a, 0x1d,
	0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x31, 0x0a, 0x1d, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x40, 0x0a, 0x1c,
	0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x6a, 0x75, 0x73, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6a, 0x75, 0x73, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x22, 0x95,
	0x01, 0x0a, 0x1c, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x47, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x4b, 0x0a, 0x0c, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x22, 0x99, 0x02, 0x0a, 0x1b, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x44, 0x0a, 0x0b, 0x6d, 0x79, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0b, 0x6d, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a,
	0x0e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x79, 0x57,
	0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d,
	0x79, 0x57, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x57, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61,
	0x6e, 0x22, 0x39, 0x0a, 0x1d, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xcb, 0x01, 0x0a,
	0x1d, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x47, 0x65, 0x74, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x4d, 0x0a, 0x0d, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0d, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x49, 0x0a, 0x0b, 0x6d, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x6d,
	0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2a, 0xc5, 0x07, 0x0a, 0x0c, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x12, 0x15, 0x0a, 0x11, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x4e, 0x75, 0x6c, 0x6c,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x11, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x50, 0x62, 0x5f, 0x4d, 0x61, 0x69, 0x6e, 0x10, 0xed, 0xce, 0x0c, 0x12, 0x18, 0x0a, 0x12, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x10, 0xee, 0xce, 0x0c, 0x12, 0x18, 0x0a, 0x12, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x10, 0xef, 0xce, 0x0c, 0x12,
	0x1a, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xf0, 0xce, 0x0c, 0x12, 0x1b, 0x0a, 0x15, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0xf1, 0xce, 0x0c, 0x12, 0x1d, 0x0a, 0x17, 0x55, 0x6e, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x55, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0xf2, 0xce, 0x0c, 0x12, 0x1d, 0x0a, 0x17, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x52, 0x61,
	0x6e, 0x6b, 0x10, 0xf3, 0xce, 0x0c, 0x12, 0x18, 0x0a, 0x12, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x10, 0xf4, 0xce, 0x0c,
	0x12, 0x21, 0x0a, 0x1b, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62,
	0x5f, 0x53, 0x75, 0x70, 0x72, 0x65, 0x6d, 0x61, 0x63, 0x79, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x10,
	0xf5, 0xce, 0x0c, 0x12, 0x1a, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x50, 0x62, 0x5f, 0x57, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x10, 0xf6, 0xce, 0x0c, 0x12,
	0x1c, 0x0a, 0x16, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f,
	0x50, 0x6c, 0x61, 0x79, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x10, 0xf7, 0xce, 0x0c, 0x12, 0x20, 0x0a,
	0x1a, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x10, 0xf8, 0xce, 0x0c, 0x12,
	0x1f, 0x0a, 0x19, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x10, 0xf9, 0xce, 0x0c,
	0x12, 0x24, 0x0a, 0x1e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62,
	0x5f, 0x47, 0x65, 0x74, 0x5f, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x10, 0xfa, 0xce, 0x0c, 0x12, 0x25, 0x0a, 0x1f, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x4c, 0x6f,
	0x63, 0x6b, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0xfb, 0xce, 0x0c, 0x12, 0x23, 0x0a,
	0x1d, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x47, 0x65,
	0x74, 0x5f, 0x54, 0x6f, 0x44, 0x61, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x10, 0xfc,
	0xce, 0x0c, 0x12, 0x26, 0x0a, 0x20, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x50, 0x62, 0x5f, 0x47, 0x65, 0x74, 0x5f, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x61, 0x6e,
	0x6b, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x10, 0xfd, 0xce, 0x0c, 0x12, 0x24, 0x0a, 0x1e, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x10, 0x80, 0xcf, 0x0c,
	0x12, 0x30, 0x0a, 0x2a, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62,
	0x5f, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x53, 0x79, 0x6e, 0x63, 0x10, 0x81,
	0xcf, 0x0c, 0x12, 0x2a, 0x0a, 0x24, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x50, 0x62, 0x5f, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x53,
	0x65, 0x6e, 0x64, 0x5f, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0x82, 0xcf, 0x0c, 0x12, 0x2e,
	0x0a, 0x28, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x43,
	0x72, 0x6f, 0x73, 0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x53, 0x79, 0x6e, 0x63, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x10, 0x83, 0xcf, 0x0c, 0x12, 0x2c,
	0x0a, 0x26, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x43,
	0x72, 0x6f, 0x73, 0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x44, 0x61, 0x6e, 0x5f, 0x53,
	0x79, 0x6e, 0x63, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x10, 0x84, 0xcf, 0x0c, 0x12, 0x2d, 0x0a, 0x27,
	0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x43, 0x72, 0x6f,
	0x73, 0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x5f, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x10, 0x85, 0xcf, 0x0c, 0x12, 0x26, 0x0a, 0x20, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x62, 0x5f, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x57, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x10,
	0x86, 0xcf, 0x0c, 0x12, 0x2e, 0x0a, 0x28, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x50, 0x62, 0x5f, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x5f,
	0x53, 0x79, 0x6e, 0x63, 0x5f, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x10,
	0x87, 0xcf, 0x0c, 0x12, 0x1d, 0x0a, 0x17, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x50, 0x62, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x53, 0x79, 0x6e, 0x63, 0x10, 0x8a,
	0xcf, 0x0c, 0x2a, 0x50, 0x0a, 0x12, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x6e, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c,
	0x6f, 0x63, 0x6b, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x6e, 0x4c, 0x6f,
	0x63, 0x6b, 0x10, 0x02, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x69, 0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78, 0x64, 0x64,
	0x71, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_UnionFight_proto_rawDescOnce sync.Once
	file_UnionFight_proto_rawDescData = file_UnionFight_proto_rawDesc
)

func file_UnionFight_proto_rawDescGZIP() []byte {
	file_UnionFight_proto_rawDescOnce.Do(func() {
		file_UnionFight_proto_rawDescData = protoimpl.X.CompressGZIP(file_UnionFight_proto_rawDescData)
	})
	return file_UnionFight_proto_rawDescData
}

var file_UnionFight_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_UnionFight_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_UnionFight_proto_goTypes = []any{
	(UnionFightPb)(0),                     // 0: com.yq.msg.CityMsg.UnionFightPb
	(UnionFightLockType)(0),               // 1: com.yq.msg.CityMsg.UnionFightLockType
	(*UnionFightMainReq)(nil),             // 2: com.yq.msg.CityMsg.UnionFightMainReq
	(*UnionFightMainRsp)(nil),             // 3: com.yq.msg.CityMsg.UnionFightMainRsp
	(*UnionFightApplyReq)(nil),            // 4: com.yq.msg.CityMsg.UnionFightApplyReq
	(*UnionFightApplyRsp)(nil),            // 5: com.yq.msg.CityMsg.UnionFightApplyRsp
	(*UnionFightApplyDataSync)(nil),       // 6: com.yq.msg.CityMsg.UnionFightApplyDataSync
	(*UnionFightEnterReq)(nil),            // 7: com.yq.msg.CityMsg.UnionFightEnterReq
	(*UnionFightEnterRsp)(nil),            // 8: com.yq.msg.CityMsg.UnionFightEnterRsp
	(*UnionFightLeaveReq)(nil),            // 9: com.yq.msg.CityMsg.UnionFightLeaveReq
	(*UnionFightRequestReq)(nil),          // 10: com.yq.msg.CityMsg.UnionFightRequestReq
	(*UnionFightRequestRsp)(nil),          // 11: com.yq.msg.CityMsg.UnionFightRequestRsp
	(*UnionFightPositionReq)(nil),         // 12: com.yq.msg.CityMsg.UnionFightPositionReq
	(*UnionFightPositionRsp)(nil),         // 13: com.yq.msg.CityMsg.UnionFightPositionRsp
	(*UnionFightUnPositionReq)(nil),       // 14: com.yq.msg.CityMsg.UnionFightUnPositionReq
	(*UnionFightUnPositionRsp)(nil),       // 15: com.yq.msg.CityMsg.UnionFightUnPositionRsp
	(*UnionFightGroupRankReq)(nil),        // 16: com.yq.msg.CityMsg.UnionFightGroupRankReq
	(*UnionFightGroupRankRsp)(nil),        // 17: com.yq.msg.CityMsg.UnionFightGroupRankRsp
	(*UnionFightPrepareDataSync)(nil),     // 18: com.yq.msg.CityMsg.UnionFightPrepareDataSync
	(*UnionFightMemberData)(nil),          // 19: com.yq.msg.CityMsg.UnionFightMemberData
	(*UnionFightGroupData)(nil),           // 20: com.yq.msg.CityMsg.UnionFightGroupData
	(*UnionFightFightPlaybackReq)(nil),    // 21: com.yq.msg.CityMsg.UnionFightFightPlaybackReq
	(*UnionFightFightPlaybackRsp)(nil),    // 22: com.yq.msg.CityMsg.UnionFightFightPlaybackRsp
	(*UnionFightSupremacyListReq)(nil),    // 23: com.yq.msg.CityMsg.UnionFightSupremacyListReq
	(*UnionFightSupremacyListRsp)(nil),    // 24: com.yq.msg.CityMsg.UnionFightSupremacyListRsp
	(*UnionFightSupremacyData)(nil),       // 25: com.yq.msg.CityMsg.UnionFightSupremacyData
	(*UnionFightWorshipReq)(nil),          // 26: com.yq.msg.CityMsg.UnionFightWorshipReq
	(*UnionFightWorshipRsp)(nil),          // 27: com.yq.msg.CityMsg.UnionFightWorshipRsp
	(*UnionFightWorshipShowMsg)(nil),      // 28: com.yq.msg.CityMsg.UnionFightWorshipShowMsg
	(*UnionFightRecordReq)(nil),           // 29: com.yq.msg.CityMsg.UnionFightRecordReq
	(*UnionFightRecordRsp)(nil),           // 30: com.yq.msg.CityMsg.UnionFightRecordRsp
	(*UnionFightRecordData)(nil),          // 31: com.yq.msg.CityMsg.UnionFightRecordData
	(*UnionFightDanMsg)(nil),              // 32: com.yq.msg.CityMsg.UnionFightDanMsg
	(*UnionFightGetHistoryDataReq)(nil),   // 33: com.yq.msg.CityMsg.UnionFightGetHistoryDataReq
	(*UnionFightGetHistoryDataRsp)(nil),   // 34: com.yq.msg.CityMsg.UnionFightGetHistoryDataRsp
	(*UnionFightChangeLockStatusReq)(nil), // 35: com.yq.msg.CityMsg.UnionFightChangeLockStatusReq
	(*UnionFightChangeLockStatusRsp)(nil), // 36: com.yq.msg.CityMsg.UnionFightChangeLockStatusRsp
	(*UnionFightGetLockedDetailReq)(nil),  // 37: com.yq.msg.CityMsg.UnionFightGetLockedDetailReq
	(*UnionFightGetLockedDetailRsp)(nil),  // 38: com.yq.msg.CityMsg.UnionFightGetLockedDetailRsp
	(*UnionFightGetTodayResultReq)(nil),   // 39: com.yq.msg.CityMsg.UnionFightGetTodayResultReq
	(*UnionFightGetTodayResultRsp)(nil),   // 40: com.yq.msg.CityMsg.UnionFightGetTodayResultRsp
	(*UnionFightGetUnionRankListReq)(nil), // 41: com.yq.msg.CityMsg.UnionFightGetUnionRankListReq
	(*UnionFightGetUnionRankListRsp)(nil), // 42: com.yq.msg.CityMsg.UnionFightGetUnionRankListRsp
	(*OtherUnionData)(nil),                // 43: com.yq.msg.CityMsg.OtherUnionData
	(*PlayerBaseDataMsg)(nil),             // 44: com.yq.msg.CityMsg.PlayerBaseDataMsg
	(*BattleRecordMsg)(nil),               // 45: com.yq.msg.CityMsg.BattleRecordMsg
	(*PlayerHeadDataMsg)(nil),             // 46: com.yq.msg.CityMsg.PlayerHeadDataMsg
	(*PlayerDetailDataMsg)(nil),           // 47: com.yq.msg.CityMsg.PlayerDetailDataMsg
}
var file_UnionFight_proto_depIdxs = []int32{
	43, // 0: com.yq.msg.CityMsg.UnionFightEnterRsp.otherUnionData:type_name -> com.yq.msg.CityMsg.OtherUnionData
	43, // 1: com.yq.msg.CityMsg.UnionFightEnterRsp.myUnionData:type_name -> com.yq.msg.CityMsg.OtherUnionData
	19, // 2: com.yq.msg.CityMsg.UnionFightEnterRsp.myMemberListData:type_name -> com.yq.msg.CityMsg.UnionFightMemberData
	19, // 3: com.yq.msg.CityMsg.UnionFightEnterRsp.otherMemberListData:type_name -> com.yq.msg.CityMsg.UnionFightMemberData
	20, // 4: com.yq.msg.CityMsg.UnionFightGroupRankRsp.unionDataList:type_name -> com.yq.msg.CityMsg.UnionFightGroupData
	20, // 5: com.yq.msg.CityMsg.UnionFightGroupRankRsp.myUnionData:type_name -> com.yq.msg.CityMsg.UnionFightGroupData
	19, // 6: com.yq.msg.CityMsg.UnionFightPrepareDataSync.myMemberListData:type_name -> com.yq.msg.CityMsg.UnionFightMemberData
	19, // 7: com.yq.msg.CityMsg.UnionFightPrepareDataSync.otherMemberListData:type_name -> com.yq.msg.CityMsg.UnionFightMemberData
	44, // 8: com.yq.msg.CityMsg.UnionFightMemberData.playerData:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	43, // 9: com.yq.msg.CityMsg.UnionFightGroupData.UnionData:type_name -> com.yq.msg.CityMsg.OtherUnionData
	45, // 10: com.yq.msg.CityMsg.UnionFightFightPlaybackRsp.battleRecordMsg:type_name -> com.yq.msg.CityMsg.BattleRecordMsg
	25, // 11: com.yq.msg.CityMsg.UnionFightSupremacyListRsp.unionDataList:type_name -> com.yq.msg.CityMsg.UnionFightSupremacyData
	25, // 12: com.yq.msg.CityMsg.UnionFightSupremacyListRsp.myUnionData:type_name -> com.yq.msg.CityMsg.UnionFightSupremacyData
	43, // 13: com.yq.msg.CityMsg.UnionFightSupremacyData.UnionData:type_name -> com.yq.msg.CityMsg.OtherUnionData
	28, // 14: com.yq.msg.CityMsg.UnionFightWorshipRsp.playerShowData:type_name -> com.yq.msg.CityMsg.UnionFightWorshipShowMsg
	25, // 15: com.yq.msg.CityMsg.UnionFightWorshipRsp.playerUnionData:type_name -> com.yq.msg.CityMsg.UnionFightSupremacyData
	46, // 16: com.yq.msg.CityMsg.UnionFightWorshipShowMsg.headInfo:type_name -> com.yq.msg.CityMsg.PlayerHeadDataMsg
	31, // 17: com.yq.msg.CityMsg.UnionFightRecordRsp.recordData:type_name -> com.yq.msg.CityMsg.UnionFightRecordData
	43, // 18: com.yq.msg.CityMsg.UnionFightRecordData.leftUnionData:type_name -> com.yq.msg.CityMsg.OtherUnionData
	43, // 19: com.yq.msg.CityMsg.UnionFightRecordData.rightUnionData:type_name -> com.yq.msg.CityMsg.OtherUnionData
	19, // 20: com.yq.msg.CityMsg.UnionFightRecordData.leftMemberListData:type_name -> com.yq.msg.CityMsg.UnionFightMemberData
	19, // 21: com.yq.msg.CityMsg.UnionFightRecordData.rightMemberListData:type_name -> com.yq.msg.CityMsg.UnionFightMemberData
	32, // 22: com.yq.msg.CityMsg.UnionFightRecordData.leftDanData:type_name -> com.yq.msg.CityMsg.UnionFightDanMsg
	32, // 23: com.yq.msg.CityMsg.UnionFightRecordData.rightDanData:type_name -> com.yq.msg.CityMsg.UnionFightDanMsg
	1,  // 24: com.yq.msg.CityMsg.UnionFightChangeLockStatusReq.type:type_name -> com.yq.msg.CityMsg.UnionFightLockType
	47, // 25: com.yq.msg.CityMsg.UnionFightGetLockedDetailRsp.playerDetail:type_name -> com.yq.msg.CityMsg.PlayerDetailDataMsg
	43, // 26: com.yq.msg.CityMsg.UnionFightGetTodayResultRsp.myUnionData:type_name -> com.yq.msg.CityMsg.OtherUnionData
	43, // 27: com.yq.msg.CityMsg.UnionFightGetTodayResultRsp.otherUnionData:type_name -> com.yq.msg.CityMsg.OtherUnionData
	20, // 28: com.yq.msg.CityMsg.UnionFightGetUnionRankListRsp.unionDataList:type_name -> com.yq.msg.CityMsg.UnionFightGroupData
	20, // 29: com.yq.msg.CityMsg.UnionFightGetUnionRankListRsp.myUnionData:type_name -> com.yq.msg.CityMsg.UnionFightGroupData
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_UnionFight_proto_init() }
func file_UnionFight_proto_init() {
	if File_UnionFight_proto != nil {
		return
	}
	file_Common_proto_init()
	file_Battle_proto_init()
	file_Union_proto_init()
	file_WatchPlayer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_UnionFight_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightMainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightMainRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightApplyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightApplyDataSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightEnterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightEnterRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightLeaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightRequestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightRequestRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightPositionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightPositionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightUnPositionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightUnPositionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightGroupRankReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightGroupRankRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightPrepareDataSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightMemberData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightGroupData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightFightPlaybackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightFightPlaybackRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightSupremacyListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightSupremacyListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightSupremacyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightWorshipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightWorshipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightWorshipShowMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightRecordRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightRecordData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightDanMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightGetHistoryDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightGetHistoryDataRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightChangeLockStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightChangeLockStatusRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightGetLockedDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightGetLockedDetailRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightGetTodayResultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightGetTodayResultRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightGetUnionRankListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_UnionFight_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*UnionFightGetUnionRankListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_UnionFight_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_UnionFight_proto_goTypes,
		DependencyIndexes: file_UnionFight_proto_depIdxs,
		EnumInfos:         file_UnionFight_proto_enumTypes,
		MessageInfos:      file_UnionFight_proto_msgTypes,
	}.Build()
	File_UnionFight_proto = out.File
	file_UnionFight_proto_rawDesc = nil
	file_UnionFight_proto_goTypes = nil
	file_UnionFight_proto_depIdxs = nil
}
