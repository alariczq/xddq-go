// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: Tower.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TowerDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurPassId        *int32           `protobuf:"varint,1,req,name=curPassId" json:"curPassId,omitempty"`
	BuffData         []*BuffDataMsg   `protobuf:"bytes,2,rep,name=buffData" json:"buffData,omitempty"`
	PassMaxId        *int32           `protobuf:"varint,3,req,name=passMaxId" json:"passMaxId,omitempty"`
	PendingBuffPool  *PendingBuffPool `protobuf:"bytes,4,opt,name=pendingBuffPool" json:"pendingBuffPool,omitempty"`
	LeftPendingTimes *int32           `protobuf:"varint,5,opt,name=leftPendingTimes" json:"leftPendingTimes,omitempty"`
}

func (x *TowerDataMsg) Reset() {
	*x = TowerDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tower_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerDataMsg) ProtoMessage() {}

func (x *TowerDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Tower_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerDataMsg.ProtoReflect.Descriptor instead.
func (*TowerDataMsg) Descriptor() ([]byte, []int) {
	return file_Tower_proto_rawDescGZIP(), []int{0}
}

func (x *TowerDataMsg) GetCurPassId() int32 {
	if x != nil && x.CurPassId != nil {
		return *x.CurPassId
	}
	return 0
}

func (x *TowerDataMsg) GetBuffData() []*BuffDataMsg {
	if x != nil {
		return x.BuffData
	}
	return nil
}

func (x *TowerDataMsg) GetPassMaxId() int32 {
	if x != nil && x.PassMaxId != nil {
		return *x.PassMaxId
	}
	return 0
}

func (x *TowerDataMsg) GetPendingBuffPool() *PendingBuffPool {
	if x != nil {
		return x.PendingBuffPool
	}
	return nil
}

func (x *TowerDataMsg) GetLeftPendingTimes() int32 {
	if x != nil && x.LeftPendingTimes != nil {
		return *x.LeftPendingTimes
	}
	return 0
}

type BuffDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillId *int32 `protobuf:"varint,1,req,name=skillId" json:"skillId,omitempty"`
	Lv      *int32 `protobuf:"varint,2,req,name=lv" json:"lv,omitempty"`
}

func (x *BuffDataMsg) Reset() {
	*x = BuffDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tower_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuffDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuffDataMsg) ProtoMessage() {}

func (x *BuffDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Tower_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuffDataMsg.ProtoReflect.Descriptor instead.
func (*BuffDataMsg) Descriptor() ([]byte, []int) {
	return file_Tower_proto_rawDescGZIP(), []int{1}
}

func (x *BuffDataMsg) GetSkillId() int32 {
	if x != nil && x.SkillId != nil {
		return *x.SkillId
	}
	return 0
}

func (x *BuffDataMsg) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

type PendingBuffPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuffSkillId []int32 `protobuf:"varint,1,rep,name=buffSkillId" json:"buffSkillId,omitempty"`
}

func (x *PendingBuffPool) Reset() {
	*x = PendingBuffPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tower_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingBuffPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingBuffPool) ProtoMessage() {}

func (x *PendingBuffPool) ProtoReflect() protoreflect.Message {
	mi := &file_Tower_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingBuffPool.ProtoReflect.Descriptor instead.
func (*PendingBuffPool) Descriptor() ([]byte, []int) {
	return file_Tower_proto_rawDescGZIP(), []int{2}
}

func (x *PendingBuffPool) GetBuffSkillId() []int32 {
	if x != nil {
		return x.BuffSkillId
	}
	return nil
}

type TowerChallengeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret              *int32           `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	AllBattleRecord  *BattleRecordMsg `protobuf:"bytes,2,opt,name=allBattleRecord" json:"allBattleRecord,omitempty"`
	ChallengeSuccess *bool            `protobuf:"varint,3,opt,name=challengeSuccess" json:"challengeSuccess,omitempty"`
	Rewards          *string          `protobuf:"bytes,4,opt,name=rewards" json:"rewards,omitempty"`
	TowerDataSync    *TowerDataMsg    `protobuf:"bytes,5,opt,name=towerDataSync" json:"towerDataSync,omitempty"`
}

func (x *TowerChallengeResp) Reset() {
	*x = TowerChallengeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tower_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TowerChallengeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TowerChallengeResp) ProtoMessage() {}

func (x *TowerChallengeResp) ProtoReflect() protoreflect.Message {
	mi := &file_Tower_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TowerChallengeResp.ProtoReflect.Descriptor instead.
func (*TowerChallengeResp) Descriptor() ([]byte, []int) {
	return file_Tower_proto_rawDescGZIP(), []int{3}
}

func (x *TowerChallengeResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *TowerChallengeResp) GetAllBattleRecord() *BattleRecordMsg {
	if x != nil {
		return x.AllBattleRecord
	}
	return nil
}

func (x *TowerChallengeResp) GetChallengeSuccess() bool {
	if x != nil && x.ChallengeSuccess != nil {
		return *x.ChallengeSuccess
	}
	return false
}

func (x *TowerChallengeResp) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

func (x *TowerChallengeResp) GetTowerDataSync() *TowerDataMsg {
	if x != nil {
		return x.TowerDataSync
	}
	return nil
}

type SelectBuffReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index        *int32 `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	ReplaceIndex *int32 `protobuf:"varint,2,opt,name=replaceIndex" json:"replaceIndex,omitempty"`
	IsOneKey     *bool  `protobuf:"varint,3,opt,name=isOneKey" json:"isOneKey,omitempty"`
}

func (x *SelectBuffReq) Reset() {
	*x = SelectBuffReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tower_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectBuffReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectBuffReq) ProtoMessage() {}

func (x *SelectBuffReq) ProtoReflect() protoreflect.Message {
	mi := &file_Tower_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectBuffReq.ProtoReflect.Descriptor instead.
func (*SelectBuffReq) Descriptor() ([]byte, []int) {
	return file_Tower_proto_rawDescGZIP(), []int{4}
}

func (x *SelectBuffReq) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *SelectBuffReq) GetReplaceIndex() int32 {
	if x != nil && x.ReplaceIndex != nil {
		return *x.ReplaceIndex
	}
	return 0
}

func (x *SelectBuffReq) GetIsOneKey() bool {
	if x != nil && x.IsOneKey != nil {
		return *x.IsOneKey
	}
	return false
}

type SelectBuffResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32        `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	TowerDataSync *TowerDataMsg `protobuf:"bytes,2,opt,name=towerDataSync" json:"towerDataSync,omitempty"`
}

func (x *SelectBuffResp) Reset() {
	*x = SelectBuffResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tower_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectBuffResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectBuffResp) ProtoMessage() {}

func (x *SelectBuffResp) ProtoReflect() protoreflect.Message {
	mi := &file_Tower_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectBuffResp.ProtoReflect.Descriptor instead.
func (*SelectBuffResp) Descriptor() ([]byte, []int) {
	return file_Tower_proto_rawDescGZIP(), []int{5}
}

func (x *SelectBuffResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SelectBuffResp) GetTowerDataSync() *TowerDataMsg {
	if x != nil {
		return x.TowerDataSync
	}
	return nil
}

type QuickChallengeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32        `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	TowerDataSync *TowerDataMsg `protobuf:"bytes,2,opt,name=towerDataSync" json:"towerDataSync,omitempty"`
	Reward        *string       `protobuf:"bytes,3,opt,name=reward" json:"reward,omitempty"`
	MiracleReward *string       `protobuf:"bytes,4,opt,name=miracleReward" json:"miracleReward,omitempty"`
}

func (x *QuickChallengeResp) Reset() {
	*x = QuickChallengeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tower_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickChallengeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickChallengeResp) ProtoMessage() {}

func (x *QuickChallengeResp) ProtoReflect() protoreflect.Message {
	mi := &file_Tower_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickChallengeResp.ProtoReflect.Descriptor instead.
func (*QuickChallengeResp) Descriptor() ([]byte, []int) {
	return file_Tower_proto_rawDescGZIP(), []int{6}
}

func (x *QuickChallengeResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *QuickChallengeResp) GetTowerDataSync() *TowerDataMsg {
	if x != nil {
		return x.TowerDataSync
	}
	return nil
}

func (x *QuickChallengeResp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *QuickChallengeResp) GetMiracleReward() string {
	if x != nil && x.MiracleReward != nil {
		return *x.MiracleReward
	}
	return ""
}

type ViewMonsterAttrResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32              `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	AttributeList []*AttributeDataMsg `protobuf:"bytes,2,rep,name=attributeList" json:"attributeList,omitempty"`
}

func (x *ViewMonsterAttrResp) Reset() {
	*x = ViewMonsterAttrResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tower_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewMonsterAttrResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewMonsterAttrResp) ProtoMessage() {}

func (x *ViewMonsterAttrResp) ProtoReflect() protoreflect.Message {
	mi := &file_Tower_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewMonsterAttrResp.ProtoReflect.Descriptor instead.
func (*ViewMonsterAttrResp) Descriptor() ([]byte, []int) {
	return file_Tower_proto_rawDescGZIP(), []int{7}
}

func (x *ViewMonsterAttrResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ViewMonsterAttrResp) GetAttributeList() []*AttributeDataMsg {
	if x != nil {
		return x.AttributeList
	}
	return nil
}

type MarkupPreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority  *int32 `protobuf:"varint,1,opt,name=priority" json:"priority,omitempty"`
	SkillType *int32 `protobuf:"varint,2,opt,name=skillType" json:"skillType,omitempty"`
}

func (x *MarkupPreference) Reset() {
	*x = MarkupPreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tower_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkupPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkupPreference) ProtoMessage() {}

func (x *MarkupPreference) ProtoReflect() protoreflect.Message {
	mi := &file_Tower_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkupPreference.ProtoReflect.Descriptor instead.
func (*MarkupPreference) Descriptor() ([]byte, []int) {
	return file_Tower_proto_rawDescGZIP(), []int{8}
}

func (x *MarkupPreference) GetPriority() int32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *MarkupPreference) GetSkillType() int32 {
	if x != nil && x.SkillType != nil {
		return *x.SkillType
	}
	return 0
}

type SaveSelectOptionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkPreference []*MarkupPreference `protobuf:"bytes,1,rep,name=markPreference" json:"markPreference,omitempty"`
}

func (x *SaveSelectOptionReq) Reset() {
	*x = SaveSelectOptionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tower_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveSelectOptionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSelectOptionReq) ProtoMessage() {}

func (x *SaveSelectOptionReq) ProtoReflect() protoreflect.Message {
	mi := &file_Tower_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSelectOptionReq.ProtoReflect.Descriptor instead.
func (*SaveSelectOptionReq) Descriptor() ([]byte, []int) {
	return file_Tower_proto_rawDescGZIP(), []int{9}
}

func (x *SaveSelectOptionReq) GetMarkPreference() []*MarkupPreference {
	if x != nil {
		return x.MarkPreference
	}
	return nil
}

type SaveSelectOptionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *SaveSelectOptionResp) Reset() {
	*x = SaveSelectOptionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tower_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveSelectOptionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSelectOptionResp) ProtoMessage() {}

func (x *SaveSelectOptionResp) ProtoReflect() protoreflect.Message {
	mi := &file_Tower_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSelectOptionResp.ProtoReflect.Descriptor instead.
func (*SaveSelectOptionResp) Descriptor() ([]byte, []int) {
	return file_Tower_proto_rawDescGZIP(), []int{10}
}

func (x *SaveSelectOptionResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type GetSelectOptionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSelectOptionReq) Reset() {
	*x = GetSelectOptionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tower_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSelectOptionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelectOptionReq) ProtoMessage() {}

func (x *GetSelectOptionReq) ProtoReflect() protoreflect.Message {
	mi := &file_Tower_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelectOptionReq.ProtoReflect.Descriptor instead.
func (*GetSelectOptionReq) Descriptor() ([]byte, []int) {
	return file_Tower_proto_rawDescGZIP(), []int{11}
}

type GetSelectOptionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret            *int32              `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	MarkPreference []*MarkupPreference `protobuf:"bytes,2,rep,name=markPreference" json:"markPreference,omitempty"`
}

func (x *GetSelectOptionResp) Reset() {
	*x = GetSelectOptionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Tower_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSelectOptionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelectOptionResp) ProtoMessage() {}

func (x *GetSelectOptionResp) ProtoReflect() protoreflect.Message {
	mi := &file_Tower_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelectOptionResp.ProtoReflect.Descriptor instead.
func (*GetSelectOptionResp) Descriptor() ([]byte, []int) {
	return file_Tower_proto_rawDescGZIP(), []int{12}
}

func (x *GetSelectOptionResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GetSelectOptionResp) GetMarkPreference() []*MarkupPreference {
	if x != nil {
		return x.MarkPreference
	}
	return nil
}

var File_Tower_proto protoreflect.FileDescriptor

var file_Tower_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x02,
	0x0a, 0x0c, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x75, 0x72, 0x50, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x75, 0x72, 0x50, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x08,
	0x62, 0x75, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52,
	0x08, 0x62, 0x75, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x73,
	0x73, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61,
	0x73, 0x73, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0f, 0x70, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x42, 0x75, 0x66, 0x66, 0x50, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x66,
	0x66, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x0f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x75,
	0x66, 0x66, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x65, 0x66, 0x74, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x6c, 0x65, 0x66, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x22, 0x37, 0x0a, 0x0b, 0x42, 0x75, 0x66, 0x66, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6c,
	0x76, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x6c, 0x76, 0x22, 0x33, 0x0a, 0x0f, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x66, 0x66, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x62, 0x75, 0x66, 0x66, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x75, 0x66, 0x66, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64,
	0x22, 0x83, 0x02, 0x0a, 0x12, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x4d, 0x0a, 0x0f, 0x61, 0x6c, 0x6c,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x46,
	0x0a, 0x0d, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x54, 0x6f, 0x77, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0d, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x22, 0x65, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x42, 0x75, 0x66, 0x66, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x6a, 0x0a,
	0x0e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x46, 0x0a, 0x0d, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79,
	0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x54, 0x6f,
	0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0d, 0x74, 0x6f, 0x77, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x22, 0xac, 0x01, 0x0a, 0x12, 0x51, 0x75,
	0x69, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x46, 0x0a, 0x0d, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x79, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x54,
	0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0d, 0x74, 0x6f, 0x77,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x69, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x73, 0x0a, 0x13, 0x56, 0x69, 0x65, 0x77,
	0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x4a, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0d,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4c, 0x0a,
	0x10, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x63, 0x0a, 0x13, 0x53,
	0x61, 0x76, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x4c, 0x0a, 0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x22, 0x28, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x22, 0x75, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x4c, 0x0a, 0x0e, 0x6d, 0x61, 0x72,
	0x6b, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x75, 0x70, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f,
	0x78, 0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_Tower_proto_rawDescOnce sync.Once
	file_Tower_proto_rawDescData = file_Tower_proto_rawDesc
)

func file_Tower_proto_rawDescGZIP() []byte {
	file_Tower_proto_rawDescOnce.Do(func() {
		file_Tower_proto_rawDescData = protoimpl.X.CompressGZIP(file_Tower_proto_rawDescData)
	})
	return file_Tower_proto_rawDescData
}

var file_Tower_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_Tower_proto_goTypes = []any{
	(*TowerDataMsg)(nil),         // 0: com.yq.msg.CityMsg.TowerDataMsg
	(*BuffDataMsg)(nil),          // 1: com.yq.msg.CityMsg.BuffDataMsg
	(*PendingBuffPool)(nil),      // 2: com.yq.msg.CityMsg.PendingBuffPool
	(*TowerChallengeResp)(nil),   // 3: com.yq.msg.CityMsg.TowerChallengeResp
	(*SelectBuffReq)(nil),        // 4: com.yq.msg.CityMsg.SelectBuffReq
	(*SelectBuffResp)(nil),       // 5: com.yq.msg.CityMsg.SelectBuffResp
	(*QuickChallengeResp)(nil),   // 6: com.yq.msg.CityMsg.QuickChallengeResp
	(*ViewMonsterAttrResp)(nil),  // 7: com.yq.msg.CityMsg.ViewMonsterAttrResp
	(*MarkupPreference)(nil),     // 8: com.yq.msg.CityMsg.MarkupPreference
	(*SaveSelectOptionReq)(nil),  // 9: com.yq.msg.CityMsg.SaveSelectOptionReq
	(*SaveSelectOptionResp)(nil), // 10: com.yq.msg.CityMsg.SaveSelectOptionResp
	(*GetSelectOptionReq)(nil),   // 11: com.yq.msg.CityMsg.GetSelectOptionReq
	(*GetSelectOptionResp)(nil),  // 12: com.yq.msg.CityMsg.GetSelectOptionResp
	(*BattleRecordMsg)(nil),      // 13: com.yq.msg.CityMsg.BattleRecordMsg
	(*AttributeDataMsg)(nil),     // 14: com.yq.msg.CityMsg.AttributeDataMsg
}
var file_Tower_proto_depIdxs = []int32{
	1,  // 0: com.yq.msg.CityMsg.TowerDataMsg.buffData:type_name -> com.yq.msg.CityMsg.BuffDataMsg
	2,  // 1: com.yq.msg.CityMsg.TowerDataMsg.pendingBuffPool:type_name -> com.yq.msg.CityMsg.PendingBuffPool
	13, // 2: com.yq.msg.CityMsg.TowerChallengeResp.allBattleRecord:type_name -> com.yq.msg.CityMsg.BattleRecordMsg
	0,  // 3: com.yq.msg.CityMsg.TowerChallengeResp.towerDataSync:type_name -> com.yq.msg.CityMsg.TowerDataMsg
	0,  // 4: com.yq.msg.CityMsg.SelectBuffResp.towerDataSync:type_name -> com.yq.msg.CityMsg.TowerDataMsg
	0,  // 5: com.yq.msg.CityMsg.QuickChallengeResp.towerDataSync:type_name -> com.yq.msg.CityMsg.TowerDataMsg
	14, // 6: com.yq.msg.CityMsg.ViewMonsterAttrResp.attributeList:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	8,  // 7: com.yq.msg.CityMsg.SaveSelectOptionReq.markPreference:type_name -> com.yq.msg.CityMsg.MarkupPreference
	8,  // 8: com.yq.msg.CityMsg.GetSelectOptionResp.markPreference:type_name -> com.yq.msg.CityMsg.MarkupPreference
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_Tower_proto_init() }
func file_Tower_proto_init() {
	if File_Tower_proto != nil {
		return
	}
	file_Common_proto_init()
	file_Battle_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Tower_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TowerDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tower_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BuffDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tower_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PendingBuffPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tower_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TowerChallengeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tower_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SelectBuffReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tower_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SelectBuffResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tower_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*QuickChallengeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tower_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ViewMonsterAttrResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tower_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*MarkupPreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tower_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SaveSelectOptionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tower_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SaveSelectOptionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tower_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetSelectOptionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Tower_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetSelectOptionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Tower_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Tower_proto_goTypes,
		DependencyIndexes: file_Tower_proto_depIdxs,
		MessageInfos:      file_Tower_proto_msgTypes,
	}.Build()
	File_Tower_proto = out.File
	file_Tower_proto_rawDesc = nil
	file_Tower_proto_goTypes = nil
	file_Tower_proto_depIdxs = nil
}
