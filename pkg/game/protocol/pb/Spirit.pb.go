// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: Spirit.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpiritPlayerDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpiritData           []*SpiritDataMsg        `protobuf:"bytes,1,rep,name=spiritData" json:"spiritData,omitempty"`
	SpiritBattleTeamMsg  []*SpiritBattleTeamMsg  `protobuf:"bytes,2,rep,name=spiritBattleTeamMsg" json:"spiritBattleTeamMsg,omitempty"`
	BattleTeamNo         *int32                  `protobuf:"varint,3,opt,name=battleTeamNo" json:"battleTeamNo,omitempty"`
	DrawTimes            *int32                  `protobuf:"varint,4,req,name=drawTimes" json:"drawTimes,omitempty"`
	ProtectTimes         *int32                  `protobuf:"varint,5,opt,name=protectTimes" json:"protectTimes,omitempty"`
	SpiritCombineMsg     []*SpiritCombineMsg     `protobuf:"bytes,6,rep,name=spiritCombineMsg" json:"spiritCombineMsg,omitempty"`
	DrawTimesTotal       *int32                  `protobuf:"varint,7,opt,name=drawTimesTotal" json:"drawTimesTotal,omitempty"`
	SpiritFreeAd         *SpiritFreeAdData       `protobuf:"bytes,8,opt,name=spiritFreeAd" json:"spiritFreeAd,omitempty"`
	PieceShopOpen        *bool                   `protobuf:"varint,9,opt,name=pieceShopOpen" json:"pieceShopOpen,omitempty"`
	SpiritLinkageDataMsg []*SpiritLinkageDataMsg `protobuf:"bytes,10,rep,name=SpiritLinkageDataMsg" json:"SpiritLinkageDataMsg,omitempty"`
	SpiritLevelState     *int32                  `protobuf:"varint,11,opt,name=spiritLevelState" json:"spiritLevelState,omitempty"`
}

func (x *SpiritPlayerDataMsg) Reset() {
	*x = SpiritPlayerDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritPlayerDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritPlayerDataMsg) ProtoMessage() {}

func (x *SpiritPlayerDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritPlayerDataMsg.ProtoReflect.Descriptor instead.
func (*SpiritPlayerDataMsg) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{0}
}

func (x *SpiritPlayerDataMsg) GetSpiritData() []*SpiritDataMsg {
	if x != nil {
		return x.SpiritData
	}
	return nil
}

func (x *SpiritPlayerDataMsg) GetSpiritBattleTeamMsg() []*SpiritBattleTeamMsg {
	if x != nil {
		return x.SpiritBattleTeamMsg
	}
	return nil
}

func (x *SpiritPlayerDataMsg) GetBattleTeamNo() int32 {
	if x != nil && x.BattleTeamNo != nil {
		return *x.BattleTeamNo
	}
	return 0
}

func (x *SpiritPlayerDataMsg) GetDrawTimes() int32 {
	if x != nil && x.DrawTimes != nil {
		return *x.DrawTimes
	}
	return 0
}

func (x *SpiritPlayerDataMsg) GetProtectTimes() int32 {
	if x != nil && x.ProtectTimes != nil {
		return *x.ProtectTimes
	}
	return 0
}

func (x *SpiritPlayerDataMsg) GetSpiritCombineMsg() []*SpiritCombineMsg {
	if x != nil {
		return x.SpiritCombineMsg
	}
	return nil
}

func (x *SpiritPlayerDataMsg) GetDrawTimesTotal() int32 {
	if x != nil && x.DrawTimesTotal != nil {
		return *x.DrawTimesTotal
	}
	return 0
}

func (x *SpiritPlayerDataMsg) GetSpiritFreeAd() *SpiritFreeAdData {
	if x != nil {
		return x.SpiritFreeAd
	}
	return nil
}

func (x *SpiritPlayerDataMsg) GetPieceShopOpen() bool {
	if x != nil && x.PieceShopOpen != nil {
		return *x.PieceShopOpen
	}
	return false
}

func (x *SpiritPlayerDataMsg) GetSpiritLinkageDataMsg() []*SpiritLinkageDataMsg {
	if x != nil {
		return x.SpiritLinkageDataMsg
	}
	return nil
}

func (x *SpiritPlayerDataMsg) GetSpiritLevelState() int32 {
	if x != nil && x.SpiritLevelState != nil {
		return *x.SpiritLevelState
	}
	return 0
}

type SpiritLinkageDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpiritId  *int32 `protobuf:"varint,1,req,name=spiritId" json:"spiritId,omitempty"`
	LinkageId *int32 `protobuf:"varint,2,req,name=linkageId" json:"linkageId,omitempty"`
}

func (x *SpiritLinkageDataMsg) Reset() {
	*x = SpiritLinkageDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritLinkageDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritLinkageDataMsg) ProtoMessage() {}

func (x *SpiritLinkageDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritLinkageDataMsg.ProtoReflect.Descriptor instead.
func (*SpiritLinkageDataMsg) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{1}
}

func (x *SpiritLinkageDataMsg) GetSpiritId() int32 {
	if x != nil && x.SpiritId != nil {
		return *x.SpiritId
	}
	return 0
}

func (x *SpiritLinkageDataMsg) GetLinkageId() int32 {
	if x != nil && x.LinkageId != nil {
		return *x.LinkageId
	}
	return 0
}

type SpiritFreeAdData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreeTimes  *int32 `protobuf:"varint,1,opt,name=freeTimes" json:"freeTimes,omitempty"`
	LastAdTime *int64 `protobuf:"varint,2,opt,name=lastAdTime" json:"lastAdTime,omitempty"`
}

func (x *SpiritFreeAdData) Reset() {
	*x = SpiritFreeAdData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritFreeAdData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritFreeAdData) ProtoMessage() {}

func (x *SpiritFreeAdData) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritFreeAdData.ProtoReflect.Descriptor instead.
func (*SpiritFreeAdData) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{2}
}

func (x *SpiritFreeAdData) GetFreeTimes() int32 {
	if x != nil && x.FreeTimes != nil {
		return *x.FreeTimes
	}
	return 0
}

func (x *SpiritFreeAdData) GetLastAdTime() int64 {
	if x != nil && x.LastAdTime != nil {
		return *x.LastAdTime
	}
	return 0
}

type SpiritCombineMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CombineId *int32 `protobuf:"varint,1,req,name=combineId" json:"combineId,omitempty"`
	Lv        *int32 `protobuf:"varint,2,req,name=lv" json:"lv,omitempty"`
}

func (x *SpiritCombineMsg) Reset() {
	*x = SpiritCombineMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritCombineMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritCombineMsg) ProtoMessage() {}

func (x *SpiritCombineMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritCombineMsg.ProtoReflect.Descriptor instead.
func (*SpiritCombineMsg) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{3}
}

func (x *SpiritCombineMsg) GetCombineId() int32 {
	if x != nil && x.CombineId != nil {
		return *x.CombineId
	}
	return 0
}

func (x *SpiritCombineMsg) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

type SpiritBattleTeamMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamNo   *int32  `protobuf:"varint,1,req,name=teamNo" json:"teamNo,omitempty"`
	SpiritId []int32 `protobuf:"varint,2,rep,name=spiritId" json:"spiritId,omitempty"`
}

func (x *SpiritBattleTeamMsg) Reset() {
	*x = SpiritBattleTeamMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritBattleTeamMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritBattleTeamMsg) ProtoMessage() {}

func (x *SpiritBattleTeamMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritBattleTeamMsg.ProtoReflect.Descriptor instead.
func (*SpiritBattleTeamMsg) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{4}
}

func (x *SpiritBattleTeamMsg) GetTeamNo() int32 {
	if x != nil && x.TeamNo != nil {
		return *x.TeamNo
	}
	return 0
}

func (x *SpiritBattleTeamMsg) GetSpiritId() []int32 {
	if x != nil {
		return x.SpiritId
	}
	return nil
}

type SpiritDrawReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrawTimes   *int32 `protobuf:"varint,1,req,name=drawTimes" json:"drawTimes,omitempty"`
	IsAd        *bool  `protobuf:"varint,2,opt,name=isAd" json:"isAd,omitempty"`
	IsUseADTime *bool  `protobuf:"varint,3,opt,name=isUseADTime" json:"isUseADTime,omitempty"`
}

func (x *SpiritDrawReq) Reset() {
	*x = SpiritDrawReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritDrawReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritDrawReq) ProtoMessage() {}

func (x *SpiritDrawReq) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritDrawReq.ProtoReflect.Descriptor instead.
func (*SpiritDrawReq) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{5}
}

func (x *SpiritDrawReq) GetDrawTimes() int32 {
	if x != nil && x.DrawTimes != nil {
		return *x.DrawTimes
	}
	return 0
}

func (x *SpiritDrawReq) GetIsAd() bool {
	if x != nil && x.IsAd != nil {
		return *x.IsAd
	}
	return false
}

func (x *SpiritDrawReq) GetIsUseADTime() bool {
	if x != nil && x.IsUseADTime != nil {
		return *x.IsUseADTime
	}
	return false
}

type SpiritDrawResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32               `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	DrawResult []*SpiritDrawResult  `protobuf:"bytes,2,rep,name=drawResult" json:"drawResult,omitempty"`
	SyncMsg    *SpiritPlayerDataMsg `protobuf:"bytes,3,opt,name=syncMsg" json:"syncMsg,omitempty"`
	Score      *int32               `protobuf:"varint,4,opt,name=score" json:"score,omitempty"`
}

func (x *SpiritDrawResp) Reset() {
	*x = SpiritDrawResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritDrawResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritDrawResp) ProtoMessage() {}

func (x *SpiritDrawResp) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritDrawResp.ProtoReflect.Descriptor instead.
func (*SpiritDrawResp) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{6}
}

func (x *SpiritDrawResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SpiritDrawResp) GetDrawResult() []*SpiritDrawResult {
	if x != nil {
		return x.DrawResult
	}
	return nil
}

func (x *SpiritDrawResp) GetSyncMsg() *SpiritPlayerDataMsg {
	if x != nil {
		return x.SyncMsg
	}
	return nil
}

func (x *SpiritDrawResp) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

type SpiritDrawResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpiritId *int32  `protobuf:"varint,1,opt,name=spiritId" json:"spiritId,omitempty"`
	Full     *bool   `protobuf:"varint,2,opt,name=full" json:"full,omitempty"`
	IsNew    *bool   `protobuf:"varint,3,opt,name=isNew" json:"isNew,omitempty"`
	Reward   *string `protobuf:"bytes,4,opt,name=reward" json:"reward,omitempty"`
}

func (x *SpiritDrawResult) Reset() {
	*x = SpiritDrawResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritDrawResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritDrawResult) ProtoMessage() {}

func (x *SpiritDrawResult) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritDrawResult.ProtoReflect.Descriptor instead.
func (*SpiritDrawResult) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{7}
}

func (x *SpiritDrawResult) GetSpiritId() int32 {
	if x != nil && x.SpiritId != nil {
		return *x.SpiritId
	}
	return 0
}

func (x *SpiritDrawResult) GetFull() bool {
	if x != nil && x.Full != nil {
		return *x.Full
	}
	return false
}

func (x *SpiritDrawResult) GetIsNew() bool {
	if x != nil && x.IsNew != nil {
		return *x.IsNew
	}
	return false
}

func (x *SpiritDrawResult) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type SpiritUnlockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpiritId *int32 `protobuf:"varint,1,req,name=spiritId" json:"spiritId,omitempty"`
}

func (x *SpiritUnlockReq) Reset() {
	*x = SpiritUnlockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritUnlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritUnlockReq) ProtoMessage() {}

func (x *SpiritUnlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritUnlockReq.ProtoReflect.Descriptor instead.
func (*SpiritUnlockReq) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{8}
}

func (x *SpiritUnlockReq) GetSpiritId() int32 {
	if x != nil && x.SpiritId != nil {
		return *x.SpiritId
	}
	return 0
}

type SpiritUnlockResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32         `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	SpiritData *SpiritDataMsg `protobuf:"bytes,2,opt,name=spiritData" json:"spiritData,omitempty"`
}

func (x *SpiritUnlockResp) Reset() {
	*x = SpiritUnlockResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritUnlockResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritUnlockResp) ProtoMessage() {}

func (x *SpiritUnlockResp) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritUnlockResp.ProtoReflect.Descriptor instead.
func (*SpiritUnlockResp) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{9}
}

func (x *SpiritUnlockResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SpiritUnlockResp) GetSpiritData() *SpiritDataMsg {
	if x != nil {
		return x.SpiritData
	}
	return nil
}

type SpiritLvUpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpiritId *int32 `protobuf:"varint,1,req,name=spiritId" json:"spiritId,omitempty"`
}

func (x *SpiritLvUpReq) Reset() {
	*x = SpiritLvUpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritLvUpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritLvUpReq) ProtoMessage() {}

func (x *SpiritLvUpReq) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritLvUpReq.ProtoReflect.Descriptor instead.
func (*SpiritLvUpReq) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{10}
}

func (x *SpiritLvUpReq) GetSpiritId() int32 {
	if x != nil && x.SpiritId != nil {
		return *x.SpiritId
	}
	return 0
}

type SpiritLvUpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret              *int32         `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	SpiritData       *SpiritDataMsg `protobuf:"bytes,2,opt,name=spiritData" json:"spiritData,omitempty"`
	Reward           *string        `protobuf:"bytes,3,opt,name=reward" json:"reward,omitempty"`
	PieceShopOpen    *bool          `protobuf:"varint,4,opt,name=pieceShopOpen" json:"pieceShopOpen,omitempty"`
	SpiritLevelState *int32         `protobuf:"varint,5,opt,name=spiritLevelState" json:"spiritLevelState,omitempty"`
}

func (x *SpiritLvUpResp) Reset() {
	*x = SpiritLvUpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritLvUpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritLvUpResp) ProtoMessage() {}

func (x *SpiritLvUpResp) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritLvUpResp.ProtoReflect.Descriptor instead.
func (*SpiritLvUpResp) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{11}
}

func (x *SpiritLvUpResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SpiritLvUpResp) GetSpiritData() *SpiritDataMsg {
	if x != nil {
		return x.SpiritData
	}
	return nil
}

func (x *SpiritLvUpResp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *SpiritLvUpResp) GetPieceShopOpen() bool {
	if x != nil && x.PieceShopOpen != nil {
		return *x.PieceShopOpen
	}
	return false
}

func (x *SpiritLvUpResp) GetSpiritLevelState() int32 {
	if x != nil && x.SpiritLevelState != nil {
		return *x.SpiritLevelState
	}
	return 0
}

type SwitchBattleTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamNo *int32 `protobuf:"varint,1,req,name=teamNo" json:"teamNo,omitempty"`
}

func (x *SwitchBattleTeamReq) Reset() {
	*x = SwitchBattleTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchBattleTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchBattleTeamReq) ProtoMessage() {}

func (x *SwitchBattleTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchBattleTeamReq.ProtoReflect.Descriptor instead.
func (*SwitchBattleTeamReq) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{12}
}

func (x *SwitchBattleTeamReq) GetTeamNo() int32 {
	if x != nil && x.TeamNo != nil {
		return *x.TeamNo
	}
	return 0
}

type SwitchBattleTeamResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	BattleTeamNo *int32 `protobuf:"varint,2,req,name=battleTeamNo" json:"battleTeamNo,omitempty"`
}

func (x *SwitchBattleTeamResp) Reset() {
	*x = SwitchBattleTeamResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchBattleTeamResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchBattleTeamResp) ProtoMessage() {}

func (x *SwitchBattleTeamResp) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchBattleTeamResp.ProtoReflect.Descriptor instead.
func (*SwitchBattleTeamResp) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{13}
}

func (x *SwitchBattleTeamResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SwitchBattleTeamResp) GetBattleTeamNo() int32 {
	if x != nil && x.BattleTeamNo != nil {
		return *x.BattleTeamNo
	}
	return 0
}

type SpiritBattleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spirit []int32 `protobuf:"varint,1,rep,name=spirit" json:"spirit,omitempty"`
}

func (x *SpiritBattleReq) Reset() {
	*x = SpiritBattleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritBattleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritBattleReq) ProtoMessage() {}

func (x *SpiritBattleReq) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritBattleReq.ProtoReflect.Descriptor instead.
func (*SpiritBattleReq) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{14}
}

func (x *SpiritBattleReq) GetSpirit() []int32 {
	if x != nil {
		return x.Spirit
	}
	return nil
}

type SpiritBattleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                 *int32               `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	SpiritBattleTeamMsg *SpiritBattleTeamMsg `protobuf:"bytes,2,opt,name=spiritBattleTeamMsg" json:"spiritBattleTeamMsg,omitempty"`
}

func (x *SpiritBattleResp) Reset() {
	*x = SpiritBattleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritBattleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritBattleResp) ProtoMessage() {}

func (x *SpiritBattleResp) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritBattleResp.ProtoReflect.Descriptor instead.
func (*SpiritBattleResp) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{15}
}

func (x *SpiritBattleResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SpiritBattleResp) GetSpiritBattleTeamMsg() *SpiritBattleTeamMsg {
	if x != nil {
		return x.SpiritBattleTeamMsg
	}
	return nil
}

type SpiritCombineLvUpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CombineId *int32 `protobuf:"varint,1,req,name=combineId" json:"combineId,omitempty"`
}

func (x *SpiritCombineLvUpReq) Reset() {
	*x = SpiritCombineLvUpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritCombineLvUpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritCombineLvUpReq) ProtoMessage() {}

func (x *SpiritCombineLvUpReq) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritCombineLvUpReq.ProtoReflect.Descriptor instead.
func (*SpiritCombineLvUpReq) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{16}
}

func (x *SpiritCombineLvUpReq) GetCombineId() int32 {
	if x != nil && x.CombineId != nil {
		return *x.CombineId
	}
	return 0
}

type SpiritCombineLvUpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret              *int32            `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	SpiritCombineMsg *SpiritCombineMsg `protobuf:"bytes,2,opt,name=spiritCombineMsg" json:"spiritCombineMsg,omitempty"`
}

func (x *SpiritCombineLvUpResp) Reset() {
	*x = SpiritCombineLvUpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritCombineLvUpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritCombineLvUpResp) ProtoMessage() {}

func (x *SpiritCombineLvUpResp) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritCombineLvUpResp.ProtoReflect.Descriptor instead.
func (*SpiritCombineLvUpResp) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{17}
}

func (x *SpiritCombineLvUpResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SpiritCombineLvUpResp) GetSpiritCombineMsg() *SpiritCombineMsg {
	if x != nil {
		return x.SpiritCombineMsg
	}
	return nil
}

type SpiritSwitchLinkageSkinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpiritId  *int32 `protobuf:"varint,1,req,name=spiritId" json:"spiritId,omitempty"`
	LinkageId *int32 `protobuf:"varint,2,req,name=linkageId" json:"linkageId,omitempty"`
}

func (x *SpiritSwitchLinkageSkinReq) Reset() {
	*x = SpiritSwitchLinkageSkinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritSwitchLinkageSkinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritSwitchLinkageSkinReq) ProtoMessage() {}

func (x *SpiritSwitchLinkageSkinReq) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritSwitchLinkageSkinReq.ProtoReflect.Descriptor instead.
func (*SpiritSwitchLinkageSkinReq) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{18}
}

func (x *SpiritSwitchLinkageSkinReq) GetSpiritId() int32 {
	if x != nil && x.SpiritId != nil {
		return *x.SpiritId
	}
	return 0
}

func (x *SpiritSwitchLinkageSkinReq) GetLinkageId() int32 {
	if x != nil && x.LinkageId != nil {
		return *x.LinkageId
	}
	return 0
}

type SpiritSwitchLinkageSkinResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32         `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	SpiritData *SpiritDataMsg `protobuf:"bytes,2,opt,name=spiritData" json:"spiritData,omitempty"`
}

func (x *SpiritSwitchLinkageSkinResp) Reset() {
	*x = SpiritSwitchLinkageSkinResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritSwitchLinkageSkinResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritSwitchLinkageSkinResp) ProtoMessage() {}

func (x *SpiritSwitchLinkageSkinResp) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritSwitchLinkageSkinResp.ProtoReflect.Descriptor instead.
func (*SpiritSwitchLinkageSkinResp) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{19}
}

func (x *SpiritSwitchLinkageSkinResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SpiritSwitchLinkageSkinResp) GetSpiritData() *SpiritDataMsg {
	if x != nil {
		return x.SpiritData
	}
	return nil
}

type SpiritLevelUnlockShowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SpiritLevelUnlockShowReq) Reset() {
	*x = SpiritLevelUnlockShowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritLevelUnlockShowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritLevelUnlockShowReq) ProtoMessage() {}

func (x *SpiritLevelUnlockShowReq) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritLevelUnlockShowReq.ProtoReflect.Descriptor instead.
func (*SpiritLevelUnlockShowReq) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{20}
}

type SpiritLevelUnlockShowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret              *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	SpiritLevelState *int32 `protobuf:"varint,2,opt,name=spiritLevelState" json:"spiritLevelState,omitempty"`
}

func (x *SpiritLevelUnlockShowResp) Reset() {
	*x = SpiritLevelUnlockShowResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Spirit_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritLevelUnlockShowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritLevelUnlockShowResp) ProtoMessage() {}

func (x *SpiritLevelUnlockShowResp) ProtoReflect() protoreflect.Message {
	mi := &file_Spirit_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritLevelUnlockShowResp.ProtoReflect.Descriptor instead.
func (*SpiritLevelUnlockShowResp) Descriptor() ([]byte, []int) {
	return file_Spirit_proto_rawDescGZIP(), []int{21}
}

func (x *SpiritLevelUnlockShowResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SpiritLevelUnlockShowResp) GetSpiritLevelState() int32 {
	if x != nil && x.SpiritLevelState != nil {
		return *x.SpiritLevelState
	}
	return 0
}

var File_Spirit_proto protoreflect.FileDescriptor

var file_Spirit_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8d, 0x05, 0x0a, 0x13, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x41, 0x0a, 0x0a, 0x73, 0x70, 0x69, 0x72,
	0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52,
	0x0a, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x59, 0x0a, 0x13, 0x73,
	0x70, 0x69, 0x72, 0x69, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x70,
	0x69, 0x72, 0x69, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x73,
	0x67, 0x52, 0x13, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72,
	0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x64,
	0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x10,
	0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x70, 0x69, 0x72,
	0x69, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x10, 0x73, 0x70,
	0x69, 0x72, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x26,
	0x0a, 0x0e, 0x64, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x48, 0x0a, 0x0c, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74,
	0x46, 0x72, 0x65, 0x65, 0x41, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x46, 0x72, 0x65, 0x65, 0x41, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0c, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x46, 0x72, 0x65, 0x65, 0x41, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x70, 0x69, 0x65, 0x63, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x70, 0x65,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x69, 0x65, 0x63, 0x65, 0x53, 0x68,
	0x6f, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x5c, 0x0a, 0x14, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x14,
	0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x50, 0x0a, 0x14, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x69, 0x72,
	0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x73, 0x70, 0x69, 0x72,
	0x69, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x22, 0x50, 0x0a, 0x10, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x46, 0x72, 0x65, 0x65,
	0x41, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x65, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x10, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x43, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x62,
	0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x02, 0x6c, 0x76, 0x22, 0x49, 0x0a, 0x13, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x74,
	0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49,
	0x64, 0x22, 0x63, 0x0a, 0x0d, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x44, 0x72, 0x61, 0x77, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x64, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x41, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x69, 0x73, 0x41, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x55, 0x73, 0x65, 0x41, 0x44, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x55, 0x73, 0x65,
	0x41, 0x44, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x0e, 0x53, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x44, 0x0a, 0x0a, 0x64,
	0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x44, 0x72, 0x61, 0x77, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x41, 0x0a, 0x07, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x73, 0x79, 0x6e,
	0x63, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x70, 0x0a, 0x10, 0x53, 0x70,
	0x69, 0x72, 0x69, 0x74, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x75,
	0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66, 0x75, 0x6c, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x4e, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x2d, 0x0a, 0x0f,
	0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x10, 0x53,
	0x70, 0x69, 0x72, 0x69, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x41, 0x0a, 0x0a, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x0d, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4c, 0x76,
	0x55, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49,
	0x64, 0x22, 0xcf, 0x01, 0x0a, 0x0e, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4c, 0x76, 0x55, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x73,
	0x70, 0x69, 0x72, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x69, 0x65, 0x63, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x70,
	0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x69, 0x65, 0x63, 0x65, 0x53,
	0x68, 0x6f, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d,
	0x4e, 0x6f, 0x22, 0x4c, 0x0a, 0x14, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x6f,
	0x22, 0x29, 0x0a, 0x0f, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x22, 0x7f, 0x0a, 0x10, 0x53,
	0x70, 0x69, 0x72, 0x69, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x59, 0x0a, 0x13, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x13, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x22, 0x34, 0x0a, 0x14,
	0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4c, 0x76, 0x55,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x22, 0x7b, 0x0a, 0x15, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x62,
	0x69, 0x6e, 0x65, 0x4c, 0x76, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x50, 0x0a,
	0x10, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x70, 0x69,
	0x72, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x10, 0x73,
	0x70, 0x69, 0x72, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x22,
	0x56, 0x0a, 0x1a, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c,
	0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x08, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6e,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x69,
	0x6e, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x1b, 0x53, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x6b,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x73, 0x70, 0x69, 0x72,
	0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52,
	0x0a, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x1a, 0x0a, 0x18, 0x53,
	0x70, 0x69, 0x72, 0x69, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x22, 0x59, 0x0a, 0x19, 0x53, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x68, 0x6f, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x69, 0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d,
	0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_Spirit_proto_rawDescOnce sync.Once
	file_Spirit_proto_rawDescData = file_Spirit_proto_rawDesc
)

func file_Spirit_proto_rawDescGZIP() []byte {
	file_Spirit_proto_rawDescOnce.Do(func() {
		file_Spirit_proto_rawDescData = protoimpl.X.CompressGZIP(file_Spirit_proto_rawDescData)
	})
	return file_Spirit_proto_rawDescData
}

var file_Spirit_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_Spirit_proto_goTypes = []any{
	(*SpiritPlayerDataMsg)(nil),         // 0: com.yq.msg.CityMsg.SpiritPlayerDataMsg
	(*SpiritLinkageDataMsg)(nil),        // 1: com.yq.msg.CityMsg.SpiritLinkageDataMsg
	(*SpiritFreeAdData)(nil),            // 2: com.yq.msg.CityMsg.SpiritFreeAdData
	(*SpiritCombineMsg)(nil),            // 3: com.yq.msg.CityMsg.SpiritCombineMsg
	(*SpiritBattleTeamMsg)(nil),         // 4: com.yq.msg.CityMsg.SpiritBattleTeamMsg
	(*SpiritDrawReq)(nil),               // 5: com.yq.msg.CityMsg.SpiritDrawReq
	(*SpiritDrawResp)(nil),              // 6: com.yq.msg.CityMsg.SpiritDrawResp
	(*SpiritDrawResult)(nil),            // 7: com.yq.msg.CityMsg.SpiritDrawResult
	(*SpiritUnlockReq)(nil),             // 8: com.yq.msg.CityMsg.SpiritUnlockReq
	(*SpiritUnlockResp)(nil),            // 9: com.yq.msg.CityMsg.SpiritUnlockResp
	(*SpiritLvUpReq)(nil),               // 10: com.yq.msg.CityMsg.SpiritLvUpReq
	(*SpiritLvUpResp)(nil),              // 11: com.yq.msg.CityMsg.SpiritLvUpResp
	(*SwitchBattleTeamReq)(nil),         // 12: com.yq.msg.CityMsg.SwitchBattleTeamReq
	(*SwitchBattleTeamResp)(nil),        // 13: com.yq.msg.CityMsg.SwitchBattleTeamResp
	(*SpiritBattleReq)(nil),             // 14: com.yq.msg.CityMsg.SpiritBattleReq
	(*SpiritBattleResp)(nil),            // 15: com.yq.msg.CityMsg.SpiritBattleResp
	(*SpiritCombineLvUpReq)(nil),        // 16: com.yq.msg.CityMsg.SpiritCombineLvUpReq
	(*SpiritCombineLvUpResp)(nil),       // 17: com.yq.msg.CityMsg.SpiritCombineLvUpResp
	(*SpiritSwitchLinkageSkinReq)(nil),  // 18: com.yq.msg.CityMsg.SpiritSwitchLinkageSkinReq
	(*SpiritSwitchLinkageSkinResp)(nil), // 19: com.yq.msg.CityMsg.SpiritSwitchLinkageSkinResp
	(*SpiritLevelUnlockShowReq)(nil),    // 20: com.yq.msg.CityMsg.SpiritLevelUnlockShowReq
	(*SpiritLevelUnlockShowResp)(nil),   // 21: com.yq.msg.CityMsg.SpiritLevelUnlockShowResp
	(*SpiritDataMsg)(nil),               // 22: com.yq.msg.CityMsg.SpiritDataMsg
}
var file_Spirit_proto_depIdxs = []int32{
	22, // 0: com.yq.msg.CityMsg.SpiritPlayerDataMsg.spiritData:type_name -> com.yq.msg.CityMsg.SpiritDataMsg
	4,  // 1: com.yq.msg.CityMsg.SpiritPlayerDataMsg.spiritBattleTeamMsg:type_name -> com.yq.msg.CityMsg.SpiritBattleTeamMsg
	3,  // 2: com.yq.msg.CityMsg.SpiritPlayerDataMsg.spiritCombineMsg:type_name -> com.yq.msg.CityMsg.SpiritCombineMsg
	2,  // 3: com.yq.msg.CityMsg.SpiritPlayerDataMsg.spiritFreeAd:type_name -> com.yq.msg.CityMsg.SpiritFreeAdData
	1,  // 4: com.yq.msg.CityMsg.SpiritPlayerDataMsg.SpiritLinkageDataMsg:type_name -> com.yq.msg.CityMsg.SpiritLinkageDataMsg
	7,  // 5: com.yq.msg.CityMsg.SpiritDrawResp.drawResult:type_name -> com.yq.msg.CityMsg.SpiritDrawResult
	0,  // 6: com.yq.msg.CityMsg.SpiritDrawResp.syncMsg:type_name -> com.yq.msg.CityMsg.SpiritPlayerDataMsg
	22, // 7: com.yq.msg.CityMsg.SpiritUnlockResp.spiritData:type_name -> com.yq.msg.CityMsg.SpiritDataMsg
	22, // 8: com.yq.msg.CityMsg.SpiritLvUpResp.spiritData:type_name -> com.yq.msg.CityMsg.SpiritDataMsg
	4,  // 9: com.yq.msg.CityMsg.SpiritBattleResp.spiritBattleTeamMsg:type_name -> com.yq.msg.CityMsg.SpiritBattleTeamMsg
	3,  // 10: com.yq.msg.CityMsg.SpiritCombineLvUpResp.spiritCombineMsg:type_name -> com.yq.msg.CityMsg.SpiritCombineMsg
	22, // 11: com.yq.msg.CityMsg.SpiritSwitchLinkageSkinResp.spiritData:type_name -> com.yq.msg.CityMsg.SpiritDataMsg
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_Spirit_proto_init() }
func file_Spirit_proto_init() {
	if File_Spirit_proto != nil {
		return
	}
	file_Common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Spirit_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritPlayerDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritLinkageDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritFreeAdData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritCombineMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritBattleTeamMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritDrawReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritDrawResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritDrawResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritUnlockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritUnlockResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritLvUpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritLvUpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SwitchBattleTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*SwitchBattleTeamResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritBattleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritBattleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritCombineLvUpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritCombineLvUpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritSwitchLinkageSkinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritSwitchLinkageSkinResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritLevelUnlockShowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Spirit_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritLevelUnlockShowResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Spirit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Spirit_proto_goTypes,
		DependencyIndexes: file_Spirit_proto_depIdxs,
		MessageInfos:      file_Spirit_proto_msgTypes,
	}.Build()
	File_Spirit_proto = out.File
	file_Spirit_proto_rawDesc = nil
	file_Spirit_proto_goTypes = nil
	file_Spirit_proto_depIdxs = nil
}
