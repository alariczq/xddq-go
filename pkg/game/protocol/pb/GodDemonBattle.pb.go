// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: GodDemonBattle.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GodDemonBattleProtocols int32

const (
	GodDemonBattleProtocols_god_demon_battle_base_info                 GodDemonBattleProtocols = 214501
	GodDemonBattleProtocols_god_demon_battle_receive_camp_reward       GodDemonBattleProtocols = 214502
	GodDemonBattleProtocols_god_demon_battle_get_camp_playerNum        GodDemonBattleProtocols = 214503
	GodDemonBattleProtocols_god_demon_battle_get_separation_info       GodDemonBattleProtocols = 214505
	GodDemonBattleProtocols_god_demon_battle_set_separation_info       GodDemonBattleProtocols = 214506
	GodDemonBattleProtocols_god_demon_battle_enter_room_info           GodDemonBattleProtocols = 214507
	GodDemonBattleProtocols_god_demon_battle_set_prepare               GodDemonBattleProtocols = 214508
	GodDemonBattleProtocols_god_demon_battle_get_buff_info             GodDemonBattleProtocols = 214510
	GodDemonBattleProtocols_god_demon_battle_choose_buff               GodDemonBattleProtocols = 214511
	GodDemonBattleProtocols_god_demon_battle_get_player_buff           GodDemonBattleProtocols = 214512
	GodDemonBattleProtocols_god_demon_battle_get_god_demon_rank_info   GodDemonBattleProtocols = 214513
	GodDemonBattleProtocols_god_demon_battle_various_wars_info         GodDemonBattleProtocols = 214514
	GodDemonBattleProtocols_god_demon_battle_various_wars_promote_info GodDemonBattleProtocols = 214515
	GodDemonBattleProtocols_god_demon_battle_duel_player_info          GodDemonBattleProtocols = 214516
	GodDemonBattleProtocols_god_demon_battle_set_battle_order          GodDemonBattleProtocols = 214517
	GodDemonBattleProtocols_god_demon_battle_duel_video_info           GodDemonBattleProtocols = 214518
	GodDemonBattleProtocols_god_demon_battle_send_barrage              GodDemonBattleProtocols = 214520
	GodDemonBattleProtocols_god_demon_battle_bet_info                  GodDemonBattleProtocols = 214521
	GodDemonBattleProtocols_god_demon_battle_receive_bet_coin          GodDemonBattleProtocols = 214522
	GodDemonBattleProtocols_god_demon_battle_set_bet                   GodDemonBattleProtocols = 214523
	GodDemonBattleProtocols_god_demon_battle_log_info                  GodDemonBattleProtocols = 214524
	GodDemonBattleProtocols_god_demon_battle_red                       GodDemonBattleProtocols = 214525
	GodDemonBattleProtocols_god_demon_battle_previous_editions_info    GodDemonBattleProtocols = 214526
	GodDemonBattleProtocols_god_demon_battle_get_player_settlement     GodDemonBattleProtocols = 214527
	GodDemonBattleProtocols_god_demon_battle_get_camp_settlement       GodDemonBattleProtocols = 214528
	GodDemonBattleProtocols_god_demon_battle_heartBeat                 GodDemonBattleProtocols = 214529
	GodDemonBattleProtocols_god_demon_battle_worship                   GodDemonBattleProtocols = 214531
	GodDemonBattleProtocols_god_demon_battle_report                    GodDemonBattleProtocols = 214532
	GodDemonBattleProtocols_god_demon_battle_getSuppressedData         GodDemonBattleProtocols = 214534
	GodDemonBattleProtocols_god_demon_look_battle_video                GodDemonBattleProtocols = 214538
	GodDemonBattleProtocols_god_demon_send_guess_reward                GodDemonBattleProtocols = 214540
	GodDemonBattleProtocols_god_demon_qualifier_game_reward_sync       GodDemonBattleProtocols = 214541
	GodDemonBattleProtocols_god_demon_battle_room_player_prepare_sync  GodDemonBattleProtocols = 214550
	GodDemonBattleProtocols_god_demon_battle_room_battle_sync          GodDemonBattleProtocols = 214551
	GodDemonBattleProtocols_god_demon_battle_room_round_sync           GodDemonBattleProtocols = 214552
	GodDemonBattleProtocols_god_demon_player_room_status_sync          GodDemonBattleProtocols = 214553
	GodDemonBattleProtocols_god_demon_player_room_battle_end_sync      GodDemonBattleProtocols = 214554
	GodDemonBattleProtocols_god_demon_battle_apply                     GodDemonBattleProtocols = 214570
	GodDemonBattleProtocols_god_demon_auto_lock_attr                   GodDemonBattleProtocols = 214571
)

// Enum value maps for GodDemonBattleProtocols.
var (
	GodDemonBattleProtocols_name = map[int32]string{
		214501: "god_demon_battle_base_info",
		214502: "god_demon_battle_receive_camp_reward",
		214503: "god_demon_battle_get_camp_playerNum",
		214505: "god_demon_battle_get_separation_info",
		214506: "god_demon_battle_set_separation_info",
		214507: "god_demon_battle_enter_room_info",
		214508: "god_demon_battle_set_prepare",
		214510: "god_demon_battle_get_buff_info",
		214511: "god_demon_battle_choose_buff",
		214512: "god_demon_battle_get_player_buff",
		214513: "god_demon_battle_get_god_demon_rank_info",
		214514: "god_demon_battle_various_wars_info",
		214515: "god_demon_battle_various_wars_promote_info",
		214516: "god_demon_battle_duel_player_info",
		214517: "god_demon_battle_set_battle_order",
		214518: "god_demon_battle_duel_video_info",
		214520: "god_demon_battle_send_barrage",
		214521: "god_demon_battle_bet_info",
		214522: "god_demon_battle_receive_bet_coin",
		214523: "god_demon_battle_set_bet",
		214524: "god_demon_battle_log_info",
		214525: "god_demon_battle_red",
		214526: "god_demon_battle_previous_editions_info",
		214527: "god_demon_battle_get_player_settlement",
		214528: "god_demon_battle_get_camp_settlement",
		214529: "god_demon_battle_heartBeat",
		214531: "god_demon_battle_worship",
		214532: "god_demon_battle_report",
		214534: "god_demon_battle_getSuppressedData",
		214538: "god_demon_look_battle_video",
		214540: "god_demon_send_guess_reward",
		214541: "god_demon_qualifier_game_reward_sync",
		214550: "god_demon_battle_room_player_prepare_sync",
		214551: "god_demon_battle_room_battle_sync",
		214552: "god_demon_battle_room_round_sync",
		214553: "god_demon_player_room_status_sync",
		214554: "god_demon_player_room_battle_end_sync",
		214570: "god_demon_battle_apply",
		214571: "god_demon_auto_lock_attr",
	}
	GodDemonBattleProtocols_value = map[string]int32{
		"god_demon_battle_base_info":                 214501,
		"god_demon_battle_receive_camp_reward":       214502,
		"god_demon_battle_get_camp_playerNum":        214503,
		"god_demon_battle_get_separation_info":       214505,
		"god_demon_battle_set_separation_info":       214506,
		"god_demon_battle_enter_room_info":           214507,
		"god_demon_battle_set_prepare":               214508,
		"god_demon_battle_get_buff_info":             214510,
		"god_demon_battle_choose_buff":               214511,
		"god_demon_battle_get_player_buff":           214512,
		"god_demon_battle_get_god_demon_rank_info":   214513,
		"god_demon_battle_various_wars_info":         214514,
		"god_demon_battle_various_wars_promote_info": 214515,
		"god_demon_battle_duel_player_info":          214516,
		"god_demon_battle_set_battle_order":          214517,
		"god_demon_battle_duel_video_info":           214518,
		"god_demon_battle_send_barrage":              214520,
		"god_demon_battle_bet_info":                  214521,
		"god_demon_battle_receive_bet_coin":          214522,
		"god_demon_battle_set_bet":                   214523,
		"god_demon_battle_log_info":                  214524,
		"god_demon_battle_red":                       214525,
		"god_demon_battle_previous_editions_info":    214526,
		"god_demon_battle_get_player_settlement":     214527,
		"god_demon_battle_get_camp_settlement":       214528,
		"god_demon_battle_heartBeat":                 214529,
		"god_demon_battle_worship":                   214531,
		"god_demon_battle_report":                    214532,
		"god_demon_battle_getSuppressedData":         214534,
		"god_demon_look_battle_video":                214538,
		"god_demon_send_guess_reward":                214540,
		"god_demon_qualifier_game_reward_sync":       214541,
		"god_demon_battle_room_player_prepare_sync":  214550,
		"god_demon_battle_room_battle_sync":          214551,
		"god_demon_battle_room_round_sync":           214552,
		"god_demon_player_room_status_sync":          214553,
		"god_demon_player_room_battle_end_sync":      214554,
		"god_demon_battle_apply":                     214570,
		"god_demon_auto_lock_attr":                   214571,
	}
)

func (x GodDemonBattleProtocols) Enum() *GodDemonBattleProtocols {
	p := new(GodDemonBattleProtocols)
	*p = x
	return p
}

func (x GodDemonBattleProtocols) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GodDemonBattleProtocols) Descriptor() protoreflect.EnumDescriptor {
	return file_GodDemonBattle_proto_enumTypes[0].Descriptor()
}

func (GodDemonBattleProtocols) Type() protoreflect.EnumType {
	return &file_GodDemonBattle_proto_enumTypes[0]
}

func (x GodDemonBattleProtocols) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GodDemonBattleProtocols) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GodDemonBattleProtocols(num)
	return nil
}

// Deprecated: Use GodDemonBattleProtocols.Descriptor instead.
func (GodDemonBattleProtocols) EnumDescriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{0}
}

type GodDemonBattleRedPointEnum int32

const (
	GodDemonBattleRedPointEnum_redNone            GodDemonBattleRedPointEnum = 0
	GodDemonBattleRedPointEnum_redGuess           GodDemonBattleRedPointEnum = 1
	GodDemonBattleRedPointEnum_redQualifierReward GodDemonBattleRedPointEnum = 2
	GodDemonBattleRedPointEnum_redPromotionReward GodDemonBattleRedPointEnum = 3
	GodDemonBattleRedPointEnum_redCampReward      GodDemonBattleRedPointEnum = 4
	GodDemonBattleRedPointEnum_redWorship         GodDemonBattleRedPointEnum = 5
)

// Enum value maps for GodDemonBattleRedPointEnum.
var (
	GodDemonBattleRedPointEnum_name = map[int32]string{
		0: "redNone",
		1: "redGuess",
		2: "redQualifierReward",
		3: "redPromotionReward",
		4: "redCampReward",
		5: "redWorship",
	}
	GodDemonBattleRedPointEnum_value = map[string]int32{
		"redNone":            0,
		"redGuess":           1,
		"redQualifierReward": 2,
		"redPromotionReward": 3,
		"redCampReward":      4,
		"redWorship":         5,
	}
)

func (x GodDemonBattleRedPointEnum) Enum() *GodDemonBattleRedPointEnum {
	p := new(GodDemonBattleRedPointEnum)
	*p = x
	return p
}

func (x GodDemonBattleRedPointEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GodDemonBattleRedPointEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_GodDemonBattle_proto_enumTypes[1].Descriptor()
}

func (GodDemonBattleRedPointEnum) Type() protoreflect.EnumType {
	return &file_GodDemonBattle_proto_enumTypes[1]
}

func (x GodDemonBattleRedPointEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GodDemonBattleRedPointEnum) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GodDemonBattleRedPointEnum(num)
	return nil
}

// Deprecated: Use GodDemonBattleRedPointEnum.Descriptor instead.
func (GodDemonBattleRedPointEnum) EnumDescriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{1}
}

type GodDemonBattleConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuffConfig   []*GodDemonBattleBuffConfig      `protobuf:"bytes,1,rep,name=buffConfig" json:"buffConfig,omitempty"`
	MatChConfig  []*GodDemonBattleMatchConfig     `protobuf:"bytes,2,rep,name=matChConfig" json:"matChConfig,omitempty"`
	TimeConfig   []*GodDemonBattleTimeConfig      `protobuf:"bytes,3,rep,name=timeConfig" json:"timeConfig,omitempty"`
	SettleConfig []*GodDemonBattleSettleConfigMsg `protobuf:"bytes,4,rep,name=settleConfig" json:"settleConfig,omitempty"`
}

func (x *GodDemonBattleConfig) Reset() {
	*x = GodDemonBattleConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleConfig) ProtoMessage() {}

func (x *GodDemonBattleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleConfig.ProtoReflect.Descriptor instead.
func (*GodDemonBattleConfig) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{0}
}

func (x *GodDemonBattleConfig) GetBuffConfig() []*GodDemonBattleBuffConfig {
	if x != nil {
		return x.BuffConfig
	}
	return nil
}

func (x *GodDemonBattleConfig) GetMatChConfig() []*GodDemonBattleMatchConfig {
	if x != nil {
		return x.MatChConfig
	}
	return nil
}

func (x *GodDemonBattleConfig) GetTimeConfig() []*GodDemonBattleTimeConfig {
	if x != nil {
		return x.TimeConfig
	}
	return nil
}

func (x *GodDemonBattleConfig) GetSettleConfig() []*GodDemonBattleSettleConfigMsg {
	if x != nil {
		return x.SettleConfig
	}
	return nil
}

type GodDemonBattleSettleConfigMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Id         *int32  `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	MinScore   *int32  `protobuf:"varint,3,req,name=minScore" json:"minScore,omitempty"`
	Reward     *string `protobuf:"bytes,4,req,name=reward" json:"reward,omitempty"`
}

func (x *GodDemonBattleSettleConfigMsg) Reset() {
	*x = GodDemonBattleSettleConfigMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleSettleConfigMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleSettleConfigMsg) ProtoMessage() {}

func (x *GodDemonBattleSettleConfigMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleSettleConfigMsg.ProtoReflect.Descriptor instead.
func (*GodDemonBattleSettleConfigMsg) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{1}
}

func (x *GodDemonBattleSettleConfigMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleSettleConfigMsg) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *GodDemonBattleSettleConfigMsg) GetMinScore() int32 {
	if x != nil && x.MinScore != nil {
		return *x.MinScore
	}
	return 0
}

func (x *GodDemonBattleSettleConfigMsg) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type GodDemonBattleBuffConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Id         *int32 `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	SkillId    *int32 `protobuf:"varint,3,req,name=skillId" json:"skillId,omitempty"`
	Turn       *int32 `protobuf:"varint,4,req,name=turn" json:"turn,omitempty"`
	Weight     *int32 `protobuf:"varint,5,req,name=weight" json:"weight,omitempty"`
}

func (x *GodDemonBattleBuffConfig) Reset() {
	*x = GodDemonBattleBuffConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleBuffConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleBuffConfig) ProtoMessage() {}

func (x *GodDemonBattleBuffConfig) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleBuffConfig.ProtoReflect.Descriptor instead.
func (*GodDemonBattleBuffConfig) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{2}
}

func (x *GodDemonBattleBuffConfig) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleBuffConfig) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *GodDemonBattleBuffConfig) GetSkillId() int32 {
	if x != nil && x.SkillId != nil {
		return *x.SkillId
	}
	return 0
}

func (x *GodDemonBattleBuffConfig) GetTurn() int32 {
	if x != nil && x.Turn != nil {
		return *x.Turn
	}
	return 0
}

func (x *GodDemonBattleBuffConfig) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

type GodDemonBattleMatchConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId    *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Id            *int32  `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Name          *string `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	MinLevel      *int32  `protobuf:"varint,4,req,name=minLevel" json:"minLevel,omitempty"`
	MaxLevel      *int32  `protobuf:"varint,5,req,name=maxLevel" json:"maxLevel,omitempty"`
	StandardLevel *int32  `protobuf:"varint,6,req,name=standardLevel" json:"standardLevel,omitempty"`
	MinNum        *string `protobuf:"bytes,7,req,name=minNum" json:"minNum,omitempty"`
	GroupNum      *string `protobuf:"bytes,8,req,name=groupNum" json:"groupNum,omitempty"`
	ProtectNum    *string `protobuf:"bytes,9,req,name=protectNum" json:"protectNum,omitempty"`
	TimeOffset    *int32  `protobuf:"varint,10,req,name=timeOffset" json:"timeOffset,omitempty"`
}

func (x *GodDemonBattleMatchConfig) Reset() {
	*x = GodDemonBattleMatchConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleMatchConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleMatchConfig) ProtoMessage() {}

func (x *GodDemonBattleMatchConfig) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleMatchConfig.ProtoReflect.Descriptor instead.
func (*GodDemonBattleMatchConfig) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{3}
}

func (x *GodDemonBattleMatchConfig) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleMatchConfig) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *GodDemonBattleMatchConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GodDemonBattleMatchConfig) GetMinLevel() int32 {
	if x != nil && x.MinLevel != nil {
		return *x.MinLevel
	}
	return 0
}

func (x *GodDemonBattleMatchConfig) GetMaxLevel() int32 {
	if x != nil && x.MaxLevel != nil {
		return *x.MaxLevel
	}
	return 0
}

func (x *GodDemonBattleMatchConfig) GetStandardLevel() int32 {
	if x != nil && x.StandardLevel != nil {
		return *x.StandardLevel
	}
	return 0
}

func (x *GodDemonBattleMatchConfig) GetMinNum() string {
	if x != nil && x.MinNum != nil {
		return *x.MinNum
	}
	return ""
}

func (x *GodDemonBattleMatchConfig) GetGroupNum() string {
	if x != nil && x.GroupNum != nil {
		return *x.GroupNum
	}
	return ""
}

func (x *GodDemonBattleMatchConfig) GetProtectNum() string {
	if x != nil && x.ProtectNum != nil {
		return *x.ProtectNum
	}
	return ""
}

func (x *GodDemonBattleMatchConfig) GetTimeOffset() int32 {
	if x != nil && x.TimeOffset != nil {
		return *x.TimeOffset
	}
	return 0
}

type GodDemonBattleTimeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	TimeId     *int32  `protobuf:"varint,2,req,name=timeId" json:"timeId,omitempty"`
	Type       *int32  `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
	Session    *int32  `protobuf:"varint,4,req,name=session" json:"session,omitempty"`
	BeginDay   *int32  `protobuf:"varint,5,req,name=beginDay" json:"beginDay,omitempty"`
	BeginTime  *int32  `protobuf:"varint,6,req,name=beginTime" json:"beginTime,omitempty"`
	DurTime    *int32  `protobuf:"varint,7,req,name=durTime" json:"durTime,omitempty"`
	Param      *string `protobuf:"bytes,8,req,name=param" json:"param,omitempty"`
}

func (x *GodDemonBattleTimeConfig) Reset() {
	*x = GodDemonBattleTimeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleTimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleTimeConfig) ProtoMessage() {}

func (x *GodDemonBattleTimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleTimeConfig.ProtoReflect.Descriptor instead.
func (*GodDemonBattleTimeConfig) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{4}
}

func (x *GodDemonBattleTimeConfig) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleTimeConfig) GetTimeId() int32 {
	if x != nil && x.TimeId != nil {
		return *x.TimeId
	}
	return 0
}

func (x *GodDemonBattleTimeConfig) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *GodDemonBattleTimeConfig) GetSession() int32 {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return 0
}

func (x *GodDemonBattleTimeConfig) GetBeginDay() int32 {
	if x != nil && x.BeginDay != nil {
		return *x.BeginDay
	}
	return 0
}

func (x *GodDemonBattleTimeConfig) GetBeginTime() int32 {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return 0
}

func (x *GodDemonBattleTimeConfig) GetDurTime() int32 {
	if x != nil && x.DurTime != nil {
		return *x.DurTime
	}
	return 0
}

func (x *GodDemonBattleTimeConfig) GetParam() string {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return ""
}

type GodDemonCommonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *GodDemonCommonReq) Reset() {
	*x = GodDemonCommonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonCommonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonCommonReq) ProtoMessage() {}

func (x *GodDemonCommonReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonCommonReq.ProtoReflect.Descriptor instead.
func (*GodDemonCommonReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{5}
}

func (x *GodDemonCommonReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type GodDemonRankList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankList []*GodDemonBattleRankMsg `protobuf:"bytes,1,rep,name=rankList" json:"rankList,omitempty"`
}

func (x *GodDemonRankList) Reset() {
	*x = GodDemonRankList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonRankList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonRankList) ProtoMessage() {}

func (x *GodDemonRankList) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonRankList.ProtoReflect.Descriptor instead.
func (*GodDemonRankList) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{6}
}

func (x *GodDemonRankList) GetRankList() []*GodDemonBattleRankMsg {
	if x != nil {
		return x.RankList
	}
	return nil
}

type GodDemonBattleRankMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId       *int64                   `protobuf:"varint,1,opt,name=playerId" json:"playerId,omitempty"`
	PlayerBaseData *PlayerCharacterImageMsg `protobuf:"bytes,2,opt,name=playerBaseData" json:"playerBaseData,omitempty"`
	Value          *int32                   `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	Rank           *int32                   `protobuf:"varint,4,opt,name=rank" json:"rank,omitempty"`
}

func (x *GodDemonBattleRankMsg) Reset() {
	*x = GodDemonBattleRankMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleRankMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleRankMsg) ProtoMessage() {}

func (x *GodDemonBattleRankMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleRankMsg.ProtoReflect.Descriptor instead.
func (*GodDemonBattleRankMsg) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{7}
}

func (x *GodDemonBattleRankMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *GodDemonBattleRankMsg) GetPlayerBaseData() *PlayerCharacterImageMsg {
	if x != nil {
		return x.PlayerBaseData
	}
	return nil
}

func (x *GodDemonBattleRankMsg) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *GodDemonBattleRankMsg) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

type GodDemonBattleBaseInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                  *int32                    `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	CampPlayerNum        []*GodDemonPlayerCountMsg `protobuf:"bytes,2,rep,name=campPlayerNum" json:"campPlayerNum,omitempty"`
	Suppressed           *bool                     `protobuf:"varint,3,opt,name=suppressed" json:"suppressed,omitempty"`
	ServerIdArray        []int64                   `protobuf:"varint,4,rep,name=serverIdArray" json:"serverIdArray,omitempty"`
	PlayerInfo           *GodDemonBattlePlayerInfo `protobuf:"bytes,5,opt,name=playerInfo" json:"playerInfo,omitempty"`
	GodRankData          []*GodDemonRankData       `protobuf:"bytes,6,rep,name=godRankData" json:"godRankData,omitempty"`
	DemonrankData        []*GodDemonRankData       `protobuf:"bytes,7,rep,name=DemonrankData" json:"DemonrankData,omitempty"`
	Session              *int32                    `protobuf:"varint,8,opt,name=session" json:"session,omitempty"`
	InRoomBattle         *bool                     `protobuf:"varint,9,opt,name=inRoomBattle" json:"inRoomBattle,omitempty"`
	RealsMatchList       []*GodDemonRealsMatchMsg  `protobuf:"bytes,10,rep,name=realsMatchList" json:"realsMatchList,omitempty"`
	WinCamp              *int32                    `protobuf:"varint,11,opt,name=winCamp" json:"winCamp,omitempty"`
	CanReceiveCampReward *bool                     `protobuf:"varint,12,opt,name=canReceiveCampReward" json:"canReceiveCampReward,omitempty"`
}

func (x *GodDemonBattleBaseInfoResp) Reset() {
	*x = GodDemonBattleBaseInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleBaseInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleBaseInfoResp) ProtoMessage() {}

func (x *GodDemonBattleBaseInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleBaseInfoResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleBaseInfoResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{8}
}

func (x *GodDemonBattleBaseInfoResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleBaseInfoResp) GetCampPlayerNum() []*GodDemonPlayerCountMsg {
	if x != nil {
		return x.CampPlayerNum
	}
	return nil
}

func (x *GodDemonBattleBaseInfoResp) GetSuppressed() bool {
	if x != nil && x.Suppressed != nil {
		return *x.Suppressed
	}
	return false
}

func (x *GodDemonBattleBaseInfoResp) GetServerIdArray() []int64 {
	if x != nil {
		return x.ServerIdArray
	}
	return nil
}

func (x *GodDemonBattleBaseInfoResp) GetPlayerInfo() *GodDemonBattlePlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *GodDemonBattleBaseInfoResp) GetGodRankData() []*GodDemonRankData {
	if x != nil {
		return x.GodRankData
	}
	return nil
}

func (x *GodDemonBattleBaseInfoResp) GetDemonrankData() []*GodDemonRankData {
	if x != nil {
		return x.DemonrankData
	}
	return nil
}

func (x *GodDemonBattleBaseInfoResp) GetSession() int32 {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return 0
}

func (x *GodDemonBattleBaseInfoResp) GetInRoomBattle() bool {
	if x != nil && x.InRoomBattle != nil {
		return *x.InRoomBattle
	}
	return false
}

func (x *GodDemonBattleBaseInfoResp) GetRealsMatchList() []*GodDemonRealsMatchMsg {
	if x != nil {
		return x.RealsMatchList
	}
	return nil
}

func (x *GodDemonBattleBaseInfoResp) GetWinCamp() int32 {
	if x != nil && x.WinCamp != nil {
		return *x.WinCamp
	}
	return 0
}

func (x *GodDemonBattleBaseInfoResp) GetCanReceiveCampReward() bool {
	if x != nil && x.CanReceiveCampReward != nil {
		return *x.CanReceiveCampReward
	}
	return false
}

type GodDemonPlayerCountMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId     *int32 `protobuf:"varint,1,opt,name=zoneId" json:"zoneId,omitempty"`
	GodCount   *int32 `protobuf:"varint,2,opt,name=godCount" json:"godCount,omitempty"`
	DemonCount *int32 `protobuf:"varint,3,opt,name=demonCount" json:"demonCount,omitempty"`
}

func (x *GodDemonPlayerCountMsg) Reset() {
	*x = GodDemonPlayerCountMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonPlayerCountMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonPlayerCountMsg) ProtoMessage() {}

func (x *GodDemonPlayerCountMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonPlayerCountMsg.ProtoReflect.Descriptor instead.
func (*GodDemonPlayerCountMsg) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{9}
}

func (x *GodDemonPlayerCountMsg) GetZoneId() int32 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *GodDemonPlayerCountMsg) GetGodCount() int32 {
	if x != nil && x.GodCount != nil {
		return *x.GodCount
	}
	return 0
}

func (x *GodDemonPlayerCountMsg) GetDemonCount() int32 {
	if x != nil && x.DemonCount != nil {
		return *x.DemonCount
	}
	return 0
}

type GodDemonRealsMatchMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	MinLv *int32 `protobuf:"varint,2,req,name=minLv" json:"minLv,omitempty"`
	MaxLv *int32 `protobuf:"varint,3,req,name=maxLv" json:"maxLv,omitempty"`
}

func (x *GodDemonRealsMatchMsg) Reset() {
	*x = GodDemonRealsMatchMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonRealsMatchMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonRealsMatchMsg) ProtoMessage() {}

func (x *GodDemonRealsMatchMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonRealsMatchMsg.ProtoReflect.Descriptor instead.
func (*GodDemonRealsMatchMsg) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{10}
}

func (x *GodDemonRealsMatchMsg) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *GodDemonRealsMatchMsg) GetMinLv() int32 {
	if x != nil && x.MinLv != nil {
		return *x.MinLv
	}
	return 0
}

func (x *GodDemonRealsMatchMsg) GetMaxLv() int32 {
	if x != nil && x.MaxLv != nil {
		return *x.MaxLv
	}
	return 0
}

type GodDemonBattlePlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Camp             *int32 `protobuf:"varint,1,opt,name=camp" json:"camp,omitempty"`
	ZoneId           *int32 `protobuf:"varint,2,opt,name=zoneId" json:"zoneId,omitempty"`
	PromotionSession *int32 `protobuf:"varint,3,opt,name=promotionSession" json:"promotionSession,omitempty"`
	PromotionRank    *int32 `protobuf:"varint,4,opt,name=promotionRank" json:"promotionRank,omitempty"`
	PreselectionRank *int32 `protobuf:"varint,5,opt,name=preselectionRank" json:"preselectionRank,omitempty"`
}

func (x *GodDemonBattlePlayerInfo) Reset() {
	*x = GodDemonBattlePlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattlePlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattlePlayerInfo) ProtoMessage() {}

func (x *GodDemonBattlePlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattlePlayerInfo.ProtoReflect.Descriptor instead.
func (*GodDemonBattlePlayerInfo) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{11}
}

func (x *GodDemonBattlePlayerInfo) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *GodDemonBattlePlayerInfo) GetZoneId() int32 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *GodDemonBattlePlayerInfo) GetPromotionSession() int32 {
	if x != nil && x.PromotionSession != nil {
		return *x.PromotionSession
	}
	return 0
}

func (x *GodDemonBattlePlayerInfo) GetPromotionRank() int32 {
	if x != nil && x.PromotionRank != nil {
		return *x.PromotionRank
	}
	return 0
}

func (x *GodDemonBattlePlayerInfo) GetPreselectionRank() int32 {
	if x != nil && x.PreselectionRank != nil {
		return *x.PreselectionRank
	}
	return 0
}

type GodDemonBattleSuppressAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EquipList      []*EquipmentDataMsg `protobuf:"bytes,1,rep,name=equipList" json:"equipList,omitempty"`
	PreRealms      *int32              `protobuf:"varint,2,opt,name=preRealms" json:"preRealms,omitempty"`
	AfterRealms    *int32              `protobuf:"varint,3,opt,name=afterRealms" json:"afterRealms,omitempty"`
	PreAttribute   []*AttributeDataMsg `protobuf:"bytes,4,rep,name=preAttribute" json:"preAttribute,omitempty"`
	AfterAttribute []*AttributeDataMsg `protobuf:"bytes,5,rep,name=afterAttribute" json:"afterAttribute,omitempty"`
}

func (x *GodDemonBattleSuppressAttribute) Reset() {
	*x = GodDemonBattleSuppressAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleSuppressAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleSuppressAttribute) ProtoMessage() {}

func (x *GodDemonBattleSuppressAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleSuppressAttribute.ProtoReflect.Descriptor instead.
func (*GodDemonBattleSuppressAttribute) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{12}
}

func (x *GodDemonBattleSuppressAttribute) GetEquipList() []*EquipmentDataMsg {
	if x != nil {
		return x.EquipList
	}
	return nil
}

func (x *GodDemonBattleSuppressAttribute) GetPreRealms() int32 {
	if x != nil && x.PreRealms != nil {
		return *x.PreRealms
	}
	return 0
}

func (x *GodDemonBattleSuppressAttribute) GetAfterRealms() int32 {
	if x != nil && x.AfterRealms != nil {
		return *x.AfterRealms
	}
	return 0
}

func (x *GodDemonBattleSuppressAttribute) GetPreAttribute() []*AttributeDataMsg {
	if x != nil {
		return x.PreAttribute
	}
	return nil
}

func (x *GodDemonBattleSuppressAttribute) GetAfterAttribute() []*AttributeDataMsg {
	if x != nil {
		return x.AfterAttribute
	}
	return nil
}

type GodDemonBattleReceiveCampRewardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Reward *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
}

func (x *GodDemonBattleReceiveCampRewardResp) Reset() {
	*x = GodDemonBattleReceiveCampRewardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleReceiveCampRewardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleReceiveCampRewardResp) ProtoMessage() {}

func (x *GodDemonBattleReceiveCampRewardResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleReceiveCampRewardResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleReceiveCampRewardResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{13}
}

func (x *GodDemonBattleReceiveCampRewardResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleReceiveCampRewardResp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type GodDemonBattleGetCampPlayerNumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	CampPlayerNum []int32 `protobuf:"varint,2,rep,name=campPlayerNum" json:"campPlayerNum,omitempty"`
}

func (x *GodDemonBattleGetCampPlayerNumResp) Reset() {
	*x = GodDemonBattleGetCampPlayerNumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleGetCampPlayerNumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleGetCampPlayerNumResp) ProtoMessage() {}

func (x *GodDemonBattleGetCampPlayerNumResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleGetCampPlayerNumResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleGetCampPlayerNumResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{14}
}

func (x *GodDemonBattleGetCampPlayerNumResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleGetCampPlayerNumResp) GetCampPlayerNum() []int32 {
	if x != nil {
		return x.CampPlayerNum
	}
	return nil
}

type GodDemonBattleGetSeparationInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PlayerId   *int64 `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
}

func (x *GodDemonBattleGetSeparationInfoReq) Reset() {
	*x = GodDemonBattleGetSeparationInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleGetSeparationInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleGetSeparationInfoReq) ProtoMessage() {}

func (x *GodDemonBattleGetSeparationInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleGetSeparationInfoReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattleGetSeparationInfoReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{15}
}

func (x *GodDemonBattleGetSeparationInfoReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleGetSeparationInfoReq) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type GodDemonBattleGetSeparationInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32               `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	PlayerDetail *PlayerDetailDataMsg `protobuf:"bytes,2,opt,name=playerDetail" json:"playerDetail,omitempty"`
}

func (x *GodDemonBattleGetSeparationInfoResp) Reset() {
	*x = GodDemonBattleGetSeparationInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleGetSeparationInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleGetSeparationInfoResp) ProtoMessage() {}

func (x *GodDemonBattleGetSeparationInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleGetSeparationInfoResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleGetSeparationInfoResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{16}
}

func (x *GodDemonBattleGetSeparationInfoResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleGetSeparationInfoResp) GetPlayerDetail() *PlayerDetailDataMsg {
	if x != nil {
		return x.PlayerDetail
	}
	return nil
}

type GodDemonBattleEnterRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	RoomId     *int64 `protobuf:"varint,2,opt,name=roomId" json:"roomId,omitempty"`
	ZoneId     *int32 `protobuf:"varint,3,opt,name=zoneId" json:"zoneId,omitempty"`
}

func (x *GodDemonBattleEnterRoomReq) Reset() {
	*x = GodDemonBattleEnterRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleEnterRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleEnterRoomReq) ProtoMessage() {}

func (x *GodDemonBattleEnterRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleEnterRoomReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattleEnterRoomReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{17}
}

func (x *GodDemonBattleEnterRoomReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleEnterRoomReq) GetRoomId() int64 {
	if x != nil && x.RoomId != nil {
		return *x.RoomId
	}
	return 0
}

func (x *GodDemonBattleEnterRoomReq) GetZoneId() int32 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

type GodDemonBattleEnterRoomResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret            *int32                       `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	RoomId         *int64                       `protobuf:"varint,2,opt,name=roomId" json:"roomId,omitempty"`
	PlayerInfo     []*GodDemonRoomPlayerInfoMsg `protobuf:"bytes,3,rep,name=playerInfo" json:"playerInfo,omitempty"`
	RoundBeginTime *int64                       `protobuf:"varint,4,opt,name=roundBeginTime" json:"roundBeginTime,omitempty"`
	Round          *int32                       `protobuf:"varint,5,opt,name=round" json:"round,omitempty"`
	HadRefreshNum  *int32                       `protobuf:"varint,6,opt,name=hadRefreshNum" json:"hadRefreshNum,omitempty"`
	CurrentEnemyId *int64                       `protobuf:"varint,7,opt,name=currentEnemyId" json:"currentEnemyId,omitempty"`
	TimeId         *int32                       `protobuf:"varint,8,opt,name=timeId" json:"timeId,omitempty"`
	ChooseBuffVec  []int32                      `protobuf:"varint,9,rep,name=chooseBuffVec" json:"chooseBuffVec,omitempty"`
}

func (x *GodDemonBattleEnterRoomResp) Reset() {
	*x = GodDemonBattleEnterRoomResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleEnterRoomResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleEnterRoomResp) ProtoMessage() {}

func (x *GodDemonBattleEnterRoomResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleEnterRoomResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleEnterRoomResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{18}
}

func (x *GodDemonBattleEnterRoomResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleEnterRoomResp) GetRoomId() int64 {
	if x != nil && x.RoomId != nil {
		return *x.RoomId
	}
	return 0
}

func (x *GodDemonBattleEnterRoomResp) GetPlayerInfo() []*GodDemonRoomPlayerInfoMsg {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *GodDemonBattleEnterRoomResp) GetRoundBeginTime() int64 {
	if x != nil && x.RoundBeginTime != nil {
		return *x.RoundBeginTime
	}
	return 0
}

func (x *GodDemonBattleEnterRoomResp) GetRound() int32 {
	if x != nil && x.Round != nil {
		return *x.Round
	}
	return 0
}

func (x *GodDemonBattleEnterRoomResp) GetHadRefreshNum() int32 {
	if x != nil && x.HadRefreshNum != nil {
		return *x.HadRefreshNum
	}
	return 0
}

func (x *GodDemonBattleEnterRoomResp) GetCurrentEnemyId() int64 {
	if x != nil && x.CurrentEnemyId != nil {
		return *x.CurrentEnemyId
	}
	return 0
}

func (x *GodDemonBattleEnterRoomResp) GetTimeId() int32 {
	if x != nil && x.TimeId != nil {
		return *x.TimeId
	}
	return 0
}

func (x *GodDemonBattleEnterRoomResp) GetChooseBuffVec() []int32 {
	if x != nil {
		return x.ChooseBuffVec
	}
	return nil
}

type GodDemonRoomPlayerInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerData *PlayerCharacterImageMsg `protobuf:"bytes,1,opt,name=playerData" json:"playerData,omitempty"`
	Life       *int32                   `protobuf:"varint,2,opt,name=life" json:"life,omitempty"`
	BuffVec    []int32                  `protobuf:"varint,3,rep,name=buffVec" json:"buffVec,omitempty"`
	HadPrepare *bool                    `protobuf:"varint,4,opt,name=hadPrepare" json:"hadPrepare,omitempty"`
	WinCount   *int32                   `protobuf:"varint,5,opt,name=winCount" json:"winCount,omitempty"`
	FightValue *string                  `protobuf:"bytes,6,opt,name=fightValue" json:"fightValue,omitempty"`
	Rank       *int32                   `protobuf:"varint,7,opt,name=rank" json:"rank,omitempty"`
}

func (x *GodDemonRoomPlayerInfoMsg) Reset() {
	*x = GodDemonRoomPlayerInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonRoomPlayerInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonRoomPlayerInfoMsg) ProtoMessage() {}

func (x *GodDemonRoomPlayerInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonRoomPlayerInfoMsg.ProtoReflect.Descriptor instead.
func (*GodDemonRoomPlayerInfoMsg) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{19}
}

func (x *GodDemonRoomPlayerInfoMsg) GetPlayerData() *PlayerCharacterImageMsg {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

func (x *GodDemonRoomPlayerInfoMsg) GetLife() int32 {
	if x != nil && x.Life != nil {
		return *x.Life
	}
	return 0
}

func (x *GodDemonRoomPlayerInfoMsg) GetBuffVec() []int32 {
	if x != nil {
		return x.BuffVec
	}
	return nil
}

func (x *GodDemonRoomPlayerInfoMsg) GetHadPrepare() bool {
	if x != nil && x.HadPrepare != nil {
		return *x.HadPrepare
	}
	return false
}

func (x *GodDemonRoomPlayerInfoMsg) GetWinCount() int32 {
	if x != nil && x.WinCount != nil {
		return *x.WinCount
	}
	return 0
}

func (x *GodDemonRoomPlayerInfoMsg) GetFightValue() string {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return ""
}

func (x *GodDemonRoomPlayerInfoMsg) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

type GodDemonBattleSetPrepareResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *GodDemonBattleSetPrepareResp) Reset() {
	*x = GodDemonBattleSetPrepareResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleSetPrepareResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleSetPrepareResp) ProtoMessage() {}

func (x *GodDemonBattleSetPrepareResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleSetPrepareResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleSetPrepareResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{20}
}

func (x *GodDemonBattleSetPrepareResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type GodDemonBattleGetBuffInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	BuffVec       []int32 `protobuf:"varint,2,rep,name=buffVec" json:"buffVec,omitempty"`
	HadRefreshNum *int32  `protobuf:"varint,3,opt,name=hadRefreshNum" json:"hadRefreshNum,omitempty"`
}

func (x *GodDemonBattleGetBuffInfoResp) Reset() {
	*x = GodDemonBattleGetBuffInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleGetBuffInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleGetBuffInfoResp) ProtoMessage() {}

func (x *GodDemonBattleGetBuffInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleGetBuffInfoResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleGetBuffInfoResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{21}
}

func (x *GodDemonBattleGetBuffInfoResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleGetBuffInfoResp) GetBuffVec() []int32 {
	if x != nil {
		return x.BuffVec
	}
	return nil
}

func (x *GodDemonBattleGetBuffInfoResp) GetHadRefreshNum() int32 {
	if x != nil && x.HadRefreshNum != nil {
		return *x.HadRefreshNum
	}
	return 0
}

type GodDemonBattleChooseBuffReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	BuffId     *int32 `protobuf:"varint,2,req,name=buffId" json:"buffId,omitempty"`
}

func (x *GodDemonBattleChooseBuffReq) Reset() {
	*x = GodDemonBattleChooseBuffReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleChooseBuffReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleChooseBuffReq) ProtoMessage() {}

func (x *GodDemonBattleChooseBuffReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleChooseBuffReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattleChooseBuffReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{22}
}

func (x *GodDemonBattleChooseBuffReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleChooseBuffReq) GetBuffId() int32 {
	if x != nil && x.BuffId != nil {
		return *x.BuffId
	}
	return 0
}

type GodDemonBattleChooseBuffResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	BuffId *int32 `protobuf:"varint,2,opt,name=buffId" json:"buffId,omitempty"`
}

func (x *GodDemonBattleChooseBuffResp) Reset() {
	*x = GodDemonBattleChooseBuffResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleChooseBuffResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleChooseBuffResp) ProtoMessage() {}

func (x *GodDemonBattleChooseBuffResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleChooseBuffResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleChooseBuffResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{23}
}

func (x *GodDemonBattleChooseBuffResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleChooseBuffResp) GetBuffId() int32 {
	if x != nil && x.BuffId != nil {
		return *x.BuffId
	}
	return 0
}

type GodDemonBattleGetPlayerBuffReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PlayerId   *int64 `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
}

func (x *GodDemonBattleGetPlayerBuffReq) Reset() {
	*x = GodDemonBattleGetPlayerBuffReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleGetPlayerBuffReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleGetPlayerBuffReq) ProtoMessage() {}

func (x *GodDemonBattleGetPlayerBuffReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleGetPlayerBuffReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattleGetPlayerBuffReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{24}
}

func (x *GodDemonBattleGetPlayerBuffReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleGetPlayerBuffReq) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type GodDemonBattleGetPlayerBuffResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	BuffVec []int32 `protobuf:"varint,2,rep,name=buffVec" json:"buffVec,omitempty"`
}

func (x *GodDemonBattleGetPlayerBuffResp) Reset() {
	*x = GodDemonBattleGetPlayerBuffResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleGetPlayerBuffResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleGetPlayerBuffResp) ProtoMessage() {}

func (x *GodDemonBattleGetPlayerBuffResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleGetPlayerBuffResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleGetPlayerBuffResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{25}
}

func (x *GodDemonBattleGetPlayerBuffResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleGetPlayerBuffResp) GetBuffVec() []int32 {
	if x != nil {
		return x.BuffVec
	}
	return nil
}

type GodDemonBattleGetGodDemonRankInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	ZoneId     *int32 `protobuf:"varint,2,req,name=zoneId" json:"zoneId,omitempty"`
}

func (x *GodDemonBattleGetGodDemonRankInfoReq) Reset() {
	*x = GodDemonBattleGetGodDemonRankInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleGetGodDemonRankInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleGetGodDemonRankInfoReq) ProtoMessage() {}

func (x *GodDemonBattleGetGodDemonRankInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleGetGodDemonRankInfoReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattleGetGodDemonRankInfoReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{26}
}

func (x *GodDemonBattleGetGodDemonRankInfoReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleGetGodDemonRankInfoReq) GetZoneId() int32 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

type GodDemonBattleGetGodDemonRankInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32              `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	RankData []*GodDemonRankData `protobuf:"bytes,2,rep,name=rankData" json:"rankData,omitempty"`
	MyRank   *int32              `protobuf:"varint,3,opt,name=myRank" json:"myRank,omitempty"`
}

func (x *GodDemonBattleGetGodDemonRankInfoResp) Reset() {
	*x = GodDemonBattleGetGodDemonRankInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleGetGodDemonRankInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleGetGodDemonRankInfoResp) ProtoMessage() {}

func (x *GodDemonBattleGetGodDemonRankInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleGetGodDemonRankInfoResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleGetGodDemonRankInfoResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{27}
}

func (x *GodDemonBattleGetGodDemonRankInfoResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleGetGodDemonRankInfoResp) GetRankData() []*GodDemonRankData {
	if x != nil {
		return x.RankData
	}
	return nil
}

func (x *GodDemonBattleGetGodDemonRankInfoResp) GetMyRank() int32 {
	if x != nil && x.MyRank != nil {
		return *x.MyRank
	}
	return 0
}

type GodDemonRankData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerAppearance *PlayerCharacterImageMsg `protobuf:"bytes,1,opt,name=playerAppearance" json:"playerAppearance,omitempty"`
	Rank             *int32                   `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	Score            *int32                   `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
	WinNum           *int32                   `protobuf:"varint,4,opt,name=winNum" json:"winNum,omitempty"`
}

func (x *GodDemonRankData) Reset() {
	*x = GodDemonRankData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonRankData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonRankData) ProtoMessage() {}

func (x *GodDemonRankData) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonRankData.ProtoReflect.Descriptor instead.
func (*GodDemonRankData) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{28}
}

func (x *GodDemonRankData) GetPlayerAppearance() *PlayerCharacterImageMsg {
	if x != nil {
		return x.PlayerAppearance
	}
	return nil
}

func (x *GodDemonRankData) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *GodDemonRankData) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *GodDemonRankData) GetWinNum() int32 {
	if x != nil && x.WinNum != nil {
		return *x.WinNum
	}
	return 0
}

type GodDemonBattleVariousWarsInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId      *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	ZoneId          *int32 `protobuf:"varint,2,req,name=zoneId" json:"zoneId,omitempty"`
	GroupId         *int32 `protobuf:"varint,3,opt,name=groupId" json:"groupId,omitempty"`
	VariousWarsType *int32 `protobuf:"varint,4,opt,name=variousWarsType" json:"variousWarsType,omitempty"`
	Camp            *int32 `protobuf:"varint,5,opt,name=camp" json:"camp,omitempty"`
}

func (x *GodDemonBattleVariousWarsInfoReq) Reset() {
	*x = GodDemonBattleVariousWarsInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleVariousWarsInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleVariousWarsInfoReq) ProtoMessage() {}

func (x *GodDemonBattleVariousWarsInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleVariousWarsInfoReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattleVariousWarsInfoReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{29}
}

func (x *GodDemonBattleVariousWarsInfoReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleVariousWarsInfoReq) GetZoneId() int32 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *GodDemonBattleVariousWarsInfoReq) GetGroupId() int32 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *GodDemonBattleVariousWarsInfoReq) GetVariousWarsType() int32 {
	if x != nil && x.VariousWarsType != nil {
		return *x.VariousWarsType
	}
	return 0
}

func (x *GodDemonBattleVariousWarsInfoReq) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

type GodDemonBattleVariousWarsInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32                        `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	TotalGroupNum *int32                        `protobuf:"varint,2,opt,name=totalGroupNum" json:"totalGroupNum,omitempty"`
	MyGroupId     *int32                        `protobuf:"varint,3,opt,name=myGroupId" json:"myGroupId,omitempty"`
	RoomInfo      []*GodDemonBattleSessionRooms `protobuf:"bytes,4,rep,name=roomInfo" json:"roomInfo,omitempty"`
}

func (x *GodDemonBattleVariousWarsInfoResp) Reset() {
	*x = GodDemonBattleVariousWarsInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleVariousWarsInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleVariousWarsInfoResp) ProtoMessage() {}

func (x *GodDemonBattleVariousWarsInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleVariousWarsInfoResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleVariousWarsInfoResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{30}
}

func (x *GodDemonBattleVariousWarsInfoResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleVariousWarsInfoResp) GetTotalGroupNum() int32 {
	if x != nil && x.TotalGroupNum != nil {
		return *x.TotalGroupNum
	}
	return 0
}

func (x *GodDemonBattleVariousWarsInfoResp) GetMyGroupId() int32 {
	if x != nil && x.MyGroupId != nil {
		return *x.MyGroupId
	}
	return 0
}

func (x *GodDemonBattleVariousWarsInfoResp) GetRoomInfo() []*GodDemonBattleSessionRooms {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

type GodDemonBattleSessionRooms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session  *int32                       `protobuf:"varint,1,opt,name=session" json:"session,omitempty"`
	RoomList []*GodDemonBattleSessionRoom `protobuf:"bytes,2,rep,name=roomList" json:"roomList,omitempty"`
}

func (x *GodDemonBattleSessionRooms) Reset() {
	*x = GodDemonBattleSessionRooms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleSessionRooms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleSessionRooms) ProtoMessage() {}

func (x *GodDemonBattleSessionRooms) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleSessionRooms.ProtoReflect.Descriptor instead.
func (*GodDemonBattleSessionRooms) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{31}
}

func (x *GodDemonBattleSessionRooms) GetSession() int32 {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return 0
}

func (x *GodDemonBattleSessionRooms) GetRoomList() []*GodDemonBattleSessionRoom {
	if x != nil {
		return x.RoomList
	}
	return nil
}

type GodDemonBattleSessionRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       *int64 `protobuf:"varint,1,opt,name=roomId" json:"roomId,omitempty"`
	IsMySubGroup *bool  `protobuf:"varint,2,opt,name=isMySubGroup" json:"isMySubGroup,omitempty"`
	IsFinished   *bool  `protobuf:"varint,3,opt,name=isFinished" json:"isFinished,omitempty"`
}

func (x *GodDemonBattleSessionRoom) Reset() {
	*x = GodDemonBattleSessionRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleSessionRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleSessionRoom) ProtoMessage() {}

func (x *GodDemonBattleSessionRoom) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleSessionRoom.ProtoReflect.Descriptor instead.
func (*GodDemonBattleSessionRoom) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{32}
}

func (x *GodDemonBattleSessionRoom) GetRoomId() int64 {
	if x != nil && x.RoomId != nil {
		return *x.RoomId
	}
	return 0
}

func (x *GodDemonBattleSessionRoom) GetIsMySubGroup() bool {
	if x != nil && x.IsMySubGroup != nil {
		return *x.IsMySubGroup
	}
	return false
}

func (x *GodDemonBattleSessionRoom) GetIsFinished() bool {
	if x != nil && x.IsFinished != nil {
		return *x.IsFinished
	}
	return false
}

type GodDemonBattleVariousFinalsPlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	FightValue *string            `protobuf:"bytes,2,opt,name=fightValue" json:"fightValue,omitempty"`
	Life       *int32             `protobuf:"varint,3,opt,name=life" json:"life,omitempty"`
	HeadData   *PlayerHeadDataMsg `protobuf:"bytes,4,opt,name=headData" json:"headData,omitempty"`
	Rank       *int32             `protobuf:"varint,5,opt,name=rank" json:"rank,omitempty"`
}

func (x *GodDemonBattleVariousFinalsPlayerData) Reset() {
	*x = GodDemonBattleVariousFinalsPlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleVariousFinalsPlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleVariousFinalsPlayerData) ProtoMessage() {}

func (x *GodDemonBattleVariousFinalsPlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleVariousFinalsPlayerData.ProtoReflect.Descriptor instead.
func (*GodDemonBattleVariousFinalsPlayerData) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{33}
}

func (x *GodDemonBattleVariousFinalsPlayerData) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GodDemonBattleVariousFinalsPlayerData) GetFightValue() string {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return ""
}

func (x *GodDemonBattleVariousFinalsPlayerData) GetLife() int32 {
	if x != nil && x.Life != nil {
		return *x.Life
	}
	return 0
}

func (x *GodDemonBattleVariousFinalsPlayerData) GetHeadData() *PlayerHeadDataMsg {
	if x != nil {
		return x.HeadData
	}
	return nil
}

func (x *GodDemonBattleVariousFinalsPlayerData) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

type GodDemonBattleVariousWarsPromoteInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId      *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	ZoneId          *int32 `protobuf:"varint,2,req,name=zoneId" json:"zoneId,omitempty"`
	GroupId         *int32 `protobuf:"varint,3,opt,name=groupId" json:"groupId,omitempty"`
	VariousWarsType *int32 `protobuf:"varint,4,opt,name=variousWarsType" json:"variousWarsType,omitempty"`
}

func (x *GodDemonBattleVariousWarsPromoteInfoReq) Reset() {
	*x = GodDemonBattleVariousWarsPromoteInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleVariousWarsPromoteInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleVariousWarsPromoteInfoReq) ProtoMessage() {}

func (x *GodDemonBattleVariousWarsPromoteInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleVariousWarsPromoteInfoReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattleVariousWarsPromoteInfoReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{34}
}

func (x *GodDemonBattleVariousWarsPromoteInfoReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleVariousWarsPromoteInfoReq) GetZoneId() int32 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *GodDemonBattleVariousWarsPromoteInfoReq) GetGroupId() int32 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *GodDemonBattleVariousWarsPromoteInfoReq) GetVariousWarsType() int32 {
	if x != nil && x.VariousWarsType != nil {
		return *x.VariousWarsType
	}
	return 0
}

type GodDemonBattleVariousWarsPromoteInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret            *int32                     `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	PlayerInfoList []*PlayerCharacterImageMsg `protobuf:"bytes,2,rep,name=playerInfoList" json:"playerInfoList,omitempty"`
}

func (x *GodDemonBattleVariousWarsPromoteInfoResp) Reset() {
	*x = GodDemonBattleVariousWarsPromoteInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleVariousWarsPromoteInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleVariousWarsPromoteInfoResp) ProtoMessage() {}

func (x *GodDemonBattleVariousWarsPromoteInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleVariousWarsPromoteInfoResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleVariousWarsPromoteInfoResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{35}
}

func (x *GodDemonBattleVariousWarsPromoteInfoResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleVariousWarsPromoteInfoResp) GetPlayerInfoList() []*PlayerCharacterImageMsg {
	if x != nil {
		return x.PlayerInfoList
	}
	return nil
}

type GodDemonBattleDuelPlayerInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	LookType   *int32 `protobuf:"varint,2,req,name=lookType" json:"lookType,omitempty"`
}

func (x *GodDemonBattleDuelPlayerInfoReq) Reset() {
	*x = GodDemonBattleDuelPlayerInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleDuelPlayerInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleDuelPlayerInfoReq) ProtoMessage() {}

func (x *GodDemonBattleDuelPlayerInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleDuelPlayerInfoReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattleDuelPlayerInfoReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{36}
}

func (x *GodDemonBattleDuelPlayerInfoReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleDuelPlayerInfoReq) GetLookType() int32 {
	if x != nil && x.LookType != nil {
		return *x.LookType
	}
	return 0
}

type GodDemonBattleDuelPlayerInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       *int32                     `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	GodData   []*PlayerCharacterImageMsg `protobuf:"bytes,2,rep,name=godData" json:"godData,omitempty"`
	DemonData []*PlayerCharacterImageMsg `protobuf:"bytes,3,rep,name=demonData" json:"demonData,omitempty"`
}

func (x *GodDemonBattleDuelPlayerInfoResp) Reset() {
	*x = GodDemonBattleDuelPlayerInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleDuelPlayerInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleDuelPlayerInfoResp) ProtoMessage() {}

func (x *GodDemonBattleDuelPlayerInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleDuelPlayerInfoResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleDuelPlayerInfoResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{37}
}

func (x *GodDemonBattleDuelPlayerInfoResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleDuelPlayerInfoResp) GetGodData() []*PlayerCharacterImageMsg {
	if x != nil {
		return x.GodData
	}
	return nil
}

func (x *GodDemonBattleDuelPlayerInfoResp) GetDemonData() []*PlayerCharacterImageMsg {
	if x != nil {
		return x.DemonData
	}
	return nil
}

type GodDemonBattleSetBattleOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId   *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	SetOrderData []int64 `protobuf:"varint,2,rep,name=setOrderData" json:"setOrderData,omitempty"`
}

func (x *GodDemonBattleSetBattleOrderReq) Reset() {
	*x = GodDemonBattleSetBattleOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleSetBattleOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleSetBattleOrderReq) ProtoMessage() {}

func (x *GodDemonBattleSetBattleOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleSetBattleOrderReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattleSetBattleOrderReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{38}
}

func (x *GodDemonBattleSetBattleOrderReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleSetBattleOrderReq) GetSetOrderData() []int64 {
	if x != nil {
		return x.SetOrderData
	}
	return nil
}

type GodDemonBattleSetBattleOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	SetOrderData []int64 `protobuf:"varint,2,rep,name=setOrderData" json:"setOrderData,omitempty"`
}

func (x *GodDemonBattleSetBattleOrderResp) Reset() {
	*x = GodDemonBattleSetBattleOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleSetBattleOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleSetBattleOrderResp) ProtoMessage() {}

func (x *GodDemonBattleSetBattleOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleSetBattleOrderResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleSetBattleOrderResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{39}
}

func (x *GodDemonBattleSetBattleOrderResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleSetBattleOrderResp) GetSetOrderData() []int64 {
	if x != nil {
		return x.SetOrderData
	}
	return nil
}

type GodDemonBattleDuelVideoInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	BattleIdx  *int32 `protobuf:"varint,2,opt,name=battleIdx" json:"battleIdx,omitempty"`
}

func (x *GodDemonBattleDuelVideoInfoReq) Reset() {
	*x = GodDemonBattleDuelVideoInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleDuelVideoInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleDuelVideoInfoReq) ProtoMessage() {}

func (x *GodDemonBattleDuelVideoInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleDuelVideoInfoReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattleDuelVideoInfoReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{40}
}

func (x *GodDemonBattleDuelVideoInfoReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleDuelVideoInfoReq) GetBattleIdx() int32 {
	if x != nil && x.BattleIdx != nil {
		return *x.BattleIdx
	}
	return 0
}

type GodDemonBattleDuelVideoInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32                     `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	AllBattleNum *int32                     `protobuf:"varint,2,opt,name=allBattleNum" json:"allBattleNum,omitempty"`
	VideoData    *GodDemonBattleGetVideoMsg `protobuf:"bytes,3,opt,name=videoData" json:"videoData,omitempty"`
	CurBattleIdx *int32                     `protobuf:"varint,4,opt,name=curBattleIdx" json:"curBattleIdx,omitempty"`
}

func (x *GodDemonBattleDuelVideoInfoResp) Reset() {
	*x = GodDemonBattleDuelVideoInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleDuelVideoInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleDuelVideoInfoResp) ProtoMessage() {}

func (x *GodDemonBattleDuelVideoInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleDuelVideoInfoResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleDuelVideoInfoResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{41}
}

func (x *GodDemonBattleDuelVideoInfoResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleDuelVideoInfoResp) GetAllBattleNum() int32 {
	if x != nil && x.AllBattleNum != nil {
		return *x.AllBattleNum
	}
	return 0
}

func (x *GodDemonBattleDuelVideoInfoResp) GetVideoData() *GodDemonBattleGetVideoMsg {
	if x != nil {
		return x.VideoData
	}
	return nil
}

func (x *GodDemonBattleDuelVideoInfoResp) GetCurBattleIdx() int32 {
	if x != nil && x.CurBattleIdx != nil {
		return *x.CurBattleIdx
	}
	return 0
}

type GodDemonBattleDuelVideoPlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeadInfo   *PlayerHeadAndNameMsg `protobuf:"bytes,1,opt,name=headInfo" json:"headInfo,omitempty"`
	FightValue *int64                `protobuf:"varint,2,opt,name=fightValue" json:"fightValue,omitempty"`
	IsEnd      *bool                 `protobuf:"varint,3,opt,name=isEnd" json:"isEnd,omitempty"`
	CurPower   *int32                `protobuf:"varint,4,opt,name=curPower" json:"curPower,omitempty"`
}

func (x *GodDemonBattleDuelVideoPlayerData) Reset() {
	*x = GodDemonBattleDuelVideoPlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleDuelVideoPlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleDuelVideoPlayerData) ProtoMessage() {}

func (x *GodDemonBattleDuelVideoPlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleDuelVideoPlayerData.ProtoReflect.Descriptor instead.
func (*GodDemonBattleDuelVideoPlayerData) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{42}
}

func (x *GodDemonBattleDuelVideoPlayerData) GetHeadInfo() *PlayerHeadAndNameMsg {
	if x != nil {
		return x.HeadInfo
	}
	return nil
}

func (x *GodDemonBattleDuelVideoPlayerData) GetFightValue() int64 {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return 0
}

func (x *GodDemonBattleDuelVideoPlayerData) GetIsEnd() bool {
	if x != nil && x.IsEnd != nil {
		return *x.IsEnd
	}
	return false
}

func (x *GodDemonBattleDuelVideoPlayerData) GetCurPower() int32 {
	if x != nil && x.CurPower != nil {
		return *x.CurPower
	}
	return 0
}

type GodDemonBattleGetVideoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllBattleRecord *BattleRecordMsg                     `protobuf:"bytes,1,opt,name=allBattleRecord" json:"allBattleRecord,omitempty"`
	BarrageData     []int32                              `protobuf:"varint,2,rep,name=barrageData" json:"barrageData,omitempty"`
	GodData         []*GodDemonBattleDuelVideoPlayerData `protobuf:"bytes,3,rep,name=godData" json:"godData,omitempty"`
	DemonData       []*GodDemonBattleDuelVideoPlayerData `protobuf:"bytes,4,rep,name=demonData" json:"demonData,omitempty"`
}

func (x *GodDemonBattleGetVideoMsg) Reset() {
	*x = GodDemonBattleGetVideoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleGetVideoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleGetVideoMsg) ProtoMessage() {}

func (x *GodDemonBattleGetVideoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleGetVideoMsg.ProtoReflect.Descriptor instead.
func (*GodDemonBattleGetVideoMsg) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{43}
}

func (x *GodDemonBattleGetVideoMsg) GetAllBattleRecord() *BattleRecordMsg {
	if x != nil {
		return x.AllBattleRecord
	}
	return nil
}

func (x *GodDemonBattleGetVideoMsg) GetBarrageData() []int32 {
	if x != nil {
		return x.BarrageData
	}
	return nil
}

func (x *GodDemonBattleGetVideoMsg) GetGodData() []*GodDemonBattleDuelVideoPlayerData {
	if x != nil {
		return x.GodData
	}
	return nil
}

func (x *GodDemonBattleGetVideoMsg) GetDemonData() []*GodDemonBattleDuelVideoPlayerData {
	if x != nil {
		return x.DemonData
	}
	return nil
}

type GodDemonBattleSendBarrageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	BarrageId  *int32 `protobuf:"varint,2,opt,name=barrageId" json:"barrageId,omitempty"`
	BattleId   *int64 `protobuf:"varint,3,opt,name=battleId" json:"battleId,omitempty"`
}

func (x *GodDemonBattleSendBarrageReq) Reset() {
	*x = GodDemonBattleSendBarrageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleSendBarrageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleSendBarrageReq) ProtoMessage() {}

func (x *GodDemonBattleSendBarrageReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleSendBarrageReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattleSendBarrageReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{44}
}

func (x *GodDemonBattleSendBarrageReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleSendBarrageReq) GetBarrageId() int32 {
	if x != nil && x.BarrageId != nil {
		return *x.BarrageId
	}
	return 0
}

func (x *GodDemonBattleSendBarrageReq) GetBattleId() int64 {
	if x != nil && x.BattleId != nil {
		return *x.BattleId
	}
	return 0
}

type GodDemonBattleSendBarrageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	LastSendTime *int64 `protobuf:"varint,2,opt,name=lastSendTime" json:"lastSendTime,omitempty"`
}

func (x *GodDemonBattleSendBarrageResp) Reset() {
	*x = GodDemonBattleSendBarrageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleSendBarrageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleSendBarrageResp) ProtoMessage() {}

func (x *GodDemonBattleSendBarrageResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleSendBarrageResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleSendBarrageResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{45}
}

func (x *GodDemonBattleSendBarrageResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleSendBarrageResp) GetLastSendTime() int64 {
	if x != nil && x.LastSendTime != nil {
		return *x.LastSendTime
	}
	return 0
}

type GodDemonBattleGetRedResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Data *string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (x *GodDemonBattleGetRedResp) Reset() {
	*x = GodDemonBattleGetRedResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleGetRedResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleGetRedResp) ProtoMessage() {}

func (x *GodDemonBattleGetRedResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleGetRedResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleGetRedResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{46}
}

func (x *GodDemonBattleGetRedResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleGetRedResp) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

type GodDemonBattlePreviousEditionsInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	ZoneId     *int32 `protobuf:"varint,2,req,name=zoneId" json:"zoneId,omitempty"`
	SessionNum *int32 `protobuf:"varint,3,opt,name=sessionNum" json:"sessionNum,omitempty"`
}

func (x *GodDemonBattlePreviousEditionsInfoReq) Reset() {
	*x = GodDemonBattlePreviousEditionsInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattlePreviousEditionsInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattlePreviousEditionsInfoReq) ProtoMessage() {}

func (x *GodDemonBattlePreviousEditionsInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattlePreviousEditionsInfoReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattlePreviousEditionsInfoReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{47}
}

func (x *GodDemonBattlePreviousEditionsInfoReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattlePreviousEditionsInfoReq) GetZoneId() int32 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *GodDemonBattlePreviousEditionsInfoReq) GetSessionNum() int32 {
	if x != nil && x.SessionNum != nil {
		return *x.SessionNum
	}
	return 0
}

type GodDemonBattlePreviousEditionsInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                 *int32                              `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	WinCampData         []*GodDemonBattlePreviousPlayerData `protobuf:"bytes,2,rep,name=winCampData" json:"winCampData,omitempty"`
	GodBestPlayerData   *GodDemonBattlePreviousPlayerData   `protobuf:"bytes,3,opt,name=godBestPlayerData" json:"godBestPlayerData,omitempty"`
	DemonBestPlayerData *GodDemonBattlePreviousPlayerData   `protobuf:"bytes,4,opt,name=demonBestPlayerData" json:"demonBestPlayerData,omitempty"`
	WinCamp             *int32                              `protobuf:"varint,5,opt,name=winCamp" json:"winCamp,omitempty"`
	AllSessionNum       *int32                              `protobuf:"varint,6,opt,name=allSessionNum" json:"allSessionNum,omitempty"`
	CanWorship          *bool                               `protobuf:"varint,7,opt,name=canWorship" json:"canWorship,omitempty"`
	AllZoneId           []int32                             `protobuf:"varint,8,rep,name=allZoneId" json:"allZoneId,omitempty"`
	ZoneId              *int32                              `protobuf:"varint,9,opt,name=zoneId" json:"zoneId,omitempty"`
}

func (x *GodDemonBattlePreviousEditionsInfoResp) Reset() {
	*x = GodDemonBattlePreviousEditionsInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattlePreviousEditionsInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattlePreviousEditionsInfoResp) ProtoMessage() {}

func (x *GodDemonBattlePreviousEditionsInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattlePreviousEditionsInfoResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattlePreviousEditionsInfoResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{48}
}

func (x *GodDemonBattlePreviousEditionsInfoResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattlePreviousEditionsInfoResp) GetWinCampData() []*GodDemonBattlePreviousPlayerData {
	if x != nil {
		return x.WinCampData
	}
	return nil
}

func (x *GodDemonBattlePreviousEditionsInfoResp) GetGodBestPlayerData() *GodDemonBattlePreviousPlayerData {
	if x != nil {
		return x.GodBestPlayerData
	}
	return nil
}

func (x *GodDemonBattlePreviousEditionsInfoResp) GetDemonBestPlayerData() *GodDemonBattlePreviousPlayerData {
	if x != nil {
		return x.DemonBestPlayerData
	}
	return nil
}

func (x *GodDemonBattlePreviousEditionsInfoResp) GetWinCamp() int32 {
	if x != nil && x.WinCamp != nil {
		return *x.WinCamp
	}
	return 0
}

func (x *GodDemonBattlePreviousEditionsInfoResp) GetAllSessionNum() int32 {
	if x != nil && x.AllSessionNum != nil {
		return *x.AllSessionNum
	}
	return 0
}

func (x *GodDemonBattlePreviousEditionsInfoResp) GetCanWorship() bool {
	if x != nil && x.CanWorship != nil {
		return *x.CanWorship
	}
	return false
}

func (x *GodDemonBattlePreviousEditionsInfoResp) GetAllZoneId() []int32 {
	if x != nil {
		return x.AllZoneId
	}
	return nil
}

func (x *GodDemonBattlePreviousEditionsInfoResp) GetZoneId() int32 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

type GodDemonBattlePreviousPlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId         *int64  `protobuf:"varint,1,opt,name=playerId" json:"playerId,omitempty"`
	ServerId         *int64  `protobuf:"varint,2,opt,name=serverId" json:"serverId,omitempty"`
	NickName         *string `protobuf:"bytes,3,opt,name=nickName" json:"nickName,omitempty"`
	Pet              []int32 `protobuf:"varint,4,rep,name=pet" json:"pet,omitempty"`
	Spirit           []int32 `protobuf:"varint,5,rep,name=spirit" json:"spirit,omitempty"`
	AppearanceId     *int32  `protobuf:"varint,6,opt,name=appearanceId" json:"appearanceId,omitempty"`
	EquipCloudId     *int32  `protobuf:"varint,7,opt,name=equipCloudId" json:"equipCloudId,omitempty"`
	RealmsId         *int32  `protobuf:"varint,8,opt,name=realmsId" json:"realmsId,omitempty"`
	HeadIcon         *int32  `protobuf:"varint,11,opt,name=headIcon" json:"headIcon,omitempty"`
	WinCount         *int32  `protobuf:"varint,12,opt,name=winCount" json:"winCount,omitempty"`
	PetSoulShapeList []int32 `protobuf:"varint,13,rep,name=petSoulShapeList" json:"petSoulShapeList,omitempty"`
	FightValue       *int64  `protobuf:"varint,14,opt,name=fightValue" json:"fightValue,omitempty"`
	TitleId          *int32  `protobuf:"varint,15,opt,name=titleId" json:"titleId,omitempty"`
	PetLinkageId     []int32 `protobuf:"varint,16,rep,name=petLinkageId" json:"petLinkageId,omitempty"`
	SpiritLinkageId  []int32 `protobuf:"varint,17,rep,name=spiritLinkageId" json:"spiritLinkageId,omitempty"`
}

func (x *GodDemonBattlePreviousPlayerData) Reset() {
	*x = GodDemonBattlePreviousPlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattlePreviousPlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattlePreviousPlayerData) ProtoMessage() {}

func (x *GodDemonBattlePreviousPlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattlePreviousPlayerData.ProtoReflect.Descriptor instead.
func (*GodDemonBattlePreviousPlayerData) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{49}
}

func (x *GodDemonBattlePreviousPlayerData) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *GodDemonBattlePreviousPlayerData) GetServerId() int64 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

func (x *GodDemonBattlePreviousPlayerData) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *GodDemonBattlePreviousPlayerData) GetPet() []int32 {
	if x != nil {
		return x.Pet
	}
	return nil
}

func (x *GodDemonBattlePreviousPlayerData) GetSpirit() []int32 {
	if x != nil {
		return x.Spirit
	}
	return nil
}

func (x *GodDemonBattlePreviousPlayerData) GetAppearanceId() int32 {
	if x != nil && x.AppearanceId != nil {
		return *x.AppearanceId
	}
	return 0
}

func (x *GodDemonBattlePreviousPlayerData) GetEquipCloudId() int32 {
	if x != nil && x.EquipCloudId != nil {
		return *x.EquipCloudId
	}
	return 0
}

func (x *GodDemonBattlePreviousPlayerData) GetRealmsId() int32 {
	if x != nil && x.RealmsId != nil {
		return *x.RealmsId
	}
	return 0
}

func (x *GodDemonBattlePreviousPlayerData) GetHeadIcon() int32 {
	if x != nil && x.HeadIcon != nil {
		return *x.HeadIcon
	}
	return 0
}

func (x *GodDemonBattlePreviousPlayerData) GetWinCount() int32 {
	if x != nil && x.WinCount != nil {
		return *x.WinCount
	}
	return 0
}

func (x *GodDemonBattlePreviousPlayerData) GetPetSoulShapeList() []int32 {
	if x != nil {
		return x.PetSoulShapeList
	}
	return nil
}

func (x *GodDemonBattlePreviousPlayerData) GetFightValue() int64 {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return 0
}

func (x *GodDemonBattlePreviousPlayerData) GetTitleId() int32 {
	if x != nil && x.TitleId != nil {
		return *x.TitleId
	}
	return 0
}

func (x *GodDemonBattlePreviousPlayerData) GetPetLinkageId() []int32 {
	if x != nil {
		return x.PetLinkageId
	}
	return nil
}

func (x *GodDemonBattlePreviousPlayerData) GetSpiritLinkageId() []int32 {
	if x != nil {
		return x.SpiritLinkageId
	}
	return nil
}

type GodDemonBattleGetPlayerSettlementReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	TimeId     *int32 `protobuf:"varint,2,opt,name=timeId" json:"timeId,omitempty"`
}

func (x *GodDemonBattleGetPlayerSettlementReq) Reset() {
	*x = GodDemonBattleGetPlayerSettlementReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleGetPlayerSettlementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleGetPlayerSettlementReq) ProtoMessage() {}

func (x *GodDemonBattleGetPlayerSettlementReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleGetPlayerSettlementReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattleGetPlayerSettlementReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{50}
}

func (x *GodDemonBattleGetPlayerSettlementReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleGetPlayerSettlementReq) GetTimeId() int32 {
	if x != nil && x.TimeId != nil {
		return *x.TimeId
	}
	return 0
}

type GodDemonBattleGetPlayerSettlementResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32                `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	TimeId     *int32                `protobuf:"varint,2,opt,name=timeId" json:"timeId,omitempty"`
	State      *int32                `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
	PlayerData *PlayerSettlementData `protobuf:"bytes,4,opt,name=playerData" json:"playerData,omitempty"`
}

func (x *GodDemonBattleGetPlayerSettlementResp) Reset() {
	*x = GodDemonBattleGetPlayerSettlementResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleGetPlayerSettlementResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleGetPlayerSettlementResp) ProtoMessage() {}

func (x *GodDemonBattleGetPlayerSettlementResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleGetPlayerSettlementResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleGetPlayerSettlementResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{51}
}

func (x *GodDemonBattleGetPlayerSettlementResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleGetPlayerSettlementResp) GetTimeId() int32 {
	if x != nil && x.TimeId != nil {
		return *x.TimeId
	}
	return 0
}

func (x *GodDemonBattleGetPlayerSettlementResp) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *GodDemonBattleGetPlayerSettlementResp) GetPlayerData() *PlayerSettlementData {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

type PlayerSettlementData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerAppearance *PlayerCharacterImageMsg `protobuf:"bytes,1,opt,name=playerAppearance" json:"playerAppearance,omitempty"`
	Rank             *int32                   `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	WinNum           *int32                   `protobuf:"varint,3,opt,name=winNum" json:"winNum,omitempty"`
}

func (x *PlayerSettlementData) Reset() {
	*x = PlayerSettlementData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSettlementData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSettlementData) ProtoMessage() {}

func (x *PlayerSettlementData) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSettlementData.ProtoReflect.Descriptor instead.
func (*PlayerSettlementData) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{52}
}

func (x *PlayerSettlementData) GetPlayerAppearance() *PlayerCharacterImageMsg {
	if x != nil {
		return x.PlayerAppearance
	}
	return nil
}

func (x *PlayerSettlementData) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *PlayerSettlementData) GetWinNum() int32 {
	if x != nil && x.WinNum != nil {
		return *x.WinNum
	}
	return 0
}

type GodDemonBattleGetCampSettlementReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	ZoneId     *int32 `protobuf:"varint,2,req,name=zoneId" json:"zoneId,omitempty"`
	SessionNum *int32 `protobuf:"varint,3,opt,name=sessionNum" json:"sessionNum,omitempty"`
}

func (x *GodDemonBattleGetCampSettlementReq) Reset() {
	*x = GodDemonBattleGetCampSettlementReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleGetCampSettlementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleGetCampSettlementReq) ProtoMessage() {}

func (x *GodDemonBattleGetCampSettlementReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleGetCampSettlementReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattleGetCampSettlementReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{53}
}

func (x *GodDemonBattleGetCampSettlementReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleGetCampSettlementReq) GetZoneId() int32 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *GodDemonBattleGetCampSettlementReq) GetSessionNum() int32 {
	if x != nil && x.SessionNum != nil {
		return *x.SessionNum
	}
	return 0
}

type GodDemonBattleGetCampSettlementResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32                  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	PlayerData []*PlayerSettlementData `protobuf:"bytes,2,rep,name=playerData" json:"playerData,omitempty"`
	WinCamp    *int32                  `protobuf:"varint,3,opt,name=winCamp" json:"winCamp,omitempty"`
}

func (x *GodDemonBattleGetCampSettlementResp) Reset() {
	*x = GodDemonBattleGetCampSettlementResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleGetCampSettlementResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleGetCampSettlementResp) ProtoMessage() {}

func (x *GodDemonBattleGetCampSettlementResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleGetCampSettlementResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleGetCampSettlementResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{54}
}

func (x *GodDemonBattleGetCampSettlementResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleGetCampSettlementResp) GetPlayerData() []*PlayerSettlementData {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

func (x *GodDemonBattleGetCampSettlementResp) GetWinCamp() int32 {
	if x != nil && x.WinCamp != nil {
		return *x.WinCamp
	}
	return 0
}

type GodDemonBattleHeartBeatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *GodDemonBattleHeartBeatResp) Reset() {
	*x = GodDemonBattleHeartBeatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleHeartBeatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleHeartBeatResp) ProtoMessage() {}

func (x *GodDemonBattleHeartBeatResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleHeartBeatResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleHeartBeatResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{55}
}

func (x *GodDemonBattleHeartBeatResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type GodDemonBattleWorshipResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Reward *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
}

func (x *GodDemonBattleWorshipResp) Reset() {
	*x = GodDemonBattleWorshipResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleWorshipResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleWorshipResp) ProtoMessage() {}

func (x *GodDemonBattleWorshipResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleWorshipResp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleWorshipResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{56}
}

func (x *GodDemonBattleWorshipResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleWorshipResp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type GodDemonBattlePlayerPrepareSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId   *int64 `protobuf:"varint,1,opt,name=roomId" json:"roomId,omitempty"`
	PlayerId *int64 `protobuf:"varint,2,opt,name=playerId" json:"playerId,omitempty"`
}

func (x *GodDemonBattlePlayerPrepareSync) Reset() {
	*x = GodDemonBattlePlayerPrepareSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattlePlayerPrepareSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattlePlayerPrepareSync) ProtoMessage() {}

func (x *GodDemonBattlePlayerPrepareSync) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattlePlayerPrepareSync.ProtoReflect.Descriptor instead.
func (*GodDemonBattlePlayerPrepareSync) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{57}
}

func (x *GodDemonBattlePlayerPrepareSync) GetRoomId() int64 {
	if x != nil && x.RoomId != nil {
		return *x.RoomId
	}
	return 0
}

func (x *GodDemonBattlePlayerPrepareSync) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type GodDemonReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Type       *int32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
}

func (x *GodDemonReportReq) Reset() {
	*x = GodDemonReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonReportReq) ProtoMessage() {}

func (x *GodDemonReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonReportReq.ProtoReflect.Descriptor instead.
func (*GodDemonReportReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{58}
}

func (x *GodDemonReportReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonReportReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type GodDemonReportRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     *int32                `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	LogData []*GodDemonReportData `protobuf:"bytes,2,rep,name=logData" json:"logData,omitempty"`
	Type    *int32                `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
}

func (x *GodDemonReportRsp) Reset() {
	*x = GodDemonReportRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonReportRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonReportRsp) ProtoMessage() {}

func (x *GodDemonReportRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonReportRsp.ProtoReflect.Descriptor instead.
func (*GodDemonReportRsp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{59}
}

func (x *GodDemonReportRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonReportRsp) GetLogData() []*GodDemonReportData {
	if x != nil {
		return x.LogData
	}
	return nil
}

func (x *GodDemonReportRsp) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type GodDemonReportData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerData  *GodDemonPlayerInfoMsg `protobuf:"bytes,1,req,name=playerData" json:"playerData,omitempty"`
	EnemyData   *GodDemonPlayerInfoMsg `protobuf:"bytes,2,req,name=enemyData" json:"enemyData,omitempty"`
	IsWin       *bool                  `protobuf:"varint,3,req,name=isWin" json:"isWin,omitempty"`
	BattleId    *int64                 `protobuf:"varint,4,req,name=battleId" json:"battleId,omitempty"`
	TimeId      *int32                 `protobuf:"varint,5,opt,name=timeId" json:"timeId,omitempty"`
	BattleIndex *int32                 `protobuf:"varint,6,opt,name=battleIndex" json:"battleIndex,omitempty"`
}

func (x *GodDemonReportData) Reset() {
	*x = GodDemonReportData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonReportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonReportData) ProtoMessage() {}

func (x *GodDemonReportData) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonReportData.ProtoReflect.Descriptor instead.
func (*GodDemonReportData) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{60}
}

func (x *GodDemonReportData) GetPlayerData() *GodDemonPlayerInfoMsg {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

func (x *GodDemonReportData) GetEnemyData() *GodDemonPlayerInfoMsg {
	if x != nil {
		return x.EnemyData
	}
	return nil
}

func (x *GodDemonReportData) GetIsWin() bool {
	if x != nil && x.IsWin != nil {
		return *x.IsWin
	}
	return false
}

func (x *GodDemonReportData) GetBattleId() int64 {
	if x != nil && x.BattleId != nil {
		return *x.BattleId
	}
	return 0
}

func (x *GodDemonReportData) GetTimeId() int32 {
	if x != nil && x.TimeId != nil {
		return *x.TimeId
	}
	return 0
}

func (x *GodDemonReportData) GetBattleIndex() int32 {
	if x != nil && x.BattleIndex != nil {
		return *x.BattleIndex
	}
	return 0
}

type GodDemonPlayerInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeadInfo   *PlayerHeadAndNameMsg `protobuf:"bytes,1,req,name=headInfo" json:"headInfo,omitempty"`
	FightValue *int64                `protobuf:"varint,2,req,name=fightValue" json:"fightValue,omitempty"`
	Life       *int32                `protobuf:"varint,3,req,name=life" json:"life,omitempty"`
}

func (x *GodDemonPlayerInfoMsg) Reset() {
	*x = GodDemonPlayerInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonPlayerInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonPlayerInfoMsg) ProtoMessage() {}

func (x *GodDemonPlayerInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonPlayerInfoMsg.ProtoReflect.Descriptor instead.
func (*GodDemonPlayerInfoMsg) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{61}
}

func (x *GodDemonPlayerInfoMsg) GetHeadInfo() *PlayerHeadAndNameMsg {
	if x != nil {
		return x.HeadInfo
	}
	return nil
}

func (x *GodDemonPlayerInfoMsg) GetFightValue() int64 {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return 0
}

func (x *GodDemonPlayerInfoMsg) GetLife() int32 {
	if x != nil && x.Life != nil {
		return *x.Life
	}
	return 0
}

type GodDemonBattleReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	RecordId   *int32 `protobuf:"varint,2,req,name=recordId" json:"recordId,omitempty"`
}

func (x *GodDemonBattleReplyReq) Reset() {
	*x = GodDemonBattleReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleReplyReq) ProtoMessage() {}

func (x *GodDemonBattleReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleReplyReq.ProtoReflect.Descriptor instead.
func (*GodDemonBattleReplyReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{62}
}

func (x *GodDemonBattleReplyReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBattleReplyReq) GetRecordId() int32 {
	if x != nil && x.RecordId != nil {
		return *x.RecordId
	}
	return 0
}

type GodDemonBattleReplyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret             *int32           `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	AllBattleRecord *BattleRecordMsg `protobuf:"bytes,2,opt,name=allBattleRecord" json:"allBattleRecord,omitempty"`
}

func (x *GodDemonBattleReplyRsp) Reset() {
	*x = GodDemonBattleReplyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBattleReplyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBattleReplyRsp) ProtoMessage() {}

func (x *GodDemonBattleReplyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBattleReplyRsp.ProtoReflect.Descriptor instead.
func (*GodDemonBattleReplyRsp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{63}
}

func (x *GodDemonBattleReplyRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBattleReplyRsp) GetAllBattleRecord() *BattleRecordMsg {
	if x != nil {
		return x.AllBattleRecord
	}
	return nil
}

type GodDemonPlayerGuessInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerInfo   *GodDemonPlayerGuessItem `protobuf:"bytes,1,opt,name=playerInfo" json:"playerInfo,omitempty"`
	GuessCoin    *int32                   `protobuf:"varint,2,opt,name=guessCoin" json:"guessCoin,omitempty"`
	Odds         *int32                   `protobuf:"varint,3,opt,name=odds" json:"odds,omitempty"`
	BattleResult *int32                   `protobuf:"varint,4,opt,name=battleResult" json:"battleResult,omitempty"`
	GroupId      *int32                   `protobuf:"varint,5,opt,name=groupId" json:"groupId,omitempty"`
	RoundId      *int32                   `protobuf:"varint,6,opt,name=roundId" json:"roundId,omitempty"`
}

func (x *GodDemonPlayerGuessInfoMsg) Reset() {
	*x = GodDemonPlayerGuessInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonPlayerGuessInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonPlayerGuessInfoMsg) ProtoMessage() {}

func (x *GodDemonPlayerGuessInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonPlayerGuessInfoMsg.ProtoReflect.Descriptor instead.
func (*GodDemonPlayerGuessInfoMsg) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{64}
}

func (x *GodDemonPlayerGuessInfoMsg) GetPlayerInfo() *GodDemonPlayerGuessItem {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *GodDemonPlayerGuessInfoMsg) GetGuessCoin() int32 {
	if x != nil && x.GuessCoin != nil {
		return *x.GuessCoin
	}
	return 0
}

func (x *GodDemonPlayerGuessInfoMsg) GetOdds() int32 {
	if x != nil && x.Odds != nil {
		return *x.Odds
	}
	return 0
}

func (x *GodDemonPlayerGuessInfoMsg) GetBattleResult() int32 {
	if x != nil && x.BattleResult != nil {
		return *x.BattleResult
	}
	return 0
}

func (x *GodDemonPlayerGuessInfoMsg) GetGroupId() int32 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *GodDemonPlayerGuessInfoMsg) GetRoundId() int32 {
	if x != nil && x.RoundId != nil {
		return *x.RoundId
	}
	return 0
}

type GodDemonPlayerGuessItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerInfo *PlayerHeadAndNameMsg `protobuf:"bytes,1,opt,name=playerInfo" json:"playerInfo,omitempty"`
	HeatValue  *int64                `protobuf:"varint,2,opt,name=heatValue" json:"heatValue,omitempty"`
	FightValue *int64                `protobuf:"varint,3,opt,name=fightValue" json:"fightValue,omitempty"`
}

func (x *GodDemonPlayerGuessItem) Reset() {
	*x = GodDemonPlayerGuessItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonPlayerGuessItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonPlayerGuessItem) ProtoMessage() {}

func (x *GodDemonPlayerGuessItem) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonPlayerGuessItem.ProtoReflect.Descriptor instead.
func (*GodDemonPlayerGuessItem) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{65}
}

func (x *GodDemonPlayerGuessItem) GetPlayerInfo() *PlayerHeadAndNameMsg {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *GodDemonPlayerGuessItem) GetHeatValue() int64 {
	if x != nil && x.HeatValue != nil {
		return *x.HeatValue
	}
	return 0
}

func (x *GodDemonPlayerGuessItem) GetFightValue() int64 {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return 0
}

type GodDemonGetGuessInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId    *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	RoundId       *int32 `protobuf:"varint,2,opt,name=roundId" json:"roundId,omitempty"`
	CompetitionId *int32 `protobuf:"varint,3,opt,name=competitionId" json:"competitionId,omitempty"`
	GroupId       *int32 `protobuf:"varint,4,opt,name=groupId" json:"groupId,omitempty"`
}

func (x *GodDemonGetGuessInfoReq) Reset() {
	*x = GodDemonGetGuessInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonGetGuessInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonGetGuessInfoReq) ProtoMessage() {}

func (x *GodDemonGetGuessInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonGetGuessInfoReq.ProtoReflect.Descriptor instead.
func (*GodDemonGetGuessInfoReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{66}
}

func (x *GodDemonGetGuessInfoReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonGetGuessInfoReq) GetRoundId() int32 {
	if x != nil && x.RoundId != nil {
		return *x.RoundId
	}
	return 0
}

func (x *GodDemonGetGuessInfoReq) GetCompetitionId() int32 {
	if x != nil && x.CompetitionId != nil {
		return *x.CompetitionId
	}
	return 0
}

func (x *GodDemonGetGuessInfoReq) GetGroupId() int32 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

type GodDemonGetGuessInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                *int32                        `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	GuessCoin          *int32                        `protobuf:"varint,2,opt,name=guessCoin" json:"guessCoin,omitempty"`
	PlayerGuessInfoArr []*GodDemonPlayerGuessInfoMsg `protobuf:"bytes,3,rep,name=playerGuessInfoArr" json:"playerGuessInfoArr,omitempty"`
	CurGroup           *int32                        `protobuf:"varint,4,opt,name=curGroup" json:"curGroup,omitempty"`
	MaxGroup           *int32                        `protobuf:"varint,5,opt,name=maxGroup" json:"maxGroup,omitempty"`
	HasGetGuessCoin    *bool                         `protobuf:"varint,6,opt,name=HasGetGuessCoin" json:"HasGetGuessCoin,omitempty"`
}

func (x *GodDemonGetGuessInfoRsp) Reset() {
	*x = GodDemonGetGuessInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonGetGuessInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonGetGuessInfoRsp) ProtoMessage() {}

func (x *GodDemonGetGuessInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonGetGuessInfoRsp.ProtoReflect.Descriptor instead.
func (*GodDemonGetGuessInfoRsp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{67}
}

func (x *GodDemonGetGuessInfoRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonGetGuessInfoRsp) GetGuessCoin() int32 {
	if x != nil && x.GuessCoin != nil {
		return *x.GuessCoin
	}
	return 0
}

func (x *GodDemonGetGuessInfoRsp) GetPlayerGuessInfoArr() []*GodDemonPlayerGuessInfoMsg {
	if x != nil {
		return x.PlayerGuessInfoArr
	}
	return nil
}

func (x *GodDemonGetGuessInfoRsp) GetCurGroup() int32 {
	if x != nil && x.CurGroup != nil {
		return *x.CurGroup
	}
	return 0
}

func (x *GodDemonGetGuessInfoRsp) GetMaxGroup() int32 {
	if x != nil && x.MaxGroup != nil {
		return *x.MaxGroup
	}
	return 0
}

func (x *GodDemonGetGuessInfoRsp) GetHasGetGuessCoin() bool {
	if x != nil && x.HasGetGuessCoin != nil {
		return *x.HasGetGuessCoin
	}
	return false
}

type GodDemonGetGuessCoinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	TimeId     *int32 `protobuf:"varint,2,req,name=timeId" json:"timeId,omitempty"`
}

func (x *GodDemonGetGuessCoinReq) Reset() {
	*x = GodDemonGetGuessCoinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonGetGuessCoinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonGetGuessCoinReq) ProtoMessage() {}

func (x *GodDemonGetGuessCoinReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonGetGuessCoinReq.ProtoReflect.Descriptor instead.
func (*GodDemonGetGuessCoinReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{68}
}

func (x *GodDemonGetGuessCoinReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonGetGuessCoinReq) GetTimeId() int32 {
	if x != nil && x.TimeId != nil {
		return *x.TimeId
	}
	return 0
}

type GodDemonGetGuessCoinRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	GuessCoin *int32 `protobuf:"varint,2,opt,name=guessCoin" json:"guessCoin,omitempty"`
}

func (x *GodDemonGetGuessCoinRsp) Reset() {
	*x = GodDemonGetGuessCoinRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonGetGuessCoinRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonGetGuessCoinRsp) ProtoMessage() {}

func (x *GodDemonGetGuessCoinRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonGetGuessCoinRsp.ProtoReflect.Descriptor instead.
func (*GodDemonGetGuessCoinRsp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{69}
}

func (x *GodDemonGetGuessCoinRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonGetGuessCoinRsp) GetGuessCoin() int32 {
	if x != nil && x.GuessCoin != nil {
		return *x.GuessCoin
	}
	return 0
}

type GodDemonBeginGuessReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId    *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PlayerId      *int64 `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
	GuessCoinCost *int32 `protobuf:"varint,3,req,name=guessCoinCost" json:"guessCoinCost,omitempty"`
	RoundId       *int32 `protobuf:"varint,4,req,name=roundId" json:"roundId,omitempty"`
}

func (x *GodDemonBeginGuessReq) Reset() {
	*x = GodDemonBeginGuessReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBeginGuessReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBeginGuessReq) ProtoMessage() {}

func (x *GodDemonBeginGuessReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBeginGuessReq.ProtoReflect.Descriptor instead.
func (*GodDemonBeginGuessReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{70}
}

func (x *GodDemonBeginGuessReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonBeginGuessReq) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *GodDemonBeginGuessReq) GetGuessCoinCost() int32 {
	if x != nil && x.GuessCoinCost != nil {
		return *x.GuessCoinCost
	}
	return 0
}

func (x *GodDemonBeginGuessReq) GetRoundId() int32 {
	if x != nil && x.RoundId != nil {
		return *x.RoundId
	}
	return 0
}

type GodDemonBeginGuessRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                *int32                      `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	GuessCoin          *int32                      `protobuf:"varint,2,opt,name=guessCoin" json:"guessCoin,omitempty"`
	PlayerGuessInfoArr *GodDemonPlayerGuessInfoMsg `protobuf:"bytes,3,opt,name=playerGuessInfoArr" json:"playerGuessInfoArr,omitempty"`
}

func (x *GodDemonBeginGuessRsp) Reset() {
	*x = GodDemonBeginGuessRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonBeginGuessRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonBeginGuessRsp) ProtoMessage() {}

func (x *GodDemonBeginGuessRsp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonBeginGuessRsp.ProtoReflect.Descriptor instead.
func (*GodDemonBeginGuessRsp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{71}
}

func (x *GodDemonBeginGuessRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonBeginGuessRsp) GetGuessCoin() int32 {
	if x != nil && x.GuessCoin != nil {
		return *x.GuessCoin
	}
	return 0
}

func (x *GodDemonBeginGuessRsp) GetPlayerGuessInfoArr() *GodDemonPlayerGuessInfoMsg {
	if x != nil {
		return x.PlayerGuessInfoArr
	}
	return nil
}

type GodDemonRoomBattleSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId         *int64                       `protobuf:"varint,1,opt,name=roomId" json:"roomId,omitempty"`
	Bye            *bool                        `protobuf:"varint,2,opt,name=bye" json:"bye,omitempty"`
	BattleRecord   *BattleRecordMsg             `protobuf:"bytes,3,opt,name=battleRecord" json:"battleRecord,omitempty"`
	PlayerSyncList []*GodDemonRoomPlayerSyncMsg `protobuf:"bytes,4,rep,name=playerSyncList" json:"playerSyncList,omitempty"`
	WinPlayerId    *int64                       `protobuf:"varint,5,opt,name=winPlayerId" json:"winPlayerId,omitempty"`
}

func (x *GodDemonRoomBattleSync) Reset() {
	*x = GodDemonRoomBattleSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonRoomBattleSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonRoomBattleSync) ProtoMessage() {}

func (x *GodDemonRoomBattleSync) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonRoomBattleSync.ProtoReflect.Descriptor instead.
func (*GodDemonRoomBattleSync) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{72}
}

func (x *GodDemonRoomBattleSync) GetRoomId() int64 {
	if x != nil && x.RoomId != nil {
		return *x.RoomId
	}
	return 0
}

func (x *GodDemonRoomBattleSync) GetBye() bool {
	if x != nil && x.Bye != nil {
		return *x.Bye
	}
	return false
}

func (x *GodDemonRoomBattleSync) GetBattleRecord() *BattleRecordMsg {
	if x != nil {
		return x.BattleRecord
	}
	return nil
}

func (x *GodDemonRoomBattleSync) GetPlayerSyncList() []*GodDemonRoomPlayerSyncMsg {
	if x != nil {
		return x.PlayerSyncList
	}
	return nil
}

func (x *GodDemonRoomBattleSync) GetWinPlayerId() int64 {
	if x != nil && x.WinPlayerId != nil {
		return *x.WinPlayerId
	}
	return 0
}

type GodDemonRoomUpdateSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId         *int64                       `protobuf:"varint,1,opt,name=roomId" json:"roomId,omitempty"`
	RoundBeginTime *int64                       `protobuf:"varint,2,opt,name=roundBeginTime" json:"roundBeginTime,omitempty"`
	Round          *int32                       `protobuf:"varint,3,opt,name=round" json:"round,omitempty"`
	TimeId         *int64                       `protobuf:"varint,4,opt,name=timeId" json:"timeId,omitempty"`
	ChooseBuffVec  []int32                      `protobuf:"varint,5,rep,name=chooseBuffVec" json:"chooseBuffVec,omitempty"`
	PlayerSyncList []*GodDemonRoomPlayerSyncMsg `protobuf:"bytes,6,rep,name=playerSyncList" json:"playerSyncList,omitempty"`
	End            *bool                        `protobuf:"varint,7,opt,name=end" json:"end,omitempty"`
}

func (x *GodDemonRoomUpdateSync) Reset() {
	*x = GodDemonRoomUpdateSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonRoomUpdateSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonRoomUpdateSync) ProtoMessage() {}

func (x *GodDemonRoomUpdateSync) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonRoomUpdateSync.ProtoReflect.Descriptor instead.
func (*GodDemonRoomUpdateSync) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{73}
}

func (x *GodDemonRoomUpdateSync) GetRoomId() int64 {
	if x != nil && x.RoomId != nil {
		return *x.RoomId
	}
	return 0
}

func (x *GodDemonRoomUpdateSync) GetRoundBeginTime() int64 {
	if x != nil && x.RoundBeginTime != nil {
		return *x.RoundBeginTime
	}
	return 0
}

func (x *GodDemonRoomUpdateSync) GetRound() int32 {
	if x != nil && x.Round != nil {
		return *x.Round
	}
	return 0
}

func (x *GodDemonRoomUpdateSync) GetTimeId() int64 {
	if x != nil && x.TimeId != nil {
		return *x.TimeId
	}
	return 0
}

func (x *GodDemonRoomUpdateSync) GetChooseBuffVec() []int32 {
	if x != nil {
		return x.ChooseBuffVec
	}
	return nil
}

func (x *GodDemonRoomUpdateSync) GetPlayerSyncList() []*GodDemonRoomPlayerSyncMsg {
	if x != nil {
		return x.PlayerSyncList
	}
	return nil
}

func (x *GodDemonRoomUpdateSync) GetEnd() bool {
	if x != nil && x.End != nil {
		return *x.End
	}
	return false
}

type GodDemonRoomPlayerSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *int64  `protobuf:"varint,1,opt,name=playerId" json:"playerId,omitempty"`
	Life     *int32  `protobuf:"varint,2,opt,name=life" json:"life,omitempty"`
	WinCount *int32  `protobuf:"varint,3,opt,name=winCount" json:"winCount,omitempty"`
	BuffVec  []int32 `protobuf:"varint,4,rep,name=buffVec" json:"buffVec,omitempty"`
	Rank     *int32  `protobuf:"varint,5,opt,name=rank" json:"rank,omitempty"`
}

func (x *GodDemonRoomPlayerSyncMsg) Reset() {
	*x = GodDemonRoomPlayerSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonRoomPlayerSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonRoomPlayerSyncMsg) ProtoMessage() {}

func (x *GodDemonRoomPlayerSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonRoomPlayerSyncMsg.ProtoReflect.Descriptor instead.
func (*GodDemonRoomPlayerSyncMsg) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{74}
}

func (x *GodDemonRoomPlayerSyncMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *GodDemonRoomPlayerSyncMsg) GetLife() int32 {
	if x != nil && x.Life != nil {
		return *x.Life
	}
	return 0
}

func (x *GodDemonRoomPlayerSyncMsg) GetWinCount() int32 {
	if x != nil && x.WinCount != nil {
		return *x.WinCount
	}
	return 0
}

func (x *GodDemonRoomPlayerSyncMsg) GetBuffVec() []int32 {
	if x != nil {
		return x.BuffVec
	}
	return nil
}

func (x *GodDemonRoomPlayerSyncMsg) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

type GodDemonPlayerRoomStatusSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId   *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	InRoomBattle *bool  `protobuf:"varint,2,opt,name=inRoomBattle" json:"inRoomBattle,omitempty"`
}

func (x *GodDemonPlayerRoomStatusSync) Reset() {
	*x = GodDemonPlayerRoomStatusSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonPlayerRoomStatusSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonPlayerRoomStatusSync) ProtoMessage() {}

func (x *GodDemonPlayerRoomStatusSync) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonPlayerRoomStatusSync.ProtoReflect.Descriptor instead.
func (*GodDemonPlayerRoomStatusSync) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{75}
}

func (x *GodDemonPlayerRoomStatusSync) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonPlayerRoomStatusSync) GetInRoomBattle() bool {
	if x != nil && x.InRoomBattle != nil {
		return *x.InRoomBattle
	}
	return false
}

type GodDemonRoomBattleFinishSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32                              `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	RoomId     *int64                              `protobuf:"varint,2,opt,name=roomId" json:"roomId,omitempty"`
	TimeId     *int32                              `protobuf:"varint,3,opt,name=timeId" json:"timeId,omitempty"`
	Msg        []*GodDemonRoomBattleFinishRoundMsg `protobuf:"bytes,4,rep,name=msg" json:"msg,omitempty"`
}

func (x *GodDemonRoomBattleFinishSync) Reset() {
	*x = GodDemonRoomBattleFinishSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonRoomBattleFinishSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonRoomBattleFinishSync) ProtoMessage() {}

func (x *GodDemonRoomBattleFinishSync) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonRoomBattleFinishSync.ProtoReflect.Descriptor instead.
func (*GodDemonRoomBattleFinishSync) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{76}
}

func (x *GodDemonRoomBattleFinishSync) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonRoomBattleFinishSync) GetRoomId() int64 {
	if x != nil && x.RoomId != nil {
		return *x.RoomId
	}
	return 0
}

func (x *GodDemonRoomBattleFinishSync) GetTimeId() int32 {
	if x != nil && x.TimeId != nil {
		return *x.TimeId
	}
	return 0
}

func (x *GodDemonRoomBattleFinishSync) GetMsg() []*GodDemonRoomBattleFinishRoundMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type GodDemonRoomBattleFinishRoundMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Round          *int32                       `protobuf:"varint,1,opt,name=round" json:"round,omitempty"`
	PlayerSyncList []*GodDemonRoomPlayerSyncMsg `protobuf:"bytes,2,rep,name=playerSyncList" json:"playerSyncList,omitempty"`
	WinPlayerId    *int64                       `protobuf:"varint,3,opt,name=winPlayerId" json:"winPlayerId,omitempty"`
}

func (x *GodDemonRoomBattleFinishRoundMsg) Reset() {
	*x = GodDemonRoomBattleFinishRoundMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonRoomBattleFinishRoundMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonRoomBattleFinishRoundMsg) ProtoMessage() {}

func (x *GodDemonRoomBattleFinishRoundMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonRoomBattleFinishRoundMsg.ProtoReflect.Descriptor instead.
func (*GodDemonRoomBattleFinishRoundMsg) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{77}
}

func (x *GodDemonRoomBattleFinishRoundMsg) GetRound() int32 {
	if x != nil && x.Round != nil {
		return *x.Round
	}
	return 0
}

func (x *GodDemonRoomBattleFinishRoundMsg) GetPlayerSyncList() []*GodDemonRoomPlayerSyncMsg {
	if x != nil {
		return x.PlayerSyncList
	}
	return nil
}

func (x *GodDemonRoomBattleFinishRoundMsg) GetWinPlayerId() int64 {
	if x != nil && x.WinPlayerId != nil {
		return *x.WinPlayerId
	}
	return 0
}

type GodDemonSuppressedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *GodDemonSuppressedReq) Reset() {
	*x = GodDemonSuppressedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonSuppressedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonSuppressedReq) ProtoMessage() {}

func (x *GodDemonSuppressedReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonSuppressedReq.ProtoReflect.Descriptor instead.
func (*GodDemonSuppressedReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{78}
}

func (x *GodDemonSuppressedReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type GodDemonSuppressedRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32                           `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	SuppressAttr *GodDemonBattleSuppressAttribute `protobuf:"bytes,2,opt,name=suppressAttr" json:"suppressAttr,omitempty"`
}

func (x *GodDemonSuppressedRespMsg) Reset() {
	*x = GodDemonSuppressedRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonSuppressedRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonSuppressedRespMsg) ProtoMessage() {}

func (x *GodDemonSuppressedRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonSuppressedRespMsg.ProtoReflect.Descriptor instead.
func (*GodDemonSuppressedRespMsg) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{79}
}

func (x *GodDemonSuppressedRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonSuppressedRespMsg) GetSuppressAttr() *GodDemonBattleSuppressAttribute {
	if x != nil {
		return x.SuppressAttr
	}
	return nil
}

type GodDemonSendGuessRewardMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  *int32                        `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	Reward      *string                       `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
	GuessResult []*GodDemonPlayerGuessInfoMsg `protobuf:"bytes,3,rep,name=guessResult" json:"guessResult,omitempty"`
}

func (x *GodDemonSendGuessRewardMsg) Reset() {
	*x = GodDemonSendGuessRewardMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonSendGuessRewardMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonSendGuessRewardMsg) ProtoMessage() {}

func (x *GodDemonSendGuessRewardMsg) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonSendGuessRewardMsg.ProtoReflect.Descriptor instead.
func (*GodDemonSendGuessRewardMsg) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{80}
}

func (x *GodDemonSendGuessRewardMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonSendGuessRewardMsg) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *GodDemonSendGuessRewardMsg) GetGuessResult() []*GodDemonPlayerGuessInfoMsg {
	if x != nil {
		return x.GuessResult
	}
	return nil
}

type GodDemonQualifierGameRewardSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32  `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	TimeId     *int32  `protobuf:"varint,2,opt,name=timeId" json:"timeId,omitempty"`
	Rank       *int32  `protobuf:"varint,3,opt,name=rank" json:"rank,omitempty"`
	Reward     *string `protobuf:"bytes,4,opt,name=reward" json:"reward,omitempty"`
	RoomId     *int64  `protobuf:"varint,5,opt,name=roomId" json:"roomId,omitempty"`
}

func (x *GodDemonQualifierGameRewardSync) Reset() {
	*x = GodDemonQualifierGameRewardSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonQualifierGameRewardSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonQualifierGameRewardSync) ProtoMessage() {}

func (x *GodDemonQualifierGameRewardSync) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonQualifierGameRewardSync.ProtoReflect.Descriptor instead.
func (*GodDemonQualifierGameRewardSync) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{81}
}

func (x *GodDemonQualifierGameRewardSync) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonQualifierGameRewardSync) GetTimeId() int32 {
	if x != nil && x.TimeId != nil {
		return *x.TimeId
	}
	return 0
}

func (x *GodDemonQualifierGameRewardSync) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *GodDemonQualifierGameRewardSync) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *GodDemonQualifierGameRewardSync) GetRoomId() int64 {
	if x != nil && x.RoomId != nil {
		return *x.RoomId
	}
	return 0
}

type GodDemonLookBattleVideoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	BattleId   *int64 `protobuf:"varint,2,opt,name=battleId" json:"battleId,omitempty"`
}

func (x *GodDemonLookBattleVideoReq) Reset() {
	*x = GodDemonLookBattleVideoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonLookBattleVideoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonLookBattleVideoReq) ProtoMessage() {}

func (x *GodDemonLookBattleVideoReq) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonLookBattleVideoReq.ProtoReflect.Descriptor instead.
func (*GodDemonLookBattleVideoReq) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{82}
}

func (x *GodDemonLookBattleVideoReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *GodDemonLookBattleVideoReq) GetBattleId() int64 {
	if x != nil && x.BattleId != nil {
		return *x.BattleId
	}
	return 0
}

type GodDemonLookBattleVideoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32           `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	BattleRecord *BattleRecordMsg `protobuf:"bytes,2,opt,name=battleRecord" json:"battleRecord,omitempty"`
}

func (x *GodDemonLookBattleVideoResp) Reset() {
	*x = GodDemonLookBattleVideoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GodDemonBattle_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodDemonLookBattleVideoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodDemonLookBattleVideoResp) ProtoMessage() {}

func (x *GodDemonLookBattleVideoResp) ProtoReflect() protoreflect.Message {
	mi := &file_GodDemonBattle_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodDemonLookBattleVideoResp.ProtoReflect.Descriptor instead.
func (*GodDemonLookBattleVideoResp) Descriptor() ([]byte, []int) {
	return file_GodDemonBattle_proto_rawDescGZIP(), []int{83}
}

func (x *GodDemonLookBattleVideoResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GodDemonLookBattleVideoResp) GetBattleRecord() *BattleRecordMsg {
	if x != nil {
		return x.BattleRecord
	}
	return nil
}

var File_GodDemonBattle_proto protoreflect.FileDescriptor

var file_GodDemonBattle_proto_rawDesc = []byte{
	0x0a, 0x14, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x1a, 0x0c, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xda, 0x02, 0x0a, 0x14, 0x47, 0x6f,
	0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x4c, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44,
	0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x75, 0x66, 0x66, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x4f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x43, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65,
	0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x43, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x4c, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65,
	0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x55, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65,
	0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x73, 0x67, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x83, 0x01, 0x0a, 0x1d, 0x47, 0x6f, 0x64, 0x44, 0x65,
	0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x90, 0x01, 0x0a,
	0x18, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x42,
	0x75, 0x66, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0xb1, 0x02, 0x0a, 0x19, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x08, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4e, 0x75,
	0x6d, 0x18, 0x09, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0xea, 0x01, 0x0a, 0x18, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x44,
	0x61, 0x79, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x44,
	0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x75, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x07, 0x64, 0x75, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x08, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x22, 0x33, 0x0a, 0x11, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x10, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f,
	0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x08, 0x72, 0x61, 0x6e,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52,
	0x61, 0x6e, 0x6b, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xb2, 0x01, 0x0a, 0x15, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x0e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x87, 0x05, 0x0a, 0x1a, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d,
	0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x50, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x4c,
	0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x0b,
	0x67, 0x6f, 0x64, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52,
	0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x67, 0x6f, 0x64, 0x52, 0x61, 0x6e, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x0d, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x72, 0x61, 0x6e,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0d, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x72, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e,
	0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x51,
	0x0a, 0x0e, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44,
	0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x73,
	0x67, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x12, 0x32, 0x0a, 0x14, 0x63,
	0x61, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x63, 0x61, 0x6e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22,
	0x6c, 0x0a, 0x16, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x6f, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x6f, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x53, 0x0a,
	0x15, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x4c, 0x76, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x4c, 0x76, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x61, 0x78, 0x4c, 0x76, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x78,
	0x4c, 0x76, 0x22, 0xc4, 0x01, 0x0a, 0x18, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x2a, 0x0a,
	0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0xbd, 0x02, 0x0a, 0x1f, 0x47, 0x6f,
	0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x75, 0x70, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x42, 0x0a,
	0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x6c, 0x6d,
	0x73, 0x12, 0x48, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0c, 0x70,
	0x72, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0e, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x4f, 0x0a, 0x23, 0x47, 0x6f, 0x64,
	0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x5c, 0x0a, 0x22, 0x47, 0x6f,
	0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x6d, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x22, 0x60, 0x0a, 0x22, 0x47, 0x6f, 0x64, 0x44,
	0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x53, 0x65, 0x70,
	0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x23, 0x47,
	0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x4b, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x73, 0x67, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x22, 0x6c, 0x0a, 0x1a, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22,
	0xe0, 0x02, 0x0a, 0x1b, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x61, 0x64, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x68,
	0x61, 0x64, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x65, 0x6d, 0x79, 0x49, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x65,
	0x6d, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x42, 0x75, 0x66, 0x66, 0x56, 0x65, 0x63, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x42, 0x75, 0x66, 0x66, 0x56,
	0x65, 0x63, 0x22, 0x86, 0x02, 0x0a, 0x19, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52,
	0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67,
	0x12, 0x4b, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x73,
	0x67, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x66, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x66,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x56, 0x65, 0x63, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x07, 0x62, 0x75, 0x66, 0x66, 0x56, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x68,
	0x61, 0x64, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x68, 0x61, 0x64, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77,
	0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77,
	0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x67,
	0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x30, 0x0a, 0x1c, 0x47,
	0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x71, 0x0a,
	0x1d, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x56, 0x65, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x07, 0x62, 0x75, 0x66, 0x66, 0x56, 0x65, 0x63, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x61,
	0x64, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x68, 0x61, 0x64, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4e, 0x75, 0x6d,
	0x22, 0x55, 0x0a, 0x1b, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x62, 0x75, 0x66, 0x66, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x1c, 0x47, 0x6f, 0x64, 0x44, 0x65,
	0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x42,
	0x75, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66,
	0x66, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x49,
	0x64, 0x22, 0x5c, 0x0a, 0x1e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x4d, 0x0a, 0x1f, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x56, 0x65, 0x63, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x62, 0x75, 0x66, 0x66, 0x56, 0x65, 0x63, 0x22, 0x5e,
	0x0a, 0x24, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x47, 0x65, 0x74, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x93,
	0x01, 0x0a, 0x25, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x72, 0x61,
	0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x79,
	0x52, 0x61, 0x6e, 0x6b, 0x22, 0xad, 0x01, 0x0a, 0x10, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f,
	0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x57, 0x0a, 0x10, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x73, 0x67,
	0x52, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x69,
	0x6e, 0x4e, 0x75, 0x6d, 0x22, 0xb2, 0x01, 0x0a, 0x20, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f,
	0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x61, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x57, 0x61,
	0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x76,
	0x61, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x57, 0x61, 0x72, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x76, 0x61, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x57, 0x61, 0x72,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x22, 0xc5, 0x01, 0x0a, 0x21, 0x47, 0x6f,
	0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x61, 0x72, 0x69,
	0x6f, 0x75, 0x73, 0x57, 0x61, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64,
	0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x81, 0x01, 0x0a, 0x1a, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x08, 0x72, 0x6f,
	0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x08, 0x72, 0x6f, 0x6f,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x19, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f,
	0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x6f,
	0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73,
	0x4d, 0x79, 0x53, 0x75, 0x62, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x73, 0x4d, 0x79, 0x53, 0x75, 0x62, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0xc6,
	0x01, 0x0a, 0x25, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x56, 0x61, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x73, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x66, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x66, 0x65,
	0x12, 0x41, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x65,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0xa5, 0x01, 0x0a, 0x27, 0x47, 0x6f, 0x64, 0x44,
	0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x61, 0x72, 0x69, 0x6f, 0x75,
	0x73, 0x57, 0x61, 0x72, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x61, 0x72, 0x69, 0x6f, 0x75, 0x73,
	0x57, 0x61, 0x72, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x76, 0x61, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x57, 0x61, 0x72, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x91, 0x01, 0x0a, 0x28, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x56, 0x61, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x57, 0x61, 0x72, 0x73, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x53,
	0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x4d, 0x73, 0x67, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x1f, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x75, 0x65, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x6f, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x6f, 0x6f, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x20, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x75, 0x65, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x07, 0x67, 0x6f, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x67, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x49, 0x0a, 0x09, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x73, 0x67,
	0x52, 0x09, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x1f, 0x47,
	0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x58, 0x0a, 0x20, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c,
	0x73, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x1e,
	0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x75,
	0x65, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x78, 0x22, 0xc8, 0x01, 0x0a,
	0x1f, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44,
	0x75, 0x65, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x4b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47,
	0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x49, 0x64, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x78, 0x22, 0xbb, 0x01, 0x0a, 0x21, 0x47, 0x6f, 0x64, 0x44,
	0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x75, 0x65, 0x6c, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a,
	0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x41,
	0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x22, 0xb2, 0x02, 0x0a, 0x19, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d,
	0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x4d, 0x73, 0x67, 0x12, 0x4d, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x73,
	0x67, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x07, 0x67, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65,
	0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x75, 0x65, 0x6c, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x67, 0x6f,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x53, 0x0a, 0x09, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f,
	0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x75, 0x65, 0x6c,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x09, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x78, 0x0a, 0x1c, 0x47, 0x6f,
	0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x42, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61,
	0x72, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62,
	0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x1d, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x61, 0x72, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x18, 0x47,
	0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7f, 0x0a,
	0x25, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x22, 0xf4,
	0x03, 0x0a, 0x26, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x56, 0x0a, 0x0b, 0x77,
	0x69, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x77, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x62, 0x0a, 0x11, 0x67, 0x6f, 0x64, 0x42, 0x65, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x67, 0x6f, 0x64, 0x42, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x66, 0x0a, 0x13, 0x64, 0x65, 0x6d, 0x6f, 0x6e,
	0x42, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d,
	0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x13, 0x64, 0x65, 0x6d, 0x6f,
	0x6e, 0x42, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x77, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x6c,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x57, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x57, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x7a,
	0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0xf0, 0x03, 0x0a, 0x20, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d,
	0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x70, 0x65, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x65,
	0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x6c, 0x53,
	0x68, 0x61, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x05, 0x52, 0x10,
	0x70, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x6c, 0x53, 0x68, 0x61, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x10, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0c, 0x70, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x18, 0x11, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x24, 0x47, 0x6f, 0x64, 0x44,
	0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x25, 0x47, 0x6f, 0x64,
	0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x01, 0x0a,
	0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x57, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x10, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x22, 0x7c, 0x0a, 0x22, 0x47, 0x6f,
	0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x6d, 0x70, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x22, 0x9b, 0x01, 0x0a, 0x23, 0x47, 0x6f, 0x64,
	0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x6d, 0x70, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x48, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x77, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77,
	0x69, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x22, 0x2f, 0x0a, 0x1b, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d,
	0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x45, 0x0a, 0x19, 0x47, 0x6f, 0x64, 0x44, 0x65,
	0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x55,
	0x0a, 0x1f, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x53, 0x79, 0x6e,
	0x63, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x11, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7b,
	0x0a, 0x11, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44,
	0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x6c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x94, 0x02, 0x0a, 0x12,
	0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x49, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44,
	0x65, 0x6d, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73,
	0x67, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a,
	0x09, 0x65, 0x6e, 0x65, 0x6d, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x65, 0x6e, 0x65,
	0x6d, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x57, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x57, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x44, 0x0a, 0x08,
	0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x41, 0x6e,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x66, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x04, 0x6c, 0x69, 0x66, 0x65, 0x22, 0x54, 0x0a, 0x16, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d,
	0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x16,
	0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x4d, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0xf3, 0x01, 0x0a, 0x1a, 0x47, 0x6f, 0x64, 0x44,
	0x65, 0x6d, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x4b, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75,
	0x65, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x75, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x75, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x69,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x6f, 0x64, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x22, 0xa1, 0x01,
	0x0a, 0x17, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x47, 0x75, 0x65, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x48, 0x0a, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x68, 0x65, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x93, 0x01, 0x0a, 0x17, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x47, 0x65,
	0x74, 0x47, 0x75, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x8b, 0x02, 0x0a, 0x17, 0x47, 0x6f, 0x64, 0x44,
	0x65, 0x6d, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x75, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x75, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x69, 0x6e, 0x12, 0x5e, 0x0a, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x72, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52,
	0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x41, 0x72, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x48,
	0x61, 0x73, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x48, 0x61, 0x73, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x69, 0x6e, 0x22, 0x51, 0x0a, 0x17, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f,
	0x6e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x17, 0x47, 0x6f, 0x64, 0x44,
	0x65, 0x6d, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x69, 0x6e,
	0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x75, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x75, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x69, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x47, 0x75, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x75, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0d, 0x67, 0x75, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x15, 0x47, 0x6f,
	0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x47, 0x75, 0x65, 0x73, 0x73,
	0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x75, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x75, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x69, 0x6e, 0x12, 0x5e, 0x0a, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52,
	0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x41, 0x72, 0x72, 0x22, 0x84, 0x02, 0x0a, 0x16, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e,
	0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x79, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x62, 0x79, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x4d, 0x73, 0x67, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x55, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47,
	0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x79, 0x6e, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x69, 0x6e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x77,
	0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x95, 0x02, 0x0a, 0x16, 0x47,
	0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x42, 0x75, 0x66,
	0x66, 0x56, 0x65, 0x63, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x68, 0x6f, 0x6f,
	0x73, 0x65, 0x42, 0x75, 0x66, 0x66, 0x56, 0x65, 0x63, 0x12, 0x55, 0x0a, 0x0e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52,
	0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67,
	0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x19, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52,
	0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x66, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x66, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x75, 0x66, 0x66, 0x56, 0x65, 0x63, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x62,
	0x75, 0x66, 0x66, 0x56, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x62, 0x0a, 0x1c, 0x47, 0x6f,
	0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e,
	0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x22, 0xb6,
	0x01, 0x0a, 0x1c, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x79, 0x6e, 0x63, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x46, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4d,
	0x73, 0x67, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xb1, 0x01, 0x0a, 0x20, 0x47, 0x6f, 0x64, 0x44,
	0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x55, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x69, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x77, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x15, 0x47,
	0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x19, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f,
	0x6e, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x4d,
	0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x57, 0x0a, 0x0c, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x41, 0x74, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x0c, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x41, 0x74, 0x74, 0x72, 0x22, 0xa6, 0x01,
	0x0a, 0x1a, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x75,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x50, 0x0a, 0x0b, 0x67, 0x75, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47,
	0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x75, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x0b, 0x67, 0x75, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x1f, 0x47, 0x6f, 0x64, 0x44, 0x65,
	0x6d, 0x6f, 0x6e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69,
	0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x1a, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d,
	0x6f, 0x6e, 0x4c, 0x6f, 0x6f, 0x6b, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0x78, 0x0a, 0x1b, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x4c, 0x6f, 0x6f, 0x6b,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x47, 0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x0c, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2a, 0x96, 0x0c, 0x0a, 0x17, 0x47,
	0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x1a, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65,
	0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x10, 0xe5, 0x8b, 0x0d, 0x12, 0x2a, 0x0a, 0x24, 0x67, 0x6f, 0x64, 0x5f,
	0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x61, 0x6d, 0x70, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x10, 0xe6, 0x8b, 0x0d, 0x12, 0x29, 0x0a, 0x23, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f,
	0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x6d,
	0x70, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x10, 0xe7, 0x8b, 0x0d, 0x12,
	0x2a, 0x0a, 0x24, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x10, 0xe9, 0x8b, 0x0d, 0x12, 0x2a, 0x0a, 0x24, 0x67,
	0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f,
	0x73, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x10, 0xea, 0x8b, 0x0d, 0x12, 0x26, 0x0a, 0x20, 0x67, 0x6f, 0x64, 0x5f, 0x64,
	0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x10, 0xeb, 0x8b, 0x0d, 0x12,
	0x22, 0x0a, 0x1c, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x10,
	0xec, 0x8b, 0x0d, 0x12, 0x24, 0x0a, 0x1e, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e,
	0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x75, 0x66, 0x66,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x10, 0xee, 0x8b, 0x0d, 0x12, 0x22, 0x0a, 0x1c, 0x67, 0x6f, 0x64,
	0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x63, 0x68,
	0x6f, 0x6f, 0x73, 0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x10, 0xef, 0x8b, 0x0d, 0x12, 0x26, 0x0a,
	0x20, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x66,
	0x66, 0x10, 0xf0, 0x8b, 0x0d, 0x12, 0x2e, 0x0a, 0x28, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d,
	0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x6f,
	0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x10, 0xf1, 0x8b, 0x0d, 0x12, 0x28, 0x0a, 0x22, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d,
	0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x6f, 0x75,
	0x73, 0x5f, 0x77, 0x61, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x10, 0xf2, 0x8b, 0x0d, 0x12,
	0x30, 0x0a, 0x2a, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x77, 0x61, 0x72, 0x73,
	0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x10, 0xf3, 0x8b,
	0x0d, 0x12, 0x27, 0x0a, 0x21, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x64, 0x75, 0x65, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x10, 0xf4, 0x8b, 0x0d, 0x12, 0x27, 0x0a, 0x21, 0x67, 0x6f,
	0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x73,
	0x65, 0x74, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x10,
	0xf5, 0x8b, 0x0d, 0x12, 0x26, 0x0a, 0x20, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e,
	0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x64, 0x75, 0x65, 0x6c, 0x5f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x10, 0xf6, 0x8b, 0x0d, 0x12, 0x23, 0x0a, 0x1d, 0x67,
	0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x10, 0xf8, 0x8b, 0x0d,
	0x12, 0x1f, 0x0a, 0x19, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x62, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x10, 0xf9, 0x8b,
	0x0d, 0x12, 0x27, 0x0a, 0x21, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x62, 0x65,
	0x74, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0xfa, 0x8b, 0x0d, 0x12, 0x1e, 0x0a, 0x18, 0x67, 0x6f,
	0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x73,
	0x65, 0x74, 0x5f, 0x62, 0x65, 0x74, 0x10, 0xfb, 0x8b, 0x0d, 0x12, 0x1f, 0x0a, 0x19, 0x67, 0x6f,
	0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x6c,
	0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x10, 0xfc, 0x8b, 0x0d, 0x12, 0x1a, 0x0a, 0x14, 0x67,
	0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f,
	0x72, 0x65, 0x64, 0x10, 0xfd, 0x8b, 0x0d, 0x12, 0x2d, 0x0a, 0x27, 0x67, 0x6f, 0x64, 0x5f, 0x64,
	0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x10, 0xfe, 0x8b, 0x0d, 0x12, 0x2c, 0x0a, 0x26, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65,
	0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x10, 0xff, 0x8b, 0x0d, 0x12, 0x2a, 0x0a, 0x24, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f,
	0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x6d,
	0x70, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x80, 0x8c, 0x0d,
	0x12, 0x20, 0x0a, 0x1a, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x10, 0x81,
	0x8c, 0x0d, 0x12, 0x1e, 0x0a, 0x18, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x10, 0x83,
	0x8c, 0x0d, 0x12, 0x1d, 0x0a, 0x17, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x10, 0x84, 0x8c,
	0x0d, 0x12, 0x28, 0x0a, 0x22, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x67, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x10, 0x86, 0x8c, 0x0d, 0x12, 0x21, 0x0a, 0x1b, 0x67,
	0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x5f, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x8a, 0x8c, 0x0d, 0x12, 0x21,
	0x0a, 0x1b, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x67, 0x75, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0x8c, 0x8c,
	0x0d, 0x12, 0x2a, 0x0a, 0x24, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x10, 0x8d, 0x8c, 0x0d, 0x12, 0x2f, 0x0a,
	0x29, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x10, 0x96, 0x8c, 0x0d, 0x12, 0x27,
	0x0a, 0x21, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x10, 0x97, 0x8c, 0x0d, 0x12, 0x26, 0x0a, 0x20, 0x67, 0x6f, 0x64, 0x5f, 0x64,
	0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x10, 0x98, 0x8c, 0x0d, 0x12,
	0x27, 0x0a, 0x21, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x10, 0x99, 0x8c, 0x0d, 0x12, 0x2b, 0x0a, 0x25, 0x67, 0x6f, 0x64, 0x5f,
	0x64, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x10, 0x9a, 0x8c, 0x0d, 0x12, 0x1c, 0x0a, 0x16, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d,
	0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x10,
	0xaa, 0x8c, 0x0d, 0x12, 0x1e, 0x0a, 0x18, 0x67, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x6e,
	0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x10,
	0xab, 0x8c, 0x0d, 0x2a, 0x8a, 0x01, 0x0a, 0x1a, 0x47, 0x6f, 0x64, 0x44, 0x65, 0x6d, 0x6f, 0x6e,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e,
	0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x72, 0x65, 0x64, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x47, 0x75, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x16, 0x0a,
	0x12, 0x72, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0x03, 0x12, 0x11, 0x0a,
	0x0d, 0x72, 0x65, 0x64, 0x43, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x72, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x10, 0x05,
	0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69,
	0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_GodDemonBattle_proto_rawDescOnce sync.Once
	file_GodDemonBattle_proto_rawDescData = file_GodDemonBattle_proto_rawDesc
)

func file_GodDemonBattle_proto_rawDescGZIP() []byte {
	file_GodDemonBattle_proto_rawDescOnce.Do(func() {
		file_GodDemonBattle_proto_rawDescData = protoimpl.X.CompressGZIP(file_GodDemonBattle_proto_rawDescData)
	})
	return file_GodDemonBattle_proto_rawDescData
}

var file_GodDemonBattle_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_GodDemonBattle_proto_msgTypes = make([]protoimpl.MessageInfo, 84)
var file_GodDemonBattle_proto_goTypes = []any{
	(GodDemonBattleProtocols)(0),                     // 0: com.yq.msg.CityMsg.GodDemonBattleProtocols
	(GodDemonBattleRedPointEnum)(0),                  // 1: com.yq.msg.CityMsg.GodDemonBattleRedPointEnum
	(*GodDemonBattleConfig)(nil),                     // 2: com.yq.msg.CityMsg.GodDemonBattleConfig
	(*GodDemonBattleSettleConfigMsg)(nil),            // 3: com.yq.msg.CityMsg.GodDemonBattleSettleConfigMsg
	(*GodDemonBattleBuffConfig)(nil),                 // 4: com.yq.msg.CityMsg.GodDemonBattleBuffConfig
	(*GodDemonBattleMatchConfig)(nil),                // 5: com.yq.msg.CityMsg.GodDemonBattleMatchConfig
	(*GodDemonBattleTimeConfig)(nil),                 // 6: com.yq.msg.CityMsg.GodDemonBattleTimeConfig
	(*GodDemonCommonReq)(nil),                        // 7: com.yq.msg.CityMsg.GodDemonCommonReq
	(*GodDemonRankList)(nil),                         // 8: com.yq.msg.CityMsg.GodDemonRankList
	(*GodDemonBattleRankMsg)(nil),                    // 9: com.yq.msg.CityMsg.GodDemonBattleRankMsg
	(*GodDemonBattleBaseInfoResp)(nil),               // 10: com.yq.msg.CityMsg.GodDemonBattleBaseInfoResp
	(*GodDemonPlayerCountMsg)(nil),                   // 11: com.yq.msg.CityMsg.GodDemonPlayerCountMsg
	(*GodDemonRealsMatchMsg)(nil),                    // 12: com.yq.msg.CityMsg.GodDemonRealsMatchMsg
	(*GodDemonBattlePlayerInfo)(nil),                 // 13: com.yq.msg.CityMsg.GodDemonBattlePlayerInfo
	(*GodDemonBattleSuppressAttribute)(nil),          // 14: com.yq.msg.CityMsg.GodDemonBattleSuppressAttribute
	(*GodDemonBattleReceiveCampRewardResp)(nil),      // 15: com.yq.msg.CityMsg.GodDemonBattleReceiveCampRewardResp
	(*GodDemonBattleGetCampPlayerNumResp)(nil),       // 16: com.yq.msg.CityMsg.GodDemonBattleGetCampPlayerNumResp
	(*GodDemonBattleGetSeparationInfoReq)(nil),       // 17: com.yq.msg.CityMsg.GodDemonBattleGetSeparationInfoReq
	(*GodDemonBattleGetSeparationInfoResp)(nil),      // 18: com.yq.msg.CityMsg.GodDemonBattleGetSeparationInfoResp
	(*GodDemonBattleEnterRoomReq)(nil),               // 19: com.yq.msg.CityMsg.GodDemonBattleEnterRoomReq
	(*GodDemonBattleEnterRoomResp)(nil),              // 20: com.yq.msg.CityMsg.GodDemonBattleEnterRoomResp
	(*GodDemonRoomPlayerInfoMsg)(nil),                // 21: com.yq.msg.CityMsg.GodDemonRoomPlayerInfoMsg
	(*GodDemonBattleSetPrepareResp)(nil),             // 22: com.yq.msg.CityMsg.GodDemonBattleSetPrepareResp
	(*GodDemonBattleGetBuffInfoResp)(nil),            // 23: com.yq.msg.CityMsg.GodDemonBattleGetBuffInfoResp
	(*GodDemonBattleChooseBuffReq)(nil),              // 24: com.yq.msg.CityMsg.GodDemonBattleChooseBuffReq
	(*GodDemonBattleChooseBuffResp)(nil),             // 25: com.yq.msg.CityMsg.GodDemonBattleChooseBuffResp
	(*GodDemonBattleGetPlayerBuffReq)(nil),           // 26: com.yq.msg.CityMsg.GodDemonBattleGetPlayerBuffReq
	(*GodDemonBattleGetPlayerBuffResp)(nil),          // 27: com.yq.msg.CityMsg.GodDemonBattleGetPlayerBuffResp
	(*GodDemonBattleGetGodDemonRankInfoReq)(nil),     // 28: com.yq.msg.CityMsg.GodDemonBattleGetGodDemonRankInfoReq
	(*GodDemonBattleGetGodDemonRankInfoResp)(nil),    // 29: com.yq.msg.CityMsg.GodDemonBattleGetGodDemonRankInfoResp
	(*GodDemonRankData)(nil),                         // 30: com.yq.msg.CityMsg.GodDemonRankData
	(*GodDemonBattleVariousWarsInfoReq)(nil),         // 31: com.yq.msg.CityMsg.GodDemonBattleVariousWarsInfoReq
	(*GodDemonBattleVariousWarsInfoResp)(nil),        // 32: com.yq.msg.CityMsg.GodDemonBattleVariousWarsInfoResp
	(*GodDemonBattleSessionRooms)(nil),               // 33: com.yq.msg.CityMsg.GodDemonBattleSessionRooms
	(*GodDemonBattleSessionRoom)(nil),                // 34: com.yq.msg.CityMsg.GodDemonBattleSessionRoom
	(*GodDemonBattleVariousFinalsPlayerData)(nil),    // 35: com.yq.msg.CityMsg.GodDemonBattleVariousFinalsPlayerData
	(*GodDemonBattleVariousWarsPromoteInfoReq)(nil),  // 36: com.yq.msg.CityMsg.GodDemonBattleVariousWarsPromoteInfoReq
	(*GodDemonBattleVariousWarsPromoteInfoResp)(nil), // 37: com.yq.msg.CityMsg.GodDemonBattleVariousWarsPromoteInfoResp
	(*GodDemonBattleDuelPlayerInfoReq)(nil),          // 38: com.yq.msg.CityMsg.GodDemonBattleDuelPlayerInfoReq
	(*GodDemonBattleDuelPlayerInfoResp)(nil),         // 39: com.yq.msg.CityMsg.GodDemonBattleDuelPlayerInfoResp
	(*GodDemonBattleSetBattleOrderReq)(nil),          // 40: com.yq.msg.CityMsg.GodDemonBattleSetBattleOrderReq
	(*GodDemonBattleSetBattleOrderResp)(nil),         // 41: com.yq.msg.CityMsg.GodDemonBattleSetBattleOrderResp
	(*GodDemonBattleDuelVideoInfoReq)(nil),           // 42: com.yq.msg.CityMsg.GodDemonBattleDuelVideoInfoReq
	(*GodDemonBattleDuelVideoInfoResp)(nil),          // 43: com.yq.msg.CityMsg.GodDemonBattleDuelVideoInfoResp
	(*GodDemonBattleDuelVideoPlayerData)(nil),        // 44: com.yq.msg.CityMsg.GodDemonBattleDuelVideoPlayerData
	(*GodDemonBattleGetVideoMsg)(nil),                // 45: com.yq.msg.CityMsg.GodDemonBattleGetVideoMsg
	(*GodDemonBattleSendBarrageReq)(nil),             // 46: com.yq.msg.CityMsg.GodDemonBattleSendBarrageReq
	(*GodDemonBattleSendBarrageResp)(nil),            // 47: com.yq.msg.CityMsg.GodDemonBattleSendBarrageResp
	(*GodDemonBattleGetRedResp)(nil),                 // 48: com.yq.msg.CityMsg.GodDemonBattleGetRedResp
	(*GodDemonBattlePreviousEditionsInfoReq)(nil),    // 49: com.yq.msg.CityMsg.GodDemonBattlePreviousEditionsInfoReq
	(*GodDemonBattlePreviousEditionsInfoResp)(nil),   // 50: com.yq.msg.CityMsg.GodDemonBattlePreviousEditionsInfoResp
	(*GodDemonBattlePreviousPlayerData)(nil),         // 51: com.yq.msg.CityMsg.GodDemonBattlePreviousPlayerData
	(*GodDemonBattleGetPlayerSettlementReq)(nil),     // 52: com.yq.msg.CityMsg.GodDemonBattleGetPlayerSettlementReq
	(*GodDemonBattleGetPlayerSettlementResp)(nil),    // 53: com.yq.msg.CityMsg.GodDemonBattleGetPlayerSettlementResp
	(*PlayerSettlementData)(nil),                     // 54: com.yq.msg.CityMsg.PlayerSettlementData
	(*GodDemonBattleGetCampSettlementReq)(nil),       // 55: com.yq.msg.CityMsg.GodDemonBattleGetCampSettlementReq
	(*GodDemonBattleGetCampSettlementResp)(nil),      // 56: com.yq.msg.CityMsg.GodDemonBattleGetCampSettlementResp
	(*GodDemonBattleHeartBeatResp)(nil),              // 57: com.yq.msg.CityMsg.GodDemonBattleHeartBeatResp
	(*GodDemonBattleWorshipResp)(nil),                // 58: com.yq.msg.CityMsg.GodDemonBattleWorshipResp
	(*GodDemonBattlePlayerPrepareSync)(nil),          // 59: com.yq.msg.CityMsg.GodDemonBattlePlayerPrepareSync
	(*GodDemonReportReq)(nil),                        // 60: com.yq.msg.CityMsg.GodDemonReportReq
	(*GodDemonReportRsp)(nil),                        // 61: com.yq.msg.CityMsg.GodDemonReportRsp
	(*GodDemonReportData)(nil),                       // 62: com.yq.msg.CityMsg.GodDemonReportData
	(*GodDemonPlayerInfoMsg)(nil),                    // 63: com.yq.msg.CityMsg.GodDemonPlayerInfoMsg
	(*GodDemonBattleReplyReq)(nil),                   // 64: com.yq.msg.CityMsg.GodDemonBattleReplyReq
	(*GodDemonBattleReplyRsp)(nil),                   // 65: com.yq.msg.CityMsg.GodDemonBattleReplyRsp
	(*GodDemonPlayerGuessInfoMsg)(nil),               // 66: com.yq.msg.CityMsg.GodDemonPlayerGuessInfoMsg
	(*GodDemonPlayerGuessItem)(nil),                  // 67: com.yq.msg.CityMsg.GodDemonPlayerGuessItem
	(*GodDemonGetGuessInfoReq)(nil),                  // 68: com.yq.msg.CityMsg.GodDemonGetGuessInfoReq
	(*GodDemonGetGuessInfoRsp)(nil),                  // 69: com.yq.msg.CityMsg.GodDemonGetGuessInfoRsp
	(*GodDemonGetGuessCoinReq)(nil),                  // 70: com.yq.msg.CityMsg.GodDemonGetGuessCoinReq
	(*GodDemonGetGuessCoinRsp)(nil),                  // 71: com.yq.msg.CityMsg.GodDemonGetGuessCoinRsp
	(*GodDemonBeginGuessReq)(nil),                    // 72: com.yq.msg.CityMsg.GodDemonBeginGuessReq
	(*GodDemonBeginGuessRsp)(nil),                    // 73: com.yq.msg.CityMsg.GodDemonBeginGuessRsp
	(*GodDemonRoomBattleSync)(nil),                   // 74: com.yq.msg.CityMsg.GodDemonRoomBattleSync
	(*GodDemonRoomUpdateSync)(nil),                   // 75: com.yq.msg.CityMsg.GodDemonRoomUpdateSync
	(*GodDemonRoomPlayerSyncMsg)(nil),                // 76: com.yq.msg.CityMsg.GodDemonRoomPlayerSyncMsg
	(*GodDemonPlayerRoomStatusSync)(nil),             // 77: com.yq.msg.CityMsg.GodDemonPlayerRoomStatusSync
	(*GodDemonRoomBattleFinishSync)(nil),             // 78: com.yq.msg.CityMsg.GodDemonRoomBattleFinishSync
	(*GodDemonRoomBattleFinishRoundMsg)(nil),         // 79: com.yq.msg.CityMsg.GodDemonRoomBattleFinishRoundMsg
	(*GodDemonSuppressedReq)(nil),                    // 80: com.yq.msg.CityMsg.GodDemonSuppressedReq
	(*GodDemonSuppressedRespMsg)(nil),                // 81: com.yq.msg.CityMsg.GodDemonSuppressedRespMsg
	(*GodDemonSendGuessRewardMsg)(nil),               // 82: com.yq.msg.CityMsg.GodDemonSendGuessRewardMsg
	(*GodDemonQualifierGameRewardSync)(nil),          // 83: com.yq.msg.CityMsg.GodDemonQualifierGameRewardSync
	(*GodDemonLookBattleVideoReq)(nil),               // 84: com.yq.msg.CityMsg.GodDemonLookBattleVideoReq
	(*GodDemonLookBattleVideoResp)(nil),              // 85: com.yq.msg.CityMsg.GodDemonLookBattleVideoResp
	(*PlayerCharacterImageMsg)(nil),                  // 86: com.yq.msg.CityMsg.PlayerCharacterImageMsg
	(*EquipmentDataMsg)(nil),                         // 87: com.yq.msg.CityMsg.EquipmentDataMsg
	(*AttributeDataMsg)(nil),                         // 88: com.yq.msg.CityMsg.AttributeDataMsg
	(*PlayerDetailDataMsg)(nil),                      // 89: com.yq.msg.CityMsg.PlayerDetailDataMsg
	(*PlayerHeadDataMsg)(nil),                        // 90: com.yq.msg.CityMsg.PlayerHeadDataMsg
	(*PlayerHeadAndNameMsg)(nil),                     // 91: com.yq.msg.CityMsg.PlayerHeadAndNameMsg
	(*BattleRecordMsg)(nil),                          // 92: com.yq.msg.CityMsg.BattleRecordMsg
}
var file_GodDemonBattle_proto_depIdxs = []int32{
	4,  // 0: com.yq.msg.CityMsg.GodDemonBattleConfig.buffConfig:type_name -> com.yq.msg.CityMsg.GodDemonBattleBuffConfig
	5,  // 1: com.yq.msg.CityMsg.GodDemonBattleConfig.matChConfig:type_name -> com.yq.msg.CityMsg.GodDemonBattleMatchConfig
	6,  // 2: com.yq.msg.CityMsg.GodDemonBattleConfig.timeConfig:type_name -> com.yq.msg.CityMsg.GodDemonBattleTimeConfig
	3,  // 3: com.yq.msg.CityMsg.GodDemonBattleConfig.settleConfig:type_name -> com.yq.msg.CityMsg.GodDemonBattleSettleConfigMsg
	9,  // 4: com.yq.msg.CityMsg.GodDemonRankList.rankList:type_name -> com.yq.msg.CityMsg.GodDemonBattleRankMsg
	86, // 5: com.yq.msg.CityMsg.GodDemonBattleRankMsg.playerBaseData:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	11, // 6: com.yq.msg.CityMsg.GodDemonBattleBaseInfoResp.campPlayerNum:type_name -> com.yq.msg.CityMsg.GodDemonPlayerCountMsg
	13, // 7: com.yq.msg.CityMsg.GodDemonBattleBaseInfoResp.playerInfo:type_name -> com.yq.msg.CityMsg.GodDemonBattlePlayerInfo
	30, // 8: com.yq.msg.CityMsg.GodDemonBattleBaseInfoResp.godRankData:type_name -> com.yq.msg.CityMsg.GodDemonRankData
	30, // 9: com.yq.msg.CityMsg.GodDemonBattleBaseInfoResp.DemonrankData:type_name -> com.yq.msg.CityMsg.GodDemonRankData
	12, // 10: com.yq.msg.CityMsg.GodDemonBattleBaseInfoResp.realsMatchList:type_name -> com.yq.msg.CityMsg.GodDemonRealsMatchMsg
	87, // 11: com.yq.msg.CityMsg.GodDemonBattleSuppressAttribute.equipList:type_name -> com.yq.msg.CityMsg.EquipmentDataMsg
	88, // 12: com.yq.msg.CityMsg.GodDemonBattleSuppressAttribute.preAttribute:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	88, // 13: com.yq.msg.CityMsg.GodDemonBattleSuppressAttribute.afterAttribute:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	89, // 14: com.yq.msg.CityMsg.GodDemonBattleGetSeparationInfoResp.playerDetail:type_name -> com.yq.msg.CityMsg.PlayerDetailDataMsg
	21, // 15: com.yq.msg.CityMsg.GodDemonBattleEnterRoomResp.playerInfo:type_name -> com.yq.msg.CityMsg.GodDemonRoomPlayerInfoMsg
	86, // 16: com.yq.msg.CityMsg.GodDemonRoomPlayerInfoMsg.playerData:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	30, // 17: com.yq.msg.CityMsg.GodDemonBattleGetGodDemonRankInfoResp.rankData:type_name -> com.yq.msg.CityMsg.GodDemonRankData
	86, // 18: com.yq.msg.CityMsg.GodDemonRankData.playerAppearance:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	33, // 19: com.yq.msg.CityMsg.GodDemonBattleVariousWarsInfoResp.roomInfo:type_name -> com.yq.msg.CityMsg.GodDemonBattleSessionRooms
	34, // 20: com.yq.msg.CityMsg.GodDemonBattleSessionRooms.roomList:type_name -> com.yq.msg.CityMsg.GodDemonBattleSessionRoom
	90, // 21: com.yq.msg.CityMsg.GodDemonBattleVariousFinalsPlayerData.headData:type_name -> com.yq.msg.CityMsg.PlayerHeadDataMsg
	86, // 22: com.yq.msg.CityMsg.GodDemonBattleVariousWarsPromoteInfoResp.playerInfoList:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	86, // 23: com.yq.msg.CityMsg.GodDemonBattleDuelPlayerInfoResp.godData:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	86, // 24: com.yq.msg.CityMsg.GodDemonBattleDuelPlayerInfoResp.demonData:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	45, // 25: com.yq.msg.CityMsg.GodDemonBattleDuelVideoInfoResp.videoData:type_name -> com.yq.msg.CityMsg.GodDemonBattleGetVideoMsg
	91, // 26: com.yq.msg.CityMsg.GodDemonBattleDuelVideoPlayerData.headInfo:type_name -> com.yq.msg.CityMsg.PlayerHeadAndNameMsg
	92, // 27: com.yq.msg.CityMsg.GodDemonBattleGetVideoMsg.allBattleRecord:type_name -> com.yq.msg.CityMsg.BattleRecordMsg
	44, // 28: com.yq.msg.CityMsg.GodDemonBattleGetVideoMsg.godData:type_name -> com.yq.msg.CityMsg.GodDemonBattleDuelVideoPlayerData
	44, // 29: com.yq.msg.CityMsg.GodDemonBattleGetVideoMsg.demonData:type_name -> com.yq.msg.CityMsg.GodDemonBattleDuelVideoPlayerData
	51, // 30: com.yq.msg.CityMsg.GodDemonBattlePreviousEditionsInfoResp.winCampData:type_name -> com.yq.msg.CityMsg.GodDemonBattlePreviousPlayerData
	51, // 31: com.yq.msg.CityMsg.GodDemonBattlePreviousEditionsInfoResp.godBestPlayerData:type_name -> com.yq.msg.CityMsg.GodDemonBattlePreviousPlayerData
	51, // 32: com.yq.msg.CityMsg.GodDemonBattlePreviousEditionsInfoResp.demonBestPlayerData:type_name -> com.yq.msg.CityMsg.GodDemonBattlePreviousPlayerData
	54, // 33: com.yq.msg.CityMsg.GodDemonBattleGetPlayerSettlementResp.playerData:type_name -> com.yq.msg.CityMsg.PlayerSettlementData
	86, // 34: com.yq.msg.CityMsg.PlayerSettlementData.playerAppearance:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	54, // 35: com.yq.msg.CityMsg.GodDemonBattleGetCampSettlementResp.playerData:type_name -> com.yq.msg.CityMsg.PlayerSettlementData
	62, // 36: com.yq.msg.CityMsg.GodDemonReportRsp.logData:type_name -> com.yq.msg.CityMsg.GodDemonReportData
	63, // 37: com.yq.msg.CityMsg.GodDemonReportData.playerData:type_name -> com.yq.msg.CityMsg.GodDemonPlayerInfoMsg
	63, // 38: com.yq.msg.CityMsg.GodDemonReportData.enemyData:type_name -> com.yq.msg.CityMsg.GodDemonPlayerInfoMsg
	91, // 39: com.yq.msg.CityMsg.GodDemonPlayerInfoMsg.headInfo:type_name -> com.yq.msg.CityMsg.PlayerHeadAndNameMsg
	92, // 40: com.yq.msg.CityMsg.GodDemonBattleReplyRsp.allBattleRecord:type_name -> com.yq.msg.CityMsg.BattleRecordMsg
	67, // 41: com.yq.msg.CityMsg.GodDemonPlayerGuessInfoMsg.playerInfo:type_name -> com.yq.msg.CityMsg.GodDemonPlayerGuessItem
	91, // 42: com.yq.msg.CityMsg.GodDemonPlayerGuessItem.playerInfo:type_name -> com.yq.msg.CityMsg.PlayerHeadAndNameMsg
	66, // 43: com.yq.msg.CityMsg.GodDemonGetGuessInfoRsp.playerGuessInfoArr:type_name -> com.yq.msg.CityMsg.GodDemonPlayerGuessInfoMsg
	66, // 44: com.yq.msg.CityMsg.GodDemonBeginGuessRsp.playerGuessInfoArr:type_name -> com.yq.msg.CityMsg.GodDemonPlayerGuessInfoMsg
	92, // 45: com.yq.msg.CityMsg.GodDemonRoomBattleSync.battleRecord:type_name -> com.yq.msg.CityMsg.BattleRecordMsg
	76, // 46: com.yq.msg.CityMsg.GodDemonRoomBattleSync.playerSyncList:type_name -> com.yq.msg.CityMsg.GodDemonRoomPlayerSyncMsg
	76, // 47: com.yq.msg.CityMsg.GodDemonRoomUpdateSync.playerSyncList:type_name -> com.yq.msg.CityMsg.GodDemonRoomPlayerSyncMsg
	79, // 48: com.yq.msg.CityMsg.GodDemonRoomBattleFinishSync.msg:type_name -> com.yq.msg.CityMsg.GodDemonRoomBattleFinishRoundMsg
	76, // 49: com.yq.msg.CityMsg.GodDemonRoomBattleFinishRoundMsg.playerSyncList:type_name -> com.yq.msg.CityMsg.GodDemonRoomPlayerSyncMsg
	14, // 50: com.yq.msg.CityMsg.GodDemonSuppressedRespMsg.suppressAttr:type_name -> com.yq.msg.CityMsg.GodDemonBattleSuppressAttribute
	66, // 51: com.yq.msg.CityMsg.GodDemonSendGuessRewardMsg.guessResult:type_name -> com.yq.msg.CityMsg.GodDemonPlayerGuessInfoMsg
	92, // 52: com.yq.msg.CityMsg.GodDemonLookBattleVideoResp.battleRecord:type_name -> com.yq.msg.CityMsg.BattleRecordMsg
	53, // [53:53] is the sub-list for method output_type
	53, // [53:53] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_GodDemonBattle_proto_init() }
func file_GodDemonBattle_proto_init() {
	if File_GodDemonBattle_proto != nil {
		return
	}
	file_Battle_proto_init()
	file_Common_proto_init()
	file_WatchPlayer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_GodDemonBattle_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleSettleConfigMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleBuffConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleMatchConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleTimeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonCommonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonRankList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleRankMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleBaseInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonPlayerCountMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonRealsMatchMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattlePlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleSuppressAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleReceiveCampRewardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleGetCampPlayerNumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleGetSeparationInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleGetSeparationInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleEnterRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleEnterRoomResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonRoomPlayerInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleSetPrepareResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleGetBuffInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleChooseBuffReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleChooseBuffResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleGetPlayerBuffReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleGetPlayerBuffResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleGetGodDemonRankInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleGetGodDemonRankInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonRankData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleVariousWarsInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleVariousWarsInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleSessionRooms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleSessionRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleVariousFinalsPlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleVariousWarsPromoteInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleVariousWarsPromoteInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleDuelPlayerInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleDuelPlayerInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleSetBattleOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleSetBattleOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleDuelVideoInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleDuelVideoInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleDuelVideoPlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleGetVideoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleSendBarrageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleSendBarrageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleGetRedResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattlePreviousEditionsInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattlePreviousEditionsInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattlePreviousPlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleGetPlayerSettlementReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleGetPlayerSettlementResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerSettlementData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleGetCampSettlementReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleGetCampSettlementResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleHeartBeatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleWorshipResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattlePlayerPrepareSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonReportRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonReportData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonPlayerInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBattleReplyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonPlayerGuessInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonPlayerGuessItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonGetGuessInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonGetGuessInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonGetGuessCoinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonGetGuessCoinRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBeginGuessReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonBeginGuessRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonRoomBattleSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonRoomUpdateSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonRoomPlayerSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonPlayerRoomStatusSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonRoomBattleFinishSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonRoomBattleFinishRoundMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonSuppressedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonSuppressedRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonSendGuessRewardMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonQualifierGameRewardSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonLookBattleVideoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GodDemonBattle_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*GodDemonLookBattleVideoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GodDemonBattle_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   84,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GodDemonBattle_proto_goTypes,
		DependencyIndexes: file_GodDemonBattle_proto_depIdxs,
		EnumInfos:         file_GodDemonBattle_proto_enumTypes,
		MessageInfos:      file_GodDemonBattle_proto_msgTypes,
	}.Build()
	File_GodDemonBattle_proto = out.File
	file_GodDemonBattle_proto_rawDesc = nil
	file_GodDemonBattle_proto_goTypes = nil
	file_GodDemonBattle_proto_depIdxs = nil
}
