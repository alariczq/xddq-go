// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: SecretTower.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SecretTowerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           *int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Floor          *int32  `protobuf:"varint,2,opt,name=floor" json:"floor,omitempty"`
	MonsterPower   *int64  `protobuf:"varint,3,opt,name=monsterPower" json:"monsterPower,omitempty"`
	PassTime       *int64  `protobuf:"varint,4,opt,name=passTime" json:"passTime,omitempty"`
	StageFloorList []int32 `protobuf:"varint,5,rep,name=stageFloorList" json:"stageFloorList,omitempty"`
	AchiFloorList  []int32 `protobuf:"varint,6,rep,name=achiFloorList" json:"achiFloorList,omitempty"`
	AchiMaxFloor   *int32  `protobuf:"varint,7,opt,name=achiMaxFloor" json:"achiMaxFloor,omitempty"`
}

func (x *SecretTowerInfo) Reset() {
	*x = SecretTowerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretTowerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretTowerInfo) ProtoMessage() {}

func (x *SecretTowerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretTowerInfo.ProtoReflect.Descriptor instead.
func (*SecretTowerInfo) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{0}
}

func (x *SecretTowerInfo) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SecretTowerInfo) GetFloor() int32 {
	if x != nil && x.Floor != nil {
		return *x.Floor
	}
	return 0
}

func (x *SecretTowerInfo) GetMonsterPower() int64 {
	if x != nil && x.MonsterPower != nil {
		return *x.MonsterPower
	}
	return 0
}

func (x *SecretTowerInfo) GetPassTime() int64 {
	if x != nil && x.PassTime != nil {
		return *x.PassTime
	}
	return 0
}

func (x *SecretTowerInfo) GetStageFloorList() []int32 {
	if x != nil {
		return x.StageFloorList
	}
	return nil
}

func (x *SecretTowerInfo) GetAchiFloorList() []int32 {
	if x != nil {
		return x.AchiFloorList
	}
	return nil
}

func (x *SecretTowerInfo) GetAchiMaxFloor() int32 {
	if x != nil && x.AchiMaxFloor != nil {
		return *x.AchiMaxFloor
	}
	return 0
}

type SynSecretTowerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoList []*SecretTowerInfo `protobuf:"bytes,1,rep,name=infoList" json:"infoList,omitempty"`
}

func (x *SynSecretTowerInfo) Reset() {
	*x = SynSecretTowerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SynSecretTowerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynSecretTowerInfo) ProtoMessage() {}

func (x *SynSecretTowerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynSecretTowerInfo.ProtoReflect.Descriptor instead.
func (*SynSecretTowerInfo) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{1}
}

func (x *SynSecretTowerInfo) GetInfoList() []*SecretTowerInfo {
	if x != nil {
		return x.InfoList
	}
	return nil
}

type SecretTowerEnterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
}

func (x *SecretTowerEnterReq) Reset() {
	*x = SecretTowerEnterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretTowerEnterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretTowerEnterReq) ProtoMessage() {}

func (x *SecretTowerEnterReq) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretTowerEnterReq.ProtoReflect.Descriptor instead.
func (*SecretTowerEnterReq) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{2}
}

func (x *SecretTowerEnterReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type SecretTowerEnterRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  *int32           `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Info *SecretTowerInfo `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
}

func (x *SecretTowerEnterRsp) Reset() {
	*x = SecretTowerEnterRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretTowerEnterRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretTowerEnterRsp) ProtoMessage() {}

func (x *SecretTowerEnterRsp) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretTowerEnterRsp.ProtoReflect.Descriptor instead.
func (*SecretTowerEnterRsp) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{3}
}

func (x *SecretTowerEnterRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SecretTowerEnterRsp) GetInfo() *SecretTowerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type SecretTowerFightReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
}

func (x *SecretTowerFightReq) Reset() {
	*x = SecretTowerFightReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretTowerFightReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretTowerFightReq) ProtoMessage() {}

func (x *SecretTowerFightReq) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretTowerFightReq.ProtoReflect.Descriptor instead.
func (*SecretTowerFightReq) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{4}
}

func (x *SecretTowerFightReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type SecretTowerFightResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret             *int32           `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Rewards         *string          `protobuf:"bytes,2,opt,name=rewards" json:"rewards,omitempty"`
	Info            *SecretTowerInfo `protobuf:"bytes,3,opt,name=info" json:"info,omitempty"`
	AllBattleRecord *BattleRecordMsg `protobuf:"bytes,4,opt,name=allBattleRecord" json:"allBattleRecord,omitempty"`
}

func (x *SecretTowerFightResp) Reset() {
	*x = SecretTowerFightResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretTowerFightResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretTowerFightResp) ProtoMessage() {}

func (x *SecretTowerFightResp) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretTowerFightResp.ProtoReflect.Descriptor instead.
func (*SecretTowerFightResp) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{5}
}

func (x *SecretTowerFightResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SecretTowerFightResp) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

func (x *SecretTowerFightResp) GetInfo() *SecretTowerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SecretTowerFightResp) GetAllBattleRecord() *BattleRecordMsg {
	if x != nil {
		return x.AllBattleRecord
	}
	return nil
}

type SecretTowerGetStageRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Floor *int32 `protobuf:"varint,2,opt,name=floor" json:"floor,omitempty"`
}

func (x *SecretTowerGetStageRewardReq) Reset() {
	*x = SecretTowerGetStageRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretTowerGetStageRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretTowerGetStageRewardReq) ProtoMessage() {}

func (x *SecretTowerGetStageRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretTowerGetStageRewardReq.ProtoReflect.Descriptor instead.
func (*SecretTowerGetStageRewardReq) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{6}
}

func (x *SecretTowerGetStageRewardReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SecretTowerGetStageRewardReq) GetFloor() int32 {
	if x != nil && x.Floor != nil {
		return *x.Floor
	}
	return 0
}

type SecretTowerGetStageRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret            *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Reward         *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
	StageFloorList []int32 `protobuf:"varint,5,rep,name=stageFloorList" json:"stageFloorList,omitempty"`
}

func (x *SecretTowerGetStageRewardRsp) Reset() {
	*x = SecretTowerGetStageRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretTowerGetStageRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretTowerGetStageRewardRsp) ProtoMessage() {}

func (x *SecretTowerGetStageRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretTowerGetStageRewardRsp.ProtoReflect.Descriptor instead.
func (*SecretTowerGetStageRewardRsp) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{7}
}

func (x *SecretTowerGetStageRewardRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SecretTowerGetStageRewardRsp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *SecretTowerGetStageRewardRsp) GetStageFloorList() []int32 {
	if x != nil {
		return x.StageFloorList
	}
	return nil
}

type SecretTowerViewMonsterAttrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
}

func (x *SecretTowerViewMonsterAttrReq) Reset() {
	*x = SecretTowerViewMonsterAttrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretTowerViewMonsterAttrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretTowerViewMonsterAttrReq) ProtoMessage() {}

func (x *SecretTowerViewMonsterAttrReq) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretTowerViewMonsterAttrReq.ProtoReflect.Descriptor instead.
func (*SecretTowerViewMonsterAttrReq) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{8}
}

func (x *SecretTowerViewMonsterAttrReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type SecretTowerViewMonsterAttrResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32              `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	AttributeList []*AttributeDataMsg `protobuf:"bytes,2,rep,name=attributeList" json:"attributeList,omitempty"`
}

func (x *SecretTowerViewMonsterAttrResp) Reset() {
	*x = SecretTowerViewMonsterAttrResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretTowerViewMonsterAttrResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretTowerViewMonsterAttrResp) ProtoMessage() {}

func (x *SecretTowerViewMonsterAttrResp) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretTowerViewMonsterAttrResp.ProtoReflect.Descriptor instead.
func (*SecretTowerViewMonsterAttrResp) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{9}
}

func (x *SecretTowerViewMonsterAttrResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SecretTowerViewMonsterAttrResp) GetAttributeList() []*AttributeDataMsg {
	if x != nil {
		return x.AttributeList
	}
	return nil
}

type SecretTowerAchievementReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Floor *int32 `protobuf:"varint,2,opt,name=floor" json:"floor,omitempty"`
}

func (x *SecretTowerAchievementReq) Reset() {
	*x = SecretTowerAchievementReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretTowerAchievementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretTowerAchievementReq) ProtoMessage() {}

func (x *SecretTowerAchievementReq) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretTowerAchievementReq.ProtoReflect.Descriptor instead.
func (*SecretTowerAchievementReq) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{10}
}

func (x *SecretTowerAchievementReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SecretTowerAchievementReq) GetFloor() int32 {
	if x != nil && x.Floor != nil {
		return *x.Floor
	}
	return 0
}

type SecretTowerAchievementRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret               *int32               `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Floor             *int32               `protobuf:"varint,2,opt,name=floor" json:"floor,omitempty"`
	AttachCount       *int32               `protobuf:"varint,3,opt,name=attachCount" json:"attachCount,omitempty"`
	AchievePlayerInfo []*AchievePlayerInfo `protobuf:"bytes,4,rep,name=achievePlayerInfo" json:"achievePlayerInfo,omitempty"`
}

func (x *SecretTowerAchievementRsp) Reset() {
	*x = SecretTowerAchievementRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretTowerAchievementRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretTowerAchievementRsp) ProtoMessage() {}

func (x *SecretTowerAchievementRsp) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretTowerAchievementRsp.ProtoReflect.Descriptor instead.
func (*SecretTowerAchievementRsp) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{11}
}

func (x *SecretTowerAchievementRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SecretTowerAchievementRsp) GetFloor() int32 {
	if x != nil && x.Floor != nil {
		return *x.Floor
	}
	return 0
}

func (x *SecretTowerAchievementRsp) GetAttachCount() int32 {
	if x != nil && x.AttachCount != nil {
		return *x.AttachCount
	}
	return 0
}

func (x *SecretTowerAchievementRsp) GetAchievePlayerInfo() []*AchievePlayerInfo {
	if x != nil {
		return x.AchievePlayerInfo
	}
	return nil
}

type AchievePlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId      *int64             `protobuf:"varint,1,opt,name=playerId" json:"playerId,omitempty"`
	SId           *int64             `protobuf:"varint,2,opt,name=sId" json:"sId,omitempty"`
	CurPower      *int64             `protobuf:"varint,3,opt,name=curPower" json:"curPower,omitempty"`
	RealmsId      *int32             `protobuf:"varint,4,opt,name=realmsId" json:"realmsId,omitempty"`
	HeadIcon      *int32             `protobuf:"varint,5,opt,name=headIcon" json:"headIcon,omitempty"`
	WeChatHeadUrl *string            `protobuf:"bytes,6,opt,name=weChatHeadUrl" json:"weChatHeadUrl,omitempty"`
	NickName      *string            `protobuf:"bytes,7,opt,name=nickName" json:"nickName,omitempty"`
	Time          *int64             `protobuf:"varint,8,opt,name=time" json:"time,omitempty"`
	HeadInfo      *PlayerHeadDataMsg `protobuf:"bytes,9,opt,name=headInfo" json:"headInfo,omitempty"`
}

func (x *AchievePlayerInfo) Reset() {
	*x = AchievePlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievePlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievePlayerInfo) ProtoMessage() {}

func (x *AchievePlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievePlayerInfo.ProtoReflect.Descriptor instead.
func (*AchievePlayerInfo) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{12}
}

func (x *AchievePlayerInfo) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *AchievePlayerInfo) GetSId() int64 {
	if x != nil && x.SId != nil {
		return *x.SId
	}
	return 0
}

func (x *AchievePlayerInfo) GetCurPower() int64 {
	if x != nil && x.CurPower != nil {
		return *x.CurPower
	}
	return 0
}

func (x *AchievePlayerInfo) GetRealmsId() int32 {
	if x != nil && x.RealmsId != nil {
		return *x.RealmsId
	}
	return 0
}

func (x *AchievePlayerInfo) GetHeadIcon() int32 {
	if x != nil && x.HeadIcon != nil {
		return *x.HeadIcon
	}
	return 0
}

func (x *AchievePlayerInfo) GetWeChatHeadUrl() string {
	if x != nil && x.WeChatHeadUrl != nil {
		return *x.WeChatHeadUrl
	}
	return ""
}

func (x *AchievePlayerInfo) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *AchievePlayerInfo) GetTime() int64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *AchievePlayerInfo) GetHeadInfo() *PlayerHeadDataMsg {
	if x != nil {
		return x.HeadInfo
	}
	return nil
}

type SecretTowerGetAchiRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Floor *int32 `protobuf:"varint,2,opt,name=floor" json:"floor,omitempty"`
}

func (x *SecretTowerGetAchiRewardReq) Reset() {
	*x = SecretTowerGetAchiRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretTowerGetAchiRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretTowerGetAchiRewardReq) ProtoMessage() {}

func (x *SecretTowerGetAchiRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretTowerGetAchiRewardReq.ProtoReflect.Descriptor instead.
func (*SecretTowerGetAchiRewardReq) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{13}
}

func (x *SecretTowerGetAchiRewardReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SecretTowerGetAchiRewardReq) GetFloor() int32 {
	if x != nil && x.Floor != nil {
		return *x.Floor
	}
	return 0
}

type SecretTowerGetAchiRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Reward        *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
	AchiFloorList []int32 `protobuf:"varint,6,rep,name=achiFloorList" json:"achiFloorList,omitempty"`
}

func (x *SecretTowerGetAchiRewardRsp) Reset() {
	*x = SecretTowerGetAchiRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SecretTower_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretTowerGetAchiRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretTowerGetAchiRewardRsp) ProtoMessage() {}

func (x *SecretTowerGetAchiRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_SecretTower_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretTowerGetAchiRewardRsp.ProtoReflect.Descriptor instead.
func (*SecretTowerGetAchiRewardRsp) Descriptor() ([]byte, []int) {
	return file_SecretTower_proto_rawDescGZIP(), []int{14}
}

func (x *SecretTowerGetAchiRewardRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SecretTowerGetAchiRewardRsp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *SecretTowerGetAchiRewardRsp) GetAchiFloorList() []int32 {
	if x != nil {
		return x.AchiFloorList
	}
	return nil
}

var File_SecretTower_proto protoreflect.FileDescriptor

var file_SecretTower_proto_rawDesc = []byte{
	0x0a, 0x11, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xed, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66,
	0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x73,
	0x74, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x63, 0x68, 0x69, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x63, 0x68, 0x69, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x68, 0x69, 0x4d, 0x61, 0x78, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x63, 0x68, 0x69, 0x4d, 0x61,
	0x78, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x22, 0x55, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x08,
	0x69, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x29, 0x0a,
	0x13, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x60, 0x0a, 0x13, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x37, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x0a, 0x13, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x54, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x73,
	0x67, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x22, 0x48, 0x0a, 0x1c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x22, 0x70, 0x0a, 0x1c,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x46,
	0x6c, 0x6f, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x33,
	0x0a, 0x1d, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x69, 0x65,
	0x77, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x7e, 0x0a, 0x1e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x77,
	0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x4a, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x19, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x77,
	0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x22, 0xba, 0x01, 0x0a, 0x19, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c,
	0x6f, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x53, 0x0a, 0x11, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xae, 0x02, 0x0a, 0x11, 0x41, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d,
	0x73, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d,
	0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x77, 0x65, 0x43, 0x68, 0x61, 0x74, 0x48, 0x65, 0x61, 0x64, 0x55, 0x72, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x65, 0x43, 0x68, 0x61, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x08,
	0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x47, 0x0a, 0x1b, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72, 0x47, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f,
	0x72, 0x22, 0x6d, 0x0a, 0x1b, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54, 0x6f, 0x77, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x68, 0x69, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63,
	0x68, 0x69, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0d, 0x61, 0x63, 0x68, 0x69, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69,
	0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_SecretTower_proto_rawDescOnce sync.Once
	file_SecretTower_proto_rawDescData = file_SecretTower_proto_rawDesc
)

func file_SecretTower_proto_rawDescGZIP() []byte {
	file_SecretTower_proto_rawDescOnce.Do(func() {
		file_SecretTower_proto_rawDescData = protoimpl.X.CompressGZIP(file_SecretTower_proto_rawDescData)
	})
	return file_SecretTower_proto_rawDescData
}

var file_SecretTower_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_SecretTower_proto_goTypes = []any{
	(*SecretTowerInfo)(nil),                // 0: com.yq.msg.CityMsg.SecretTowerInfo
	(*SynSecretTowerInfo)(nil),             // 1: com.yq.msg.CityMsg.SynSecretTowerInfo
	(*SecretTowerEnterReq)(nil),            // 2: com.yq.msg.CityMsg.SecretTowerEnterReq
	(*SecretTowerEnterRsp)(nil),            // 3: com.yq.msg.CityMsg.SecretTowerEnterRsp
	(*SecretTowerFightReq)(nil),            // 4: com.yq.msg.CityMsg.SecretTowerFightReq
	(*SecretTowerFightResp)(nil),           // 5: com.yq.msg.CityMsg.SecretTowerFightResp
	(*SecretTowerGetStageRewardReq)(nil),   // 6: com.yq.msg.CityMsg.SecretTowerGetStageRewardReq
	(*SecretTowerGetStageRewardRsp)(nil),   // 7: com.yq.msg.CityMsg.SecretTowerGetStageRewardRsp
	(*SecretTowerViewMonsterAttrReq)(nil),  // 8: com.yq.msg.CityMsg.SecretTowerViewMonsterAttrReq
	(*SecretTowerViewMonsterAttrResp)(nil), // 9: com.yq.msg.CityMsg.SecretTowerViewMonsterAttrResp
	(*SecretTowerAchievementReq)(nil),      // 10: com.yq.msg.CityMsg.SecretTowerAchievementReq
	(*SecretTowerAchievementRsp)(nil),      // 11: com.yq.msg.CityMsg.SecretTowerAchievementRsp
	(*AchievePlayerInfo)(nil),              // 12: com.yq.msg.CityMsg.AchievePlayerInfo
	(*SecretTowerGetAchiRewardReq)(nil),    // 13: com.yq.msg.CityMsg.SecretTowerGetAchiRewardReq
	(*SecretTowerGetAchiRewardRsp)(nil),    // 14: com.yq.msg.CityMsg.SecretTowerGetAchiRewardRsp
	(*BattleRecordMsg)(nil),                // 15: com.yq.msg.CityMsg.BattleRecordMsg
	(*AttributeDataMsg)(nil),               // 16: com.yq.msg.CityMsg.AttributeDataMsg
	(*PlayerHeadDataMsg)(nil),              // 17: com.yq.msg.CityMsg.PlayerHeadDataMsg
}
var file_SecretTower_proto_depIdxs = []int32{
	0,  // 0: com.yq.msg.CityMsg.SynSecretTowerInfo.infoList:type_name -> com.yq.msg.CityMsg.SecretTowerInfo
	0,  // 1: com.yq.msg.CityMsg.SecretTowerEnterRsp.info:type_name -> com.yq.msg.CityMsg.SecretTowerInfo
	0,  // 2: com.yq.msg.CityMsg.SecretTowerFightResp.info:type_name -> com.yq.msg.CityMsg.SecretTowerInfo
	15, // 3: com.yq.msg.CityMsg.SecretTowerFightResp.allBattleRecord:type_name -> com.yq.msg.CityMsg.BattleRecordMsg
	16, // 4: com.yq.msg.CityMsg.SecretTowerViewMonsterAttrResp.attributeList:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	12, // 5: com.yq.msg.CityMsg.SecretTowerAchievementRsp.achievePlayerInfo:type_name -> com.yq.msg.CityMsg.AchievePlayerInfo
	17, // 6: com.yq.msg.CityMsg.AchievePlayerInfo.headInfo:type_name -> com.yq.msg.CityMsg.PlayerHeadDataMsg
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_SecretTower_proto_init() }
func file_SecretTower_proto_init() {
	if File_SecretTower_proto != nil {
		return
	}
	file_Common_proto_init()
	file_Battle_proto_init()
	file_WatchPlayer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SecretTower_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SecretTowerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SecretTower_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SynSecretTowerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SecretTower_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SecretTowerEnterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SecretTower_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SecretTowerEnterRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SecretTower_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SecretTowerFightReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SecretTower_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SecretTowerFightResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SecretTower_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SecretTowerGetStageRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SecretTower_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SecretTowerGetStageRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SecretTower_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SecretTowerViewMonsterAttrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SecretTower_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SecretTowerViewMonsterAttrResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SecretTower_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SecretTowerAchievementReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SecretTower_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SecretTowerAchievementRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SecretTower_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*AchievePlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SecretTower_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*SecretTowerGetAchiRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SecretTower_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SecretTowerGetAchiRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SecretTower_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SecretTower_proto_goTypes,
		DependencyIndexes: file_SecretTower_proto_depIdxs,
		MessageInfos:      file_SecretTower_proto_msgTypes,
	}.Build()
	File_SecretTower_proto = out.File
	file_SecretTower_proto_rawDesc = nil
	file_SecretTower_proto_goTypes = nil
	file_SecretTower_proto_depIdxs = nil
}
