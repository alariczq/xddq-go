// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: SpiritTrialActivity.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpiritTrialActivityConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityBossConfig []*ActivityBossConfig `protobuf:"bytes,1,rep,name=activityBossConfig" json:"activityBossConfig,omitempty"`
}

func (x *SpiritTrialActivityConfig) Reset() {
	*x = SpiritTrialActivityConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SpiritTrialActivity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritTrialActivityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritTrialActivityConfig) ProtoMessage() {}

func (x *SpiritTrialActivityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_SpiritTrialActivity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritTrialActivityConfig.ProtoReflect.Descriptor instead.
func (*SpiritTrialActivityConfig) Descriptor() ([]byte, []int) {
	return file_SpiritTrialActivity_proto_rawDescGZIP(), []int{0}
}

func (x *SpiritTrialActivityConfig) GetActivityBossConfig() []*ActivityBossConfig {
	if x != nil {
		return x.ActivityBossConfig
	}
	return nil
}

type ActivityBossConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name         *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	SeatCount    *int32  `protobuf:"varint,3,opt,name=seatCount" json:"seatCount,omitempty"`
	PointProduce *string `protobuf:"bytes,4,opt,name=pointProduce" json:"pointProduce,omitempty"`
	Award        *string `protobuf:"bytes,5,opt,name=award" json:"award,omitempty"`
	Weight       *int32  `protobuf:"varint,6,opt,name=weight" json:"weight,omitempty"`
}

func (x *ActivityBossConfig) Reset() {
	*x = ActivityBossConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SpiritTrialActivity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityBossConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityBossConfig) ProtoMessage() {}

func (x *ActivityBossConfig) ProtoReflect() protoreflect.Message {
	mi := &file_SpiritTrialActivity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityBossConfig.ProtoReflect.Descriptor instead.
func (*ActivityBossConfig) Descriptor() ([]byte, []int) {
	return file_SpiritTrialActivity_proto_rawDescGZIP(), []int{1}
}

func (x *ActivityBossConfig) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ActivityBossConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ActivityBossConfig) GetSeatCount() int32 {
	if x != nil && x.SeatCount != nil {
		return *x.SeatCount
	}
	return 0
}

func (x *ActivityBossConfig) GetPointProduce() string {
	if x != nil && x.PointProduce != nil {
		return *x.PointProduce
	}
	return ""
}

func (x *ActivityBossConfig) GetAward() string {
	if x != nil && x.Award != nil {
		return *x.Award
	}
	return ""
}

func (x *ActivityBossConfig) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

type SpiritTrialActivityDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleItemNum              *int32              `protobuf:"varint,1,opt,name=battleItemNum" json:"battleItemNum,omitempty"`
	BattleItemLastRecoveryTime *int64              `protobuf:"varint,2,opt,name=battleItemLastRecoveryTime" json:"battleItemLastRecoveryTime,omitempty"`
	EvilThingDataMsg           []*EvilThingDataMsg `protobuf:"bytes,3,rep,name=evilThingDataMsg" json:"evilThingDataMsg,omitempty"`
	RestSpiritId               []int32             `protobuf:"varint,4,rep,name=restSpiritId" json:"restSpiritId,omitempty"`
	ActivityScore              *int32              `protobuf:"varint,5,opt,name=activityScore" json:"activityScore,omitempty"`
}

func (x *SpiritTrialActivityDataMsg) Reset() {
	*x = SpiritTrialActivityDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SpiritTrialActivity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiritTrialActivityDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiritTrialActivityDataMsg) ProtoMessage() {}

func (x *SpiritTrialActivityDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_SpiritTrialActivity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiritTrialActivityDataMsg.ProtoReflect.Descriptor instead.
func (*SpiritTrialActivityDataMsg) Descriptor() ([]byte, []int) {
	return file_SpiritTrialActivity_proto_rawDescGZIP(), []int{2}
}

func (x *SpiritTrialActivityDataMsg) GetBattleItemNum() int32 {
	if x != nil && x.BattleItemNum != nil {
		return *x.BattleItemNum
	}
	return 0
}

func (x *SpiritTrialActivityDataMsg) GetBattleItemLastRecoveryTime() int64 {
	if x != nil && x.BattleItemLastRecoveryTime != nil {
		return *x.BattleItemLastRecoveryTime
	}
	return 0
}

func (x *SpiritTrialActivityDataMsg) GetEvilThingDataMsg() []*EvilThingDataMsg {
	if x != nil {
		return x.EvilThingDataMsg
	}
	return nil
}

func (x *SpiritTrialActivityDataMsg) GetRestSpiritId() []int32 {
	if x != nil {
		return x.RestSpiritId
	}
	return nil
}

func (x *SpiritTrialActivityDataMsg) GetActivityScore() int32 {
	if x != nil && x.ActivityScore != nil {
		return *x.ActivityScore
	}
	return 0
}

type EvilThingDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  *int32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Id     *int32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Defeat *bool  `protobuf:"varint,3,opt,name=defeat" json:"defeat,omitempty"`
}

func (x *EvilThingDataMsg) Reset() {
	*x = EvilThingDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SpiritTrialActivity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvilThingDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvilThingDataMsg) ProtoMessage() {}

func (x *EvilThingDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_SpiritTrialActivity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvilThingDataMsg.ProtoReflect.Descriptor instead.
func (*EvilThingDataMsg) Descriptor() ([]byte, []int) {
	return file_SpiritTrialActivity_proto_rawDescGZIP(), []int{3}
}

func (x *EvilThingDataMsg) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *EvilThingDataMsg) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *EvilThingDataMsg) GetDefeat() bool {
	if x != nil && x.Defeat != nil {
		return *x.Defeat
	}
	return false
}

type RefreshEvilThingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *RefreshEvilThingReq) Reset() {
	*x = RefreshEvilThingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SpiritTrialActivity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshEvilThingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshEvilThingReq) ProtoMessage() {}

func (x *RefreshEvilThingReq) ProtoReflect() protoreflect.Message {
	mi := &file_SpiritTrialActivity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshEvilThingReq.ProtoReflect.Descriptor instead.
func (*RefreshEvilThingReq) Descriptor() ([]byte, []int) {
	return file_SpiritTrialActivity_proto_rawDescGZIP(), []int{4}
}

func (x *RefreshEvilThingReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type RefreshEvilThingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *RefreshEvilThingResp) Reset() {
	*x = RefreshEvilThingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SpiritTrialActivity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshEvilThingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshEvilThingResp) ProtoMessage() {}

func (x *RefreshEvilThingResp) ProtoReflect() protoreflect.Message {
	mi := &file_SpiritTrialActivity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshEvilThingResp.ProtoReflect.Descriptor instead.
func (*RefreshEvilThingResp) Descriptor() ([]byte, []int) {
	return file_SpiritTrialActivity_proto_rawDescGZIP(), []int{5}
}

func (x *RefreshEvilThingResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type BattleEviThingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId     *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	SpiritId       []int32 `protobuf:"varint,2,rep,name=spiritId" json:"spiritId,omitempty"`
	EvilThingIndex *int32  `protobuf:"varint,3,req,name=evilThingIndex" json:"evilThingIndex,omitempty"`
}

func (x *BattleEviThingReq) Reset() {
	*x = BattleEviThingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SpiritTrialActivity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleEviThingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleEviThingReq) ProtoMessage() {}

func (x *BattleEviThingReq) ProtoReflect() protoreflect.Message {
	mi := &file_SpiritTrialActivity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleEviThingReq.ProtoReflect.Descriptor instead.
func (*BattleEviThingReq) Descriptor() ([]byte, []int) {
	return file_SpiritTrialActivity_proto_rawDescGZIP(), []int{6}
}

func (x *BattleEviThingReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *BattleEviThingReq) GetSpiritId() []int32 {
	if x != nil {
		return x.SpiritId
	}
	return nil
}

func (x *BattleEviThingReq) GetEvilThingIndex() int32 {
	if x != nil && x.EvilThingIndex != nil {
		return *x.EvilThingIndex
	}
	return 0
}

type BattleEvilThingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Reward     *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
	Score      *int32  `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
	CurRank    *int32  `protobuf:"varint,4,opt,name=curRank" json:"curRank,omitempty"`
	IsRankRise *bool   `protobuf:"varint,5,opt,name=isRankRise" json:"isRankRise,omitempty"`
}

func (x *BattleEvilThingResp) Reset() {
	*x = BattleEvilThingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SpiritTrialActivity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleEvilThingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleEvilThingResp) ProtoMessage() {}

func (x *BattleEvilThingResp) ProtoReflect() protoreflect.Message {
	mi := &file_SpiritTrialActivity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleEvilThingResp.ProtoReflect.Descriptor instead.
func (*BattleEvilThingResp) Descriptor() ([]byte, []int) {
	return file_SpiritTrialActivity_proto_rawDescGZIP(), []int{7}
}

func (x *BattleEvilThingResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *BattleEvilThingResp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *BattleEvilThingResp) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *BattleEvilThingResp) GetCurRank() int32 {
	if x != nil && x.CurRank != nil {
		return *x.CurRank
	}
	return 0
}

func (x *BattleEvilThingResp) GetIsRankRise() bool {
	if x != nil && x.IsRankRise != nil {
		return *x.IsRankRise
	}
	return false
}

var File_SpiritTrialActivity_proto protoreflect.FileDescriptor

var file_SpiritTrialActivity_proto_rawDesc = []byte{
	0x0a, 0x19, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x22,
	0x73, 0x0a, 0x19, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x56, 0x0a, 0x12,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x6f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x6f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x6f, 0x73, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0xa8, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x42, 0x6f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x9e, 0x02, 0x0a, 0x1a, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x24,
	0x0a, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x3e, 0x0a, 0x1a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x65, 0x76, 0x69, 0x6c, 0x54, 0x68, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x45, 0x76, 0x69, 0x6c, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x52, 0x10, 0x65, 0x76, 0x69, 0x6c, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x53, 0x70,
	0x69, 0x72, 0x69, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x74, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x22, 0x50, 0x0a, 0x10, 0x45, 0x76, 0x69, 0x6c, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x66, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x65, 0x66, 0x65,
	0x61, 0x74, 0x22, 0x35, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x45, 0x76, 0x69,
	0x6c, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x14, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x45, 0x76, 0x69, 0x6c, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x22, 0x77, 0x0a, 0x11, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x45, 0x76, 0x69,
	0x54, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x69, 0x72,
	0x69, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x73, 0x70, 0x69, 0x72,
	0x69, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x76, 0x69, 0x6c, 0x54, 0x68, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x76,
	0x69, 0x6c, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x8f, 0x01, 0x0a,
	0x13, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x45, 0x76, 0x69, 0x6c, 0x54, 0x68, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x69, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x69, 0x73, 0x65, 0x42, 0x36,
	0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6d, 0x7a,
	0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_SpiritTrialActivity_proto_rawDescOnce sync.Once
	file_SpiritTrialActivity_proto_rawDescData = file_SpiritTrialActivity_proto_rawDesc
)

func file_SpiritTrialActivity_proto_rawDescGZIP() []byte {
	file_SpiritTrialActivity_proto_rawDescOnce.Do(func() {
		file_SpiritTrialActivity_proto_rawDescData = protoimpl.X.CompressGZIP(file_SpiritTrialActivity_proto_rawDescData)
	})
	return file_SpiritTrialActivity_proto_rawDescData
}

var file_SpiritTrialActivity_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_SpiritTrialActivity_proto_goTypes = []any{
	(*SpiritTrialActivityConfig)(nil),  // 0: com.yq.msg.CityMsg.SpiritTrialActivityConfig
	(*ActivityBossConfig)(nil),         // 1: com.yq.msg.CityMsg.ActivityBossConfig
	(*SpiritTrialActivityDataMsg)(nil), // 2: com.yq.msg.CityMsg.SpiritTrialActivityDataMsg
	(*EvilThingDataMsg)(nil),           // 3: com.yq.msg.CityMsg.EvilThingDataMsg
	(*RefreshEvilThingReq)(nil),        // 4: com.yq.msg.CityMsg.RefreshEvilThingReq
	(*RefreshEvilThingResp)(nil),       // 5: com.yq.msg.CityMsg.RefreshEvilThingResp
	(*BattleEviThingReq)(nil),          // 6: com.yq.msg.CityMsg.BattleEviThingReq
	(*BattleEvilThingResp)(nil),        // 7: com.yq.msg.CityMsg.BattleEvilThingResp
}
var file_SpiritTrialActivity_proto_depIdxs = []int32{
	1, // 0: com.yq.msg.CityMsg.SpiritTrialActivityConfig.activityBossConfig:type_name -> com.yq.msg.CityMsg.ActivityBossConfig
	3, // 1: com.yq.msg.CityMsg.SpiritTrialActivityDataMsg.evilThingDataMsg:type_name -> com.yq.msg.CityMsg.EvilThingDataMsg
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_SpiritTrialActivity_proto_init() }
func file_SpiritTrialActivity_proto_init() {
	if File_SpiritTrialActivity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_SpiritTrialActivity_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritTrialActivityConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SpiritTrialActivity_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityBossConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SpiritTrialActivity_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SpiritTrialActivityDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SpiritTrialActivity_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*EvilThingDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SpiritTrialActivity_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RefreshEvilThingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SpiritTrialActivity_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*RefreshEvilThingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SpiritTrialActivity_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*BattleEviThingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SpiritTrialActivity_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*BattleEvilThingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SpiritTrialActivity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SpiritTrialActivity_proto_goTypes,
		DependencyIndexes: file_SpiritTrialActivity_proto_depIdxs,
		MessageInfos:      file_SpiritTrialActivity_proto_msgTypes,
	}.Build()
	File_SpiritTrialActivity_proto = out.File
	file_SpiritTrialActivity_proto_rawDesc = nil
	file_SpiritTrialActivity_proto_goTypes = nil
	file_SpiritTrialActivity_proto_depIdxs = nil
}
