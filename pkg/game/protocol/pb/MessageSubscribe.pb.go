// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: MessageSubscribe.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageSubscribeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	TemplateId    *string `protobuf:"bytes,2,opt,name=templateId" json:"templateId,omitempty"`
	Title         *string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Content       *string `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
	PushRate      *int32  `protobuf:"varint,5,opt,name=pushRate" json:"pushRate,omitempty"`
	DyTemplateId  *string `protobuf:"bytes,6,opt,name=dyTemplateId" json:"dyTemplateId,omitempty"`
	ZfbTemplateId *string `protobuf:"bytes,7,opt,name=zfbTemplateId" json:"zfbTemplateId,omitempty"`
}

func (x *MessageSubscribeConfig) Reset() {
	*x = MessageSubscribeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MessageSubscribe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSubscribeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSubscribeConfig) ProtoMessage() {}

func (x *MessageSubscribeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_MessageSubscribe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSubscribeConfig.ProtoReflect.Descriptor instead.
func (*MessageSubscribeConfig) Descriptor() ([]byte, []int) {
	return file_MessageSubscribe_proto_rawDescGZIP(), []int{0}
}

func (x *MessageSubscribeConfig) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *MessageSubscribeConfig) GetTemplateId() string {
	if x != nil && x.TemplateId != nil {
		return *x.TemplateId
	}
	return ""
}

func (x *MessageSubscribeConfig) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *MessageSubscribeConfig) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *MessageSubscribeConfig) GetPushRate() int32 {
	if x != nil && x.PushRate != nil {
		return *x.PushRate
	}
	return 0
}

func (x *MessageSubscribeConfig) GetDyTemplateId() string {
	if x != nil && x.DyTemplateId != nil {
		return *x.DyTemplateId
	}
	return ""
}

func (x *MessageSubscribeConfig) GetZfbTemplateId() string {
	if x != nil && x.ZfbTemplateId != nil {
		return *x.ZfbTemplateId
	}
	return ""
}

type MessageSubscribeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId        *string `protobuf:"bytes,1,opt,name=templateId" json:"templateId,omitempty"`
	IsSubscribeOfGame *bool   `protobuf:"varint,2,opt,name=isSubscribeOfGame" json:"isSubscribeOfGame,omitempty"`
	IsSubscribeOfWx   *bool   `protobuf:"varint,3,opt,name=isSubscribeOfWx" json:"isSubscribeOfWx,omitempty"`
}

func (x *MessageSubscribeData) Reset() {
	*x = MessageSubscribeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MessageSubscribe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSubscribeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSubscribeData) ProtoMessage() {}

func (x *MessageSubscribeData) ProtoReflect() protoreflect.Message {
	mi := &file_MessageSubscribe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSubscribeData.ProtoReflect.Descriptor instead.
func (*MessageSubscribeData) Descriptor() ([]byte, []int) {
	return file_MessageSubscribe_proto_rawDescGZIP(), []int{1}
}

func (x *MessageSubscribeData) GetTemplateId() string {
	if x != nil && x.TemplateId != nil {
		return *x.TemplateId
	}
	return ""
}

func (x *MessageSubscribeData) GetIsSubscribeOfGame() bool {
	if x != nil && x.IsSubscribeOfGame != nil {
		return *x.IsSubscribeOfGame
	}
	return false
}

func (x *MessageSubscribeData) GetIsSubscribeOfWx() bool {
	if x != nil && x.IsSubscribeOfWx != nil {
		return *x.IsSubscribeOfWx
	}
	return false
}

type MessageSubscribePlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageSubscribeDataList []*MessageSubscribeData `protobuf:"bytes,1,rep,name=messageSubscribeDataList" json:"messageSubscribeDataList,omitempty"`
	Switch                   *bool                   `protobuf:"varint,2,opt,name=switch" json:"switch,omitempty"`
}

func (x *MessageSubscribePlayerData) Reset() {
	*x = MessageSubscribePlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MessageSubscribe_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSubscribePlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSubscribePlayerData) ProtoMessage() {}

func (x *MessageSubscribePlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_MessageSubscribe_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSubscribePlayerData.ProtoReflect.Descriptor instead.
func (*MessageSubscribePlayerData) Descriptor() ([]byte, []int) {
	return file_MessageSubscribe_proto_rawDescGZIP(), []int{2}
}

func (x *MessageSubscribePlayerData) GetMessageSubscribeDataList() []*MessageSubscribeData {
	if x != nil {
		return x.MessageSubscribeDataList
	}
	return nil
}

func (x *MessageSubscribePlayerData) GetSwitch() bool {
	if x != nil && x.Switch != nil {
		return *x.Switch
	}
	return false
}

type SetMessageSubscribeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId        *string `protobuf:"bytes,1,opt,name=templateId" json:"templateId,omitempty"`
	IsSubscribeOfGame *bool   `protobuf:"varint,2,opt,name=isSubscribeOfGame" json:"isSubscribeOfGame,omitempty"`
	IsSubscribeOfWx   *bool   `protobuf:"varint,3,opt,name=isSubscribeOfWx" json:"isSubscribeOfWx,omitempty"`
}

func (x *SetMessageSubscribeData) Reset() {
	*x = SetMessageSubscribeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MessageSubscribe_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMessageSubscribeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMessageSubscribeData) ProtoMessage() {}

func (x *SetMessageSubscribeData) ProtoReflect() protoreflect.Message {
	mi := &file_MessageSubscribe_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMessageSubscribeData.ProtoReflect.Descriptor instead.
func (*SetMessageSubscribeData) Descriptor() ([]byte, []int) {
	return file_MessageSubscribe_proto_rawDescGZIP(), []int{3}
}

func (x *SetMessageSubscribeData) GetTemplateId() string {
	if x != nil && x.TemplateId != nil {
		return *x.TemplateId
	}
	return ""
}

func (x *SetMessageSubscribeData) GetIsSubscribeOfGame() bool {
	if x != nil && x.IsSubscribeOfGame != nil {
		return *x.IsSubscribeOfGame
	}
	return false
}

func (x *SetMessageSubscribeData) GetIsSubscribeOfWx() bool {
	if x != nil && x.IsSubscribeOfWx != nil {
		return *x.IsSubscribeOfWx
	}
	return false
}

type SetMessageSubscribeDataReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetList   []*SetMessageSubscribeData `protobuf:"bytes,1,rep,name=setList" json:"setList,omitempty"`
	Switch    *bool                      `protobuf:"varint,2,opt,name=switch" json:"switch,omitempty"`
	WxOpenId  *string                    `protobuf:"bytes,3,opt,name=wxOpenId" json:"wxOpenId,omitempty"`
	DyOpenId  *string                    `protobuf:"bytes,4,opt,name=dyOpenId" json:"dyOpenId,omitempty"`
	ZfbOpenId *string                    `protobuf:"bytes,5,opt,name=zfbOpenId" json:"zfbOpenId,omitempty"`
}

func (x *SetMessageSubscribeDataReqMsg) Reset() {
	*x = SetMessageSubscribeDataReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MessageSubscribe_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMessageSubscribeDataReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMessageSubscribeDataReqMsg) ProtoMessage() {}

func (x *SetMessageSubscribeDataReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_MessageSubscribe_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMessageSubscribeDataReqMsg.ProtoReflect.Descriptor instead.
func (*SetMessageSubscribeDataReqMsg) Descriptor() ([]byte, []int) {
	return file_MessageSubscribe_proto_rawDescGZIP(), []int{4}
}

func (x *SetMessageSubscribeDataReqMsg) GetSetList() []*SetMessageSubscribeData {
	if x != nil {
		return x.SetList
	}
	return nil
}

func (x *SetMessageSubscribeDataReqMsg) GetSwitch() bool {
	if x != nil && x.Switch != nil {
		return *x.Switch
	}
	return false
}

func (x *SetMessageSubscribeDataReqMsg) GetWxOpenId() string {
	if x != nil && x.WxOpenId != nil {
		return *x.WxOpenId
	}
	return ""
}

func (x *SetMessageSubscribeDataReqMsg) GetDyOpenId() string {
	if x != nil && x.DyOpenId != nil {
		return *x.DyOpenId
	}
	return ""
}

func (x *SetMessageSubscribeDataReqMsg) GetZfbOpenId() string {
	if x != nil && x.ZfbOpenId != nil {
		return *x.ZfbOpenId
	}
	return ""
}

type SetMessageSubscribeDataRspMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32                      `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	PlayerData *MessageSubscribePlayerData `protobuf:"bytes,2,opt,name=playerData" json:"playerData,omitempty"`
}

func (x *SetMessageSubscribeDataRspMsg) Reset() {
	*x = SetMessageSubscribeDataRspMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MessageSubscribe_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMessageSubscribeDataRspMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMessageSubscribeDataRspMsg) ProtoMessage() {}

func (x *SetMessageSubscribeDataRspMsg) ProtoReflect() protoreflect.Message {
	mi := &file_MessageSubscribe_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMessageSubscribeDataRspMsg.ProtoReflect.Descriptor instead.
func (*SetMessageSubscribeDataRspMsg) Descriptor() ([]byte, []int) {
	return file_MessageSubscribe_proto_rawDescGZIP(), []int{5}
}

func (x *SetMessageSubscribeDataRspMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SetMessageSubscribeDataRspMsg) GetPlayerData() *MessageSubscribePlayerData {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

type MessageSubscribeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageSubscribeConfigList []*MessageSubscribeConfig   `protobuf:"bytes,1,rep,name=messageSubscribeConfigList" json:"messageSubscribeConfigList,omitempty"`
	PlayerData                 *MessageSubscribePlayerData `protobuf:"bytes,2,opt,name=playerData" json:"playerData,omitempty"`
}

func (x *MessageSubscribeInfo) Reset() {
	*x = MessageSubscribeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MessageSubscribe_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSubscribeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSubscribeInfo) ProtoMessage() {}

func (x *MessageSubscribeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_MessageSubscribe_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSubscribeInfo.ProtoReflect.Descriptor instead.
func (*MessageSubscribeInfo) Descriptor() ([]byte, []int) {
	return file_MessageSubscribe_proto_rawDescGZIP(), []int{6}
}

func (x *MessageSubscribeInfo) GetMessageSubscribeConfigList() []*MessageSubscribeConfig {
	if x != nil {
		return x.MessageSubscribeConfigList
	}
	return nil
}

func (x *MessageSubscribeInfo) GetPlayerData() *MessageSubscribePlayerData {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

var File_MessageSubscribe_proto protoreflect.FileDescriptor

var file_MessageSubscribe_proto_rawDesc = []byte{
	0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x22, 0xde, 0x01, 0x0a,
	0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x73, 0x68, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x79, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x7a, 0x66, 0x62, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x7a, 0x66, 0x62, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x8e, 0x01,
	0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x66, 0x47, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x66,
	0x47, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4f, 0x66, 0x57, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69,
	0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x66, 0x57, 0x78, 0x22, 0x9a,
	0x01, 0x0a, 0x1a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x64, 0x0a,
	0x18, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x18, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x91, 0x01, 0x0a, 0x17,
	0x53, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x66, 0x47, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f,
	0x66, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x4f, 0x66, 0x57, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x66, 0x57, 0x78, 0x22,
	0xd4, 0x01, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x4d, 0x73,
	0x67, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x07, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x77, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x77, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x7a, 0x66, 0x62, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x7a, 0x66, 0x62,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x4e, 0x0a, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd2, 0x01, 0x0a, 0x14, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x6a, 0x0a, 0x1a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x1a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x4e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6d,
	0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_MessageSubscribe_proto_rawDescOnce sync.Once
	file_MessageSubscribe_proto_rawDescData = file_MessageSubscribe_proto_rawDesc
)

func file_MessageSubscribe_proto_rawDescGZIP() []byte {
	file_MessageSubscribe_proto_rawDescOnce.Do(func() {
		file_MessageSubscribe_proto_rawDescData = protoimpl.X.CompressGZIP(file_MessageSubscribe_proto_rawDescData)
	})
	return file_MessageSubscribe_proto_rawDescData
}

var file_MessageSubscribe_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_MessageSubscribe_proto_goTypes = []any{
	(*MessageSubscribeConfig)(nil),        // 0: com.yq.msg.CityMsg.MessageSubscribeConfig
	(*MessageSubscribeData)(nil),          // 1: com.yq.msg.CityMsg.MessageSubscribeData
	(*MessageSubscribePlayerData)(nil),    // 2: com.yq.msg.CityMsg.MessageSubscribePlayerData
	(*SetMessageSubscribeData)(nil),       // 3: com.yq.msg.CityMsg.SetMessageSubscribeData
	(*SetMessageSubscribeDataReqMsg)(nil), // 4: com.yq.msg.CityMsg.SetMessageSubscribeDataReqMsg
	(*SetMessageSubscribeDataRspMsg)(nil), // 5: com.yq.msg.CityMsg.SetMessageSubscribeDataRspMsg
	(*MessageSubscribeInfo)(nil),          // 6: com.yq.msg.CityMsg.MessageSubscribeInfo
}
var file_MessageSubscribe_proto_depIdxs = []int32{
	1, // 0: com.yq.msg.CityMsg.MessageSubscribePlayerData.messageSubscribeDataList:type_name -> com.yq.msg.CityMsg.MessageSubscribeData
	3, // 1: com.yq.msg.CityMsg.SetMessageSubscribeDataReqMsg.setList:type_name -> com.yq.msg.CityMsg.SetMessageSubscribeData
	2, // 2: com.yq.msg.CityMsg.SetMessageSubscribeDataRspMsg.playerData:type_name -> com.yq.msg.CityMsg.MessageSubscribePlayerData
	0, // 3: com.yq.msg.CityMsg.MessageSubscribeInfo.messageSubscribeConfigList:type_name -> com.yq.msg.CityMsg.MessageSubscribeConfig
	2, // 4: com.yq.msg.CityMsg.MessageSubscribeInfo.playerData:type_name -> com.yq.msg.CityMsg.MessageSubscribePlayerData
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_MessageSubscribe_proto_init() }
func file_MessageSubscribe_proto_init() {
	if File_MessageSubscribe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_MessageSubscribe_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MessageSubscribeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MessageSubscribe_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MessageSubscribeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MessageSubscribe_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MessageSubscribePlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MessageSubscribe_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SetMessageSubscribeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MessageSubscribe_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SetMessageSubscribeDataReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MessageSubscribe_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SetMessageSubscribeDataRspMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MessageSubscribe_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*MessageSubscribeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_MessageSubscribe_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_MessageSubscribe_proto_goTypes,
		DependencyIndexes: file_MessageSubscribe_proto_depIdxs,
		MessageInfos:      file_MessageSubscribe_proto_msgTypes,
	}.Build()
	File_MessageSubscribe_proto = out.File
	file_MessageSubscribe_proto_rawDesc = nil
	file_MessageSubscribe_proto_goTypes = nil
	file_MessageSubscribe_proto_depIdxs = nil
}
