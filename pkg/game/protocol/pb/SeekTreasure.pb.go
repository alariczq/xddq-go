// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: SeekTreasure.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SeekTreasureConfigsSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrawConfig []*SeekTreasureDrawConfig `protobuf:"bytes,1,rep,name=drawConfig" json:"drawConfig,omitempty"`
}

func (x *SeekTreasureConfigsSync) Reset() {
	*x = SeekTreasureConfigsSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureConfigsSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureConfigsSync) ProtoMessage() {}

func (x *SeekTreasureConfigsSync) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureConfigsSync.ProtoReflect.Descriptor instead.
func (*SeekTreasureConfigsSync) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{0}
}

func (x *SeekTreasureConfigsSync) GetDrawConfig() []*SeekTreasureDrawConfig {
	if x != nil {
		return x.DrawConfig
	}
	return nil
}

type SeekTreasureDrawConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Id         *int32  `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Reward     *string `protobuf:"bytes,3,req,name=reward" json:"reward,omitempty"`
	Weight     *int32  `protobuf:"varint,4,req,name=weight" json:"weight,omitempty"`
	Lv         *int32  `protobuf:"varint,5,req,name=lv" json:"lv,omitempty"`
	IsNotice   *int32  `protobuf:"varint,6,req,name=isNotice" json:"isNotice,omitempty"`
}

func (x *SeekTreasureDrawConfig) Reset() {
	*x = SeekTreasureDrawConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureDrawConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureDrawConfig) ProtoMessage() {}

func (x *SeekTreasureDrawConfig) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureDrawConfig.ProtoReflect.Descriptor instead.
func (*SeekTreasureDrawConfig) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{1}
}

func (x *SeekTreasureDrawConfig) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *SeekTreasureDrawConfig) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *SeekTreasureDrawConfig) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *SeekTreasureDrawConfig) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *SeekTreasureDrawConfig) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *SeekTreasureDrawConfig) GetIsNotice() int32 {
	if x != nil && x.IsNotice != nil {
		return *x.IsNotice
	}
	return 0
}

type SeekTreasureDrawReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Times      *int32 `protobuf:"varint,2,req,name=times" json:"times,omitempty"`
}

func (x *SeekTreasureDrawReq) Reset() {
	*x = SeekTreasureDrawReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureDrawReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureDrawReq) ProtoMessage() {}

func (x *SeekTreasureDrawReq) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureDrawReq.ProtoReflect.Descriptor instead.
func (*SeekTreasureDrawReq) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{2}
}

func (x *SeekTreasureDrawReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *SeekTreasureDrawReq) GetTimes() int32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

type SeekTreasureDrawResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32                    `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	DrawResult []*SeekTreasureDrawResult `protobuf:"bytes,2,rep,name=drawResult" json:"drawResult,omitempty"`
}

func (x *SeekTreasureDrawResp) Reset() {
	*x = SeekTreasureDrawResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureDrawResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureDrawResp) ProtoMessage() {}

func (x *SeekTreasureDrawResp) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureDrawResp.ProtoReflect.Descriptor instead.
func (*SeekTreasureDrawResp) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{3}
}

func (x *SeekTreasureDrawResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SeekTreasureDrawResp) GetDrawResult() []*SeekTreasureDrawResult {
	if x != nil {
		return x.DrawResult
	}
	return nil
}

type SeekTreasureDrawResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Reward *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
}

func (x *SeekTreasureDrawResult) Reset() {
	*x = SeekTreasureDrawResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureDrawResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureDrawResult) ProtoMessage() {}

func (x *SeekTreasureDrawResult) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureDrawResult.ProtoReflect.Descriptor instead.
func (*SeekTreasureDrawResult) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{4}
}

func (x *SeekTreasureDrawResult) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *SeekTreasureDrawResult) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type SeekTreasureViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *SeekTreasureViewReq) Reset() {
	*x = SeekTreasureViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureViewReq) ProtoMessage() {}

func (x *SeekTreasureViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureViewReq.ProtoReflect.Descriptor instead.
func (*SeekTreasureViewReq) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{5}
}

func (x *SeekTreasureViewReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type SeekTreasureViewResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32                    `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	ActivityData  *SeekTreasureActivityData `protobuf:"bytes,2,opt,name=activityData" json:"activityData,omitempty"`
	DrawNoticeMsg *SeekTreasureNoticeMsg    `protobuf:"bytes,3,opt,name=drawNoticeMsg" json:"drawNoticeMsg,omitempty"`
}

func (x *SeekTreasureViewResp) Reset() {
	*x = SeekTreasureViewResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureViewResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureViewResp) ProtoMessage() {}

func (x *SeekTreasureViewResp) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureViewResp.ProtoReflect.Descriptor instead.
func (*SeekTreasureViewResp) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{6}
}

func (x *SeekTreasureViewResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SeekTreasureViewResp) GetActivityData() *SeekTreasureActivityData {
	if x != nil {
		return x.ActivityData
	}
	return nil
}

func (x *SeekTreasureViewResp) GetDrawNoticeMsg() *SeekTreasureNoticeMsg {
	if x != nil {
		return x.DrawNoticeMsg
	}
	return nil
}

type SeekTreasureActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LuckyValue           *int32                          `protobuf:"varint,1,opt,name=luckyValue" json:"luckyValue,omitempty"`
	RewardInfo           []*SeekTreasureRewardData       `protobuf:"bytes,2,rep,name=rewardInfo" json:"rewardInfo,omitempty"`
	RareIndex            *int32                          `protobuf:"varint,3,opt,name=rareIndex" json:"rareIndex,omitempty"`
	Point                *int32                          `protobuf:"varint,4,opt,name=point" json:"point,omitempty"`
	TodayPoint           *int32                          `protobuf:"varint,5,opt,name=todayPoint" json:"todayPoint,omitempty"`
	SelectRareRewardItem []*SeekTreasureRewardSelectData `protobuf:"bytes,6,rep,name=selectRareRewardItem" json:"selectRareRewardItem,omitempty"`
}

func (x *SeekTreasureActivityData) Reset() {
	*x = SeekTreasureActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureActivityData) ProtoMessage() {}

func (x *SeekTreasureActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureActivityData.ProtoReflect.Descriptor instead.
func (*SeekTreasureActivityData) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{7}
}

func (x *SeekTreasureActivityData) GetLuckyValue() int32 {
	if x != nil && x.LuckyValue != nil {
		return *x.LuckyValue
	}
	return 0
}

func (x *SeekTreasureActivityData) GetRewardInfo() []*SeekTreasureRewardData {
	if x != nil {
		return x.RewardInfo
	}
	return nil
}

func (x *SeekTreasureActivityData) GetRareIndex() int32 {
	if x != nil && x.RareIndex != nil {
		return *x.RareIndex
	}
	return 0
}

func (x *SeekTreasureActivityData) GetPoint() int32 {
	if x != nil && x.Point != nil {
		return *x.Point
	}
	return 0
}

func (x *SeekTreasureActivityData) GetTodayPoint() int32 {
	if x != nil && x.TodayPoint != nil {
		return *x.TodayPoint
	}
	return 0
}

func (x *SeekTreasureActivityData) GetSelectRareRewardItem() []*SeekTreasureRewardSelectData {
	if x != nil {
		return x.SelectRareRewardItem
	}
	return nil
}

type SeekTreasureRewardSelectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RareIndex   *int32 `protobuf:"varint,1,req,name=rareIndex" json:"rareIndex,omitempty"`
	SelectIndex *int32 `protobuf:"varint,2,req,name=selectIndex" json:"selectIndex,omitempty"`
}

func (x *SeekTreasureRewardSelectData) Reset() {
	*x = SeekTreasureRewardSelectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureRewardSelectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureRewardSelectData) ProtoMessage() {}

func (x *SeekTreasureRewardSelectData) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureRewardSelectData.ProtoReflect.Descriptor instead.
func (*SeekTreasureRewardSelectData) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{8}
}

func (x *SeekTreasureRewardSelectData) GetRareIndex() int32 {
	if x != nil && x.RareIndex != nil {
		return *x.RareIndex
	}
	return 0
}

func (x *SeekTreasureRewardSelectData) GetSelectIndex() int32 {
	if x != nil && x.SelectIndex != nil {
		return *x.SelectIndex
	}
	return 0
}

type SeekTreasureRewardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RareIndex *int32 `protobuf:"varint,1,opt,name=rareIndex" json:"rareIndex,omitempty"`
	Times     *int32 `protobuf:"varint,2,opt,name=times" json:"times,omitempty"`
}

func (x *SeekTreasureRewardData) Reset() {
	*x = SeekTreasureRewardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureRewardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureRewardData) ProtoMessage() {}

func (x *SeekTreasureRewardData) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureRewardData.ProtoReflect.Descriptor instead.
func (*SeekTreasureRewardData) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{9}
}

func (x *SeekTreasureRewardData) GetRareIndex() int32 {
	if x != nil && x.RareIndex != nil {
		return *x.RareIndex
	}
	return 0
}

func (x *SeekTreasureRewardData) GetTimes() int32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

type SeekTreasureChooseRareRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	RareIndex  *int32 `protobuf:"varint,2,req,name=rareIndex" json:"rareIndex,omitempty"`
}

func (x *SeekTreasureChooseRareRewardReq) Reset() {
	*x = SeekTreasureChooseRareRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureChooseRareRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureChooseRareRewardReq) ProtoMessage() {}

func (x *SeekTreasureChooseRareRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureChooseRareRewardReq.ProtoReflect.Descriptor instead.
func (*SeekTreasureChooseRareRewardReq) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{10}
}

func (x *SeekTreasureChooseRareRewardReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *SeekTreasureChooseRareRewardReq) GetRareIndex() int32 {
	if x != nil && x.RareIndex != nil {
		return *x.RareIndex
	}
	return 0
}

type SeekTreasureChooseRareRewardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *SeekTreasureChooseRareRewardResp) Reset() {
	*x = SeekTreasureChooseRareRewardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureChooseRareRewardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureChooseRareRewardResp) ProtoMessage() {}

func (x *SeekTreasureChooseRareRewardResp) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureChooseRareRewardResp.ProtoReflect.Descriptor instead.
func (*SeekTreasureChooseRareRewardResp) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{11}
}

func (x *SeekTreasureChooseRareRewardResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type SeekTreasureNoticeMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeInfo []*SeekTreasureNoticeSyncInfo `protobuf:"bytes,1,rep,name=noticeInfo" json:"noticeInfo,omitempty"`
}

func (x *SeekTreasureNoticeMsg) Reset() {
	*x = SeekTreasureNoticeMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureNoticeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureNoticeMsg) ProtoMessage() {}

func (x *SeekTreasureNoticeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureNoticeMsg.ProtoReflect.Descriptor instead.
func (*SeekTreasureNoticeMsg) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{12}
}

func (x *SeekTreasureNoticeMsg) GetNoticeInfo() []*SeekTreasureNoticeSyncInfo {
	if x != nil {
		return x.NoticeInfo
	}
	return nil
}

type SeekTreasureNoticeSyncInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NickName *string `protobuf:"bytes,1,opt,name=nickName" json:"nickName,omitempty"`
	Times    *int64  `protobuf:"varint,2,opt,name=times" json:"times,omitempty"`
	Reward   *string `protobuf:"bytes,3,opt,name=reward" json:"reward,omitempty"`
}

func (x *SeekTreasureNoticeSyncInfo) Reset() {
	*x = SeekTreasureNoticeSyncInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureNoticeSyncInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureNoticeSyncInfo) ProtoMessage() {}

func (x *SeekTreasureNoticeSyncInfo) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureNoticeSyncInfo.ProtoReflect.Descriptor instead.
func (*SeekTreasureNoticeSyncInfo) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{13}
}

func (x *SeekTreasureNoticeSyncInfo) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *SeekTreasureNoticeSyncInfo) GetTimes() int64 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

func (x *SeekTreasureNoticeSyncInfo) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type SeekTreasureSelectRewardReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	RareIndex   *int32 `protobuf:"varint,2,req,name=rareIndex" json:"rareIndex,omitempty"`
	ChooseIndex *int32 `protobuf:"varint,3,opt,name=chooseIndex" json:"chooseIndex,omitempty"`
}

func (x *SeekTreasureSelectRewardReqMsg) Reset() {
	*x = SeekTreasureSelectRewardReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureSelectRewardReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureSelectRewardReqMsg) ProtoMessage() {}

func (x *SeekTreasureSelectRewardReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureSelectRewardReqMsg.ProtoReflect.Descriptor instead.
func (*SeekTreasureSelectRewardReqMsg) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{14}
}

func (x *SeekTreasureSelectRewardReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *SeekTreasureSelectRewardReqMsg) GetRareIndex() int32 {
	if x != nil && x.RareIndex != nil {
		return *x.RareIndex
	}
	return 0
}

func (x *SeekTreasureSelectRewardReqMsg) GetChooseIndex() int32 {
	if x != nil && x.ChooseIndex != nil {
		return *x.ChooseIndex
	}
	return 0
}

type SeekTreasureSelectRewardRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *SeekTreasureSelectRewardRespMsg) Reset() {
	*x = SeekTreasureSelectRewardRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SeekTreasure_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekTreasureSelectRewardRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekTreasureSelectRewardRespMsg) ProtoMessage() {}

func (x *SeekTreasureSelectRewardRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_SeekTreasure_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekTreasureSelectRewardRespMsg.ProtoReflect.Descriptor instead.
func (*SeekTreasureSelectRewardRespMsg) Descriptor() ([]byte, []int) {
	return file_SeekTreasure_proto_rawDescGZIP(), []int{15}
}

func (x *SeekTreasureSelectRewardRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

var File_SeekTreasure_proto protoreflect.FileDescriptor

var file_SeekTreasure_proto_rawDesc = []byte{
	0x0a, 0x12, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x22, 0x65, 0x0a, 0x17, 0x53, 0x65, 0x65, 0x6b,
	0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x4a, 0x0a, 0x0a, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x65,
	0x6b, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0a, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0xa4, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x76,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x6c, 0x76, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x4b, 0x0a, 0x13, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x22, 0x74, 0x0a, 0x14, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x4a, 0x0a,
	0x0a, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x64,
	0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x40, 0x0a, 0x16, 0x53, 0x65, 0x65,
	0x6b, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x35, 0x0a, 0x13, 0x53,
	0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x50, 0x0a,
	0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x4f, 0x0a, 0x0d, 0x64, 0x72, 0x61, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x73, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x65, 0x6b,
	0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x73,
	0x67, 0x52, 0x0d, 0x64, 0x72, 0x61, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x73, 0x67,
	0x22, 0xc0, 0x02, 0x0a, 0x18, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a,
	0x0a, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4a, 0x0a,
	0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x72,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x61,
	0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x64, 0x0a,
	0x14, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x61, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x14, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x61, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x22, 0x5e, 0x0a, 0x1c, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x72, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x4c, 0x0a, 0x16, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x72, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x22, 0x5f, 0x0a, 0x1f, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x52, 0x61, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x72, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x34, 0x0a, 0x20, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x52, 0x61, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x67, 0x0a, 0x15, 0x53, 0x65, 0x65, 0x6b,
	0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x73,
	0x67, 0x12, 0x4e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x65, 0x6b, 0x54,
	0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x79, 0x6e,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x66, 0x0a, 0x1a, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x1e, 0x53, 0x65,
	0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x09, 0x72, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68,
	0x6f, 0x6f, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x33, 0x0a, 0x1f,
	0x53, 0x65, 0x65, 0x6b, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x69, 0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d, 0x67,
	0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_SeekTreasure_proto_rawDescOnce sync.Once
	file_SeekTreasure_proto_rawDescData = file_SeekTreasure_proto_rawDesc
)

func file_SeekTreasure_proto_rawDescGZIP() []byte {
	file_SeekTreasure_proto_rawDescOnce.Do(func() {
		file_SeekTreasure_proto_rawDescData = protoimpl.X.CompressGZIP(file_SeekTreasure_proto_rawDescData)
	})
	return file_SeekTreasure_proto_rawDescData
}

var file_SeekTreasure_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_SeekTreasure_proto_goTypes = []any{
	(*SeekTreasureConfigsSync)(nil),          // 0: com.yq.msg.CityMsg.SeekTreasureConfigsSync
	(*SeekTreasureDrawConfig)(nil),           // 1: com.yq.msg.CityMsg.SeekTreasureDrawConfig
	(*SeekTreasureDrawReq)(nil),              // 2: com.yq.msg.CityMsg.SeekTreasureDrawReq
	(*SeekTreasureDrawResp)(nil),             // 3: com.yq.msg.CityMsg.SeekTreasureDrawResp
	(*SeekTreasureDrawResult)(nil),           // 4: com.yq.msg.CityMsg.SeekTreasureDrawResult
	(*SeekTreasureViewReq)(nil),              // 5: com.yq.msg.CityMsg.SeekTreasureViewReq
	(*SeekTreasureViewResp)(nil),             // 6: com.yq.msg.CityMsg.SeekTreasureViewResp
	(*SeekTreasureActivityData)(nil),         // 7: com.yq.msg.CityMsg.SeekTreasureActivityData
	(*SeekTreasureRewardSelectData)(nil),     // 8: com.yq.msg.CityMsg.SeekTreasureRewardSelectData
	(*SeekTreasureRewardData)(nil),           // 9: com.yq.msg.CityMsg.SeekTreasureRewardData
	(*SeekTreasureChooseRareRewardReq)(nil),  // 10: com.yq.msg.CityMsg.SeekTreasureChooseRareRewardReq
	(*SeekTreasureChooseRareRewardResp)(nil), // 11: com.yq.msg.CityMsg.SeekTreasureChooseRareRewardResp
	(*SeekTreasureNoticeMsg)(nil),            // 12: com.yq.msg.CityMsg.SeekTreasureNoticeMsg
	(*SeekTreasureNoticeSyncInfo)(nil),       // 13: com.yq.msg.CityMsg.SeekTreasureNoticeSyncInfo
	(*SeekTreasureSelectRewardReqMsg)(nil),   // 14: com.yq.msg.CityMsg.SeekTreasureSelectRewardReqMsg
	(*SeekTreasureSelectRewardRespMsg)(nil),  // 15: com.yq.msg.CityMsg.SeekTreasureSelectRewardRespMsg
}
var file_SeekTreasure_proto_depIdxs = []int32{
	1,  // 0: com.yq.msg.CityMsg.SeekTreasureConfigsSync.drawConfig:type_name -> com.yq.msg.CityMsg.SeekTreasureDrawConfig
	4,  // 1: com.yq.msg.CityMsg.SeekTreasureDrawResp.drawResult:type_name -> com.yq.msg.CityMsg.SeekTreasureDrawResult
	7,  // 2: com.yq.msg.CityMsg.SeekTreasureViewResp.activityData:type_name -> com.yq.msg.CityMsg.SeekTreasureActivityData
	12, // 3: com.yq.msg.CityMsg.SeekTreasureViewResp.drawNoticeMsg:type_name -> com.yq.msg.CityMsg.SeekTreasureNoticeMsg
	9,  // 4: com.yq.msg.CityMsg.SeekTreasureActivityData.rewardInfo:type_name -> com.yq.msg.CityMsg.SeekTreasureRewardData
	8,  // 5: com.yq.msg.CityMsg.SeekTreasureActivityData.selectRareRewardItem:type_name -> com.yq.msg.CityMsg.SeekTreasureRewardSelectData
	13, // 6: com.yq.msg.CityMsg.SeekTreasureNoticeMsg.noticeInfo:type_name -> com.yq.msg.CityMsg.SeekTreasureNoticeSyncInfo
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_SeekTreasure_proto_init() }
func file_SeekTreasure_proto_init() {
	if File_SeekTreasure_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_SeekTreasure_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureConfigsSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureDrawConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureDrawReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureDrawResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureDrawResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureViewResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureRewardSelectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureRewardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureChooseRareRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureChooseRareRewardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureNoticeMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureNoticeSyncInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureSelectRewardReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SeekTreasure_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SeekTreasureSelectRewardRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SeekTreasure_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SeekTreasure_proto_goTypes,
		DependencyIndexes: file_SeekTreasure_proto_depIdxs,
		MessageInfos:      file_SeekTreasure_proto_msgTypes,
	}.Build()
	File_SeekTreasure_proto = out.File
	file_SeekTreasure_proto_rawDesc = nil
	file_SeekTreasure_proto_goTypes = nil
	file_SeekTreasure_proto_depIdxs = nil
}
