// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: Palace.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendGiftType int32

const (
	SendGiftType_SendGiftType_Null          SendGiftType = 0
	SendGiftType_SendGiftType_Palace        SendGiftType = 1
	SendGiftType_SendGiftType_StarTrial     SendGiftType = 2
	SendGiftType_SendGiftType_DoubleSeventh SendGiftType = 3
)

// Enum value maps for SendGiftType.
var (
	SendGiftType_name = map[int32]string{
		0: "SendGiftType_Null",
		1: "SendGiftType_Palace",
		2: "SendGiftType_StarTrial",
		3: "SendGiftType_DoubleSeventh",
	}
	SendGiftType_value = map[string]int32{
		"SendGiftType_Null":          0,
		"SendGiftType_Palace":        1,
		"SendGiftType_StarTrial":     2,
		"SendGiftType_DoubleSeventh": 3,
	}
)

func (x SendGiftType) Enum() *SendGiftType {
	p := new(SendGiftType)
	*p = x
	return p
}

func (x SendGiftType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendGiftType) Descriptor() protoreflect.EnumDescriptor {
	return file_Palace_proto_enumTypes[0].Descriptor()
}

func (SendGiftType) Type() protoreflect.EnumType {
	return &file_Palace_proto_enumTypes[0]
}

func (x SendGiftType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SendGiftType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SendGiftType(num)
	return nil
}

// Deprecated: Use SendGiftType.Descriptor instead.
func (SendGiftType) EnumDescriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{0}
}

type PalaceSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OuterWorship    *bool                     `protobuf:"varint,1,req,name=outerWorship" json:"outerWorship,omitempty"`
	CanWorshipTitle []int32                   `protobuf:"varint,2,rep,name=canWorshipTitle" json:"canWorshipTitle,omitempty"`
	SendGiftTimes   *int32                    `protobuf:"varint,3,req,name=sendGiftTimes" json:"sendGiftTimes,omitempty"`
	AchievementData *PalaceAchievementDataMsg `protobuf:"bytes,4,opt,name=achievementData" json:"achievementData,omitempty"`
}

func (x *PalaceSyncMsg) Reset() {
	*x = PalaceSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PalaceSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PalaceSyncMsg) ProtoMessage() {}

func (x *PalaceSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PalaceSyncMsg.ProtoReflect.Descriptor instead.
func (*PalaceSyncMsg) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{0}
}

func (x *PalaceSyncMsg) GetOuterWorship() bool {
	if x != nil && x.OuterWorship != nil {
		return *x.OuterWorship
	}
	return false
}

func (x *PalaceSyncMsg) GetCanWorshipTitle() []int32 {
	if x != nil {
		return x.CanWorshipTitle
	}
	return nil
}

func (x *PalaceSyncMsg) GetSendGiftTimes() int32 {
	if x != nil && x.SendGiftTimes != nil {
		return *x.SendGiftTimes
	}
	return 0
}

func (x *PalaceSyncMsg) GetAchievementData() *PalaceAchievementDataMsg {
	if x != nil {
		return x.AchievementData
	}
	return nil
}

type PalaceMiracleDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MiracleId *int32 `protobuf:"varint,1,req,name=miracleId" json:"miracleId,omitempty"`
	UsedTimes *int32 `protobuf:"varint,2,req,name=usedTimes" json:"usedTimes,omitempty"`
}

func (x *PalaceMiracleDataMsg) Reset() {
	*x = PalaceMiracleDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PalaceMiracleDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PalaceMiracleDataMsg) ProtoMessage() {}

func (x *PalaceMiracleDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PalaceMiracleDataMsg.ProtoReflect.Descriptor instead.
func (*PalaceMiracleDataMsg) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{1}
}

func (x *PalaceMiracleDataMsg) GetMiracleId() int32 {
	if x != nil && x.MiracleId != nil {
		return *x.MiracleId
	}
	return 0
}

func (x *PalaceMiracleDataMsg) GetUsedTimes() int32 {
	if x != nil && x.UsedTimes != nil {
		return *x.UsedTimes
	}
	return 0
}

type PalaceAchievementDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num        *int32  `protobuf:"varint,1,req,name=num" json:"num,omitempty"`
	ReceivedId []int32 `protobuf:"varint,2,rep,name=receivedId" json:"receivedId,omitempty"`
}

func (x *PalaceAchievementDataMsg) Reset() {
	*x = PalaceAchievementDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PalaceAchievementDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PalaceAchievementDataMsg) ProtoMessage() {}

func (x *PalaceAchievementDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PalaceAchievementDataMsg.ProtoReflect.Descriptor instead.
func (*PalaceAchievementDataMsg) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{2}
}

func (x *PalaceAchievementDataMsg) GetNum() int32 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

func (x *PalaceAchievementDataMsg) GetReceivedId() []int32 {
	if x != nil {
		return x.ReceivedId
	}
	return nil
}

type EnterPalaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnterPalaceReq) Reset() {
	*x = EnterPalaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterPalaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterPalaceReq) ProtoMessage() {}

func (x *EnterPalaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterPalaceReq.ProtoReflect.Descriptor instead.
func (*EnterPalaceReq) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{3}
}

type EnterPalaceRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32           `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	PalaceData    []*PalaceDataMsg `protobuf:"bytes,2,rep,name=palaceData" json:"palaceData,omitempty"`
	Worship       *bool            `protobuf:"varint,3,opt,name=worship" json:"worship,omitempty"`
	WorshipRandom *bool            `protobuf:"varint,4,opt,name=worshipRandom" json:"worshipRandom,omitempty"`
	ConsumeScore  *int64           `protobuf:"varint,5,opt,name=consumeScore" json:"consumeScore,omitempty"`
}

func (x *EnterPalaceRsp) Reset() {
	*x = EnterPalaceRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterPalaceRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterPalaceRsp) ProtoMessage() {}

func (x *EnterPalaceRsp) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterPalaceRsp.ProtoReflect.Descriptor instead.
func (*EnterPalaceRsp) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{4}
}

func (x *EnterPalaceRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *EnterPalaceRsp) GetPalaceData() []*PalaceDataMsg {
	if x != nil {
		return x.PalaceData
	}
	return nil
}

func (x *EnterPalaceRsp) GetWorship() bool {
	if x != nil && x.Worship != nil {
		return *x.Worship
	}
	return false
}

func (x *EnterPalaceRsp) GetWorshipRandom() bool {
	if x != nil && x.WorshipRandom != nil {
		return *x.WorshipRandom
	}
	return false
}

func (x *EnterPalaceRsp) GetConsumeScore() int64 {
	if x != nil && x.ConsumeScore != nil {
		return *x.ConsumeScore
	}
	return 0
}

type PalaceDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleId       *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	Worship       *bool  `protobuf:"varint,2,req,name=worship" json:"worship,omitempty"`
	Show          *bool  `protobuf:"varint,3,req,name=show" json:"show,omitempty"`
	WorshipRandom *bool  `protobuf:"varint,4,opt,name=worshipRandom" json:"worshipRandom,omitempty"`
}

func (x *PalaceDataMsg) Reset() {
	*x = PalaceDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PalaceDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PalaceDataMsg) ProtoMessage() {}

func (x *PalaceDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PalaceDataMsg.ProtoReflect.Descriptor instead.
func (*PalaceDataMsg) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{5}
}

func (x *PalaceDataMsg) GetTitleId() int32 {
	if x != nil && x.TitleId != nil {
		return *x.TitleId
	}
	return 0
}

func (x *PalaceDataMsg) GetWorship() bool {
	if x != nil && x.Worship != nil {
		return *x.Worship
	}
	return false
}

func (x *PalaceDataMsg) GetShow() bool {
	if x != nil && x.Show != nil {
		return *x.Show
	}
	return false
}

func (x *PalaceDataMsg) GetWorshipRandom() bool {
	if x != nil && x.WorshipRandom != nil {
		return *x.WorshipRandom
	}
	return false
}

type GetTitleIdListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTitleIdListReq) Reset() {
	*x = GetTitleIdListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTitleIdListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTitleIdListReq) ProtoMessage() {}

func (x *GetTitleIdListReq) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTitleIdListReq.ProtoReflect.Descriptor instead.
func (*GetTitleIdListReq) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{6}
}

type GetTitleIdListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	TitleId []int32 `protobuf:"varint,2,rep,name=titleId" json:"titleId,omitempty"`
}

func (x *GetTitleIdListRsp) Reset() {
	*x = GetTitleIdListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTitleIdListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTitleIdListRsp) ProtoMessage() {}

func (x *GetTitleIdListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTitleIdListRsp.ProtoReflect.Descriptor instead.
func (*GetTitleIdListRsp) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{7}
}

func (x *GetTitleIdListRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GetTitleIdListRsp) GetTitleId() []int32 {
	if x != nil {
		return x.TitleId
	}
	return nil
}

type PalaceWorshipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleId  *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
	IsRandom *int32 `protobuf:"varint,2,req,name=isRandom" json:"isRandom,omitempty"`
}

func (x *PalaceWorshipReq) Reset() {
	*x = PalaceWorshipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PalaceWorshipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PalaceWorshipReq) ProtoMessage() {}

func (x *PalaceWorshipReq) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PalaceWorshipReq.ProtoReflect.Descriptor instead.
func (*PalaceWorshipReq) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{8}
}

func (x *PalaceWorshipReq) GetTitleId() int32 {
	if x != nil && x.TitleId != nil {
		return *x.TitleId
	}
	return 0
}

func (x *PalaceWorshipReq) GetIsRandom() int32 {
	if x != nil && x.IsRandom != nil {
		return *x.IsRandom
	}
	return 0
}

type PalaceWorshipRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32               `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Reward     *string              `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
	PlayerData *PalacePlayerShowMsg `protobuf:"bytes,3,opt,name=playerData" json:"playerData,omitempty"`
	TitleId    *int32               `protobuf:"varint,4,opt,name=titleId" json:"titleId,omitempty"`
}

func (x *PalaceWorshipRsp) Reset() {
	*x = PalaceWorshipRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PalaceWorshipRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PalaceWorshipRsp) ProtoMessage() {}

func (x *PalaceWorshipRsp) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PalaceWorshipRsp.ProtoReflect.Descriptor instead.
func (*PalaceWorshipRsp) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{9}
}

func (x *PalaceWorshipRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PalaceWorshipRsp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *PalaceWorshipRsp) GetPlayerData() *PalacePlayerShowMsg {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

func (x *PalaceWorshipRsp) GetTitleId() int32 {
	if x != nil && x.TitleId != nil {
		return *x.TitleId
	}
	return 0
}

type EnterPalaceInnerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleId *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
}

func (x *EnterPalaceInnerReq) Reset() {
	*x = EnterPalaceInnerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterPalaceInnerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterPalaceInnerReq) ProtoMessage() {}

func (x *EnterPalaceInnerReq) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterPalaceInnerReq.ProtoReflect.Descriptor instead.
func (*EnterPalaceInnerReq) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{10}
}

func (x *EnterPalaceInnerReq) GetTitleId() int32 {
	if x != nil && x.TitleId != nil {
		return *x.TitleId
	}
	return 0
}

type EnterPalaceInnerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  *int32                 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Data []*PalacePlayerShowMsg `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
}

func (x *EnterPalaceInnerRsp) Reset() {
	*x = EnterPalaceInnerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterPalaceInnerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterPalaceInnerRsp) ProtoMessage() {}

func (x *EnterPalaceInnerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterPalaceInnerRsp.ProtoReflect.Descriptor instead.
func (*EnterPalaceInnerRsp) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{11}
}

func (x *EnterPalaceInnerRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *EnterPalaceInnerRsp) GetData() []*PalacePlayerShowMsg {
	if x != nil {
		return x.Data
	}
	return nil
}

type PalaceInnerBookReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleId *int32 `protobuf:"varint,1,req,name=titleId" json:"titleId,omitempty"`
}

func (x *PalaceInnerBookReq) Reset() {
	*x = PalaceInnerBookReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PalaceInnerBookReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PalaceInnerBookReq) ProtoMessage() {}

func (x *PalaceInnerBookReq) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PalaceInnerBookReq.ProtoReflect.Descriptor instead.
func (*PalaceInnerBookReq) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{12}
}

func (x *PalaceInnerBookReq) GetTitleId() int32 {
	if x != nil && x.TitleId != nil {
		return *x.TitleId
	}
	return 0
}

type PalaceInnerBookRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  *int32                 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Data []*PalacePlayerShowMsg `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
}

func (x *PalaceInnerBookRsp) Reset() {
	*x = PalaceInnerBookRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PalaceInnerBookRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PalaceInnerBookRsp) ProtoMessage() {}

func (x *PalaceInnerBookRsp) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PalaceInnerBookRsp.ProtoReflect.Descriptor instead.
func (*PalaceInnerBookRsp) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{13}
}

func (x *PalaceInnerBookRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PalaceInnerBookRsp) GetData() []*PalacePlayerShowMsg {
	if x != nil {
		return x.Data
	}
	return nil
}

type PalacePlayerShowMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId         *int64             `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	ServerId         *int64             `protobuf:"varint,2,req,name=serverId" json:"serverId,omitempty"`
	NickName         *string            `protobuf:"bytes,3,req,name=nickName" json:"nickName,omitempty"`
	Pet              []int32            `protobuf:"varint,4,rep,name=pet" json:"pet,omitempty"`
	Spirit           []int32            `protobuf:"varint,5,rep,name=spirit" json:"spirit,omitempty"`
	AppearanceId     *int32             `protobuf:"varint,6,opt,name=appearanceId" json:"appearanceId,omitempty"`
	EquipCloudId     *int32             `protobuf:"varint,7,opt,name=equipCloudId" json:"equipCloudId,omitempty"`
	RealmsId         *int32             `protobuf:"varint,8,opt,name=realmsId" json:"realmsId,omitempty"`
	Time             *int64             `protobuf:"varint,9,opt,name=time" json:"time,omitempty"`
	Rank             *int32             `protobuf:"varint,10,opt,name=rank" json:"rank,omitempty"`
	HeadIcon         *int32             `protobuf:"varint,11,opt,name=headIcon" json:"headIcon,omitempty"`
	WxHeadUrl        *string            `protobuf:"bytes,12,opt,name=wxHeadUrl" json:"wxHeadUrl,omitempty"`
	HeadInfo         *PlayerHeadDataMsg `protobuf:"bytes,13,opt,name=headInfo" json:"headInfo,omitempty"`
	PetSoulShapeList []int32            `protobuf:"varint,14,rep,name=petSoulShapeList" json:"petSoulShapeList,omitempty"`
	TitleId          *int32             `protobuf:"varint,15,opt,name=titleId" json:"titleId,omitempty"`
	PetLinkageId     []int32            `protobuf:"varint,16,rep,name=petLinkageId" json:"petLinkageId,omitempty"`
	SpiritLinkageId  []int32            `protobuf:"varint,17,rep,name=spiritLinkageId" json:"spiritLinkageId,omitempty"`
}

func (x *PalacePlayerShowMsg) Reset() {
	*x = PalacePlayerShowMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PalacePlayerShowMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PalacePlayerShowMsg) ProtoMessage() {}

func (x *PalacePlayerShowMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PalacePlayerShowMsg.ProtoReflect.Descriptor instead.
func (*PalacePlayerShowMsg) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{14}
}

func (x *PalacePlayerShowMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *PalacePlayerShowMsg) GetServerId() int64 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

func (x *PalacePlayerShowMsg) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *PalacePlayerShowMsg) GetPet() []int32 {
	if x != nil {
		return x.Pet
	}
	return nil
}

func (x *PalacePlayerShowMsg) GetSpirit() []int32 {
	if x != nil {
		return x.Spirit
	}
	return nil
}

func (x *PalacePlayerShowMsg) GetAppearanceId() int32 {
	if x != nil && x.AppearanceId != nil {
		return *x.AppearanceId
	}
	return 0
}

func (x *PalacePlayerShowMsg) GetEquipCloudId() int32 {
	if x != nil && x.EquipCloudId != nil {
		return *x.EquipCloudId
	}
	return 0
}

func (x *PalacePlayerShowMsg) GetRealmsId() int32 {
	if x != nil && x.RealmsId != nil {
		return *x.RealmsId
	}
	return 0
}

func (x *PalacePlayerShowMsg) GetTime() int64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *PalacePlayerShowMsg) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *PalacePlayerShowMsg) GetHeadIcon() int32 {
	if x != nil && x.HeadIcon != nil {
		return *x.HeadIcon
	}
	return 0
}

func (x *PalacePlayerShowMsg) GetWxHeadUrl() string {
	if x != nil && x.WxHeadUrl != nil {
		return *x.WxHeadUrl
	}
	return ""
}

func (x *PalacePlayerShowMsg) GetHeadInfo() *PlayerHeadDataMsg {
	if x != nil {
		return x.HeadInfo
	}
	return nil
}

func (x *PalacePlayerShowMsg) GetPetSoulShapeList() []int32 {
	if x != nil {
		return x.PetSoulShapeList
	}
	return nil
}

func (x *PalacePlayerShowMsg) GetTitleId() int32 {
	if x != nil && x.TitleId != nil {
		return *x.TitleId
	}
	return 0
}

func (x *PalacePlayerShowMsg) GetPetLinkageId() []int32 {
	if x != nil {
		return x.PetLinkageId
	}
	return nil
}

func (x *PalacePlayerShowMsg) GetSpiritLinkageId() []int32 {
	if x != nil {
		return x.SpiritLinkageId
	}
	return nil
}

type SendGiftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words *string `protobuf:"bytes,1,req,name=words" json:"words,omitempty"`
}

func (x *SendGiftReq) Reset() {
	*x = SendGiftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGiftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGiftReq) ProtoMessage() {}

func (x *SendGiftReq) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGiftReq.ProtoReflect.Descriptor instead.
func (*SendGiftReq) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{15}
}

func (x *SendGiftReq) GetWords() string {
	if x != nil && x.Words != nil {
		return *x.Words
	}
	return ""
}

type SendGiftRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *SendGiftRsp) Reset() {
	*x = SendGiftRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGiftRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGiftRsp) ProtoMessage() {}

func (x *SendGiftRsp) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGiftRsp.ProtoReflect.Descriptor instead.
func (*SendGiftRsp) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{16}
}

func (x *SendGiftRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type SendGiftSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SendGiftDataMsg `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (x *SendGiftSyncMsg) Reset() {
	*x = SendGiftSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGiftSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGiftSyncMsg) ProtoMessage() {}

func (x *SendGiftSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGiftSyncMsg.ProtoReflect.Descriptor instead.
func (*SendGiftSyncMsg) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{17}
}

func (x *SendGiftSyncMsg) GetData() []*SendGiftDataMsg {
	if x != nil {
		return x.Data
	}
	return nil
}

type SendGiftDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *string              `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	PlayerData  *PalacePlayerShowMsg `protobuf:"bytes,2,req,name=playerData" json:"playerData,omitempty"`
	ExpiredTime *int64               `protobuf:"varint,3,req,name=expiredTime" json:"expiredTime,omitempty"`
	Title       []int32              `protobuf:"varint,4,rep,name=title" json:"title,omitempty"`
	Words       *string              `protobuf:"bytes,5,req,name=words" json:"words,omitempty"`
	Param       *string              `protobuf:"bytes,6,opt,name=param" json:"param,omitempty"`
	Type        *SendGiftType        `protobuf:"varint,7,opt,name=type,enum=com.yq.msg.CityMsg.SendGiftType" json:"type,omitempty"`
}

func (x *SendGiftDataMsg) Reset() {
	*x = SendGiftDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGiftDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGiftDataMsg) ProtoMessage() {}

func (x *SendGiftDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGiftDataMsg.ProtoReflect.Descriptor instead.
func (*SendGiftDataMsg) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{18}
}

func (x *SendGiftDataMsg) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *SendGiftDataMsg) GetPlayerData() *PalacePlayerShowMsg {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

func (x *SendGiftDataMsg) GetExpiredTime() int64 {
	if x != nil && x.ExpiredTime != nil {
		return *x.ExpiredTime
	}
	return 0
}

func (x *SendGiftDataMsg) GetTitle() []int32 {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *SendGiftDataMsg) GetWords() string {
	if x != nil && x.Words != nil {
		return *x.Words
	}
	return ""
}

func (x *SendGiftDataMsg) GetParam() string {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return ""
}

func (x *SendGiftDataMsg) GetType() SendGiftType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return SendGiftType_SendGiftType_Null
}

type GetSendGiftRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *string       `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	GetReward *bool         `protobuf:"varint,2,opt,name=getReward" json:"getReward,omitempty"`
	Type      *SendGiftType `protobuf:"varint,3,opt,name=type,enum=com.yq.msg.CityMsg.SendGiftType" json:"type,omitempty"`
}

func (x *GetSendGiftRewardReq) Reset() {
	*x = GetSendGiftRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSendGiftRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendGiftRewardReq) ProtoMessage() {}

func (x *GetSendGiftRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendGiftRewardReq.ProtoReflect.Descriptor instead.
func (*GetSendGiftRewardReq) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{19}
}

func (x *GetSendGiftRewardReq) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *GetSendGiftRewardReq) GetGetReward() bool {
	if x != nil && x.GetReward != nil {
		return *x.GetReward
	}
	return false
}

func (x *GetSendGiftRewardReq) GetType() SendGiftType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return SendGiftType_SendGiftType_Null
}

type GetSendGiftRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int64  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Reward *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
}

func (x *GetSendGiftRewardRsp) Reset() {
	*x = GetSendGiftRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSendGiftRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendGiftRewardRsp) ProtoMessage() {}

func (x *GetSendGiftRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendGiftRewardRsp.ProtoReflect.Descriptor instead.
func (*GetSendGiftRewardRsp) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{20}
}

func (x *GetSendGiftRewardRsp) GetRet() int64 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GetSendGiftRewardRsp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type PalaceAchievementGetRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId *int32 `protobuf:"varint,1,req,name=taskId" json:"taskId,omitempty"`
}

func (x *PalaceAchievementGetRewardReq) Reset() {
	*x = PalaceAchievementGetRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PalaceAchievementGetRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PalaceAchievementGetRewardReq) ProtoMessage() {}

func (x *PalaceAchievementGetRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PalaceAchievementGetRewardReq.ProtoReflect.Descriptor instead.
func (*PalaceAchievementGetRewardReq) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{21}
}

func (x *PalaceAchievementGetRewardReq) GetTaskId() int32 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

type PalaceAchievementGetRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Reward *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
}

func (x *PalaceAchievementGetRewardRsp) Reset() {
	*x = PalaceAchievementGetRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Palace_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PalaceAchievementGetRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PalaceAchievementGetRewardRsp) ProtoMessage() {}

func (x *PalaceAchievementGetRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_Palace_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PalaceAchievementGetRewardRsp.ProtoReflect.Descriptor instead.
func (*PalaceAchievementGetRewardRsp) Descriptor() ([]byte, []int) {
	return file_Palace_proto_rawDescGZIP(), []int{22}
}

func (x *PalaceAchievementGetRewardRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PalaceAchievementGetRewardRsp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

var File_Palace_proto protoreflect.FileDescriptor

var file_Palace_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x1a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdb, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65,
	0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x57, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0c, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x63,
	0x61, 0x6e, 0x57, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x57, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65,
	0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x0f, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x73, 0x67, 0x52, 0x0f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x52, 0x0a, 0x14, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x4d, 0x69, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09,
	0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x18, 0x50, 0x61, 0x6c, 0x61, 0x63,
	0x65, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61,
	0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x22, 0xc9, 0x01, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x41, 0x0a, 0x0a,
	0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x73, 0x67, 0x52, 0x0a, 0x70, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x77, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x6f, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x77, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x22, 0x7d, 0x0a, 0x0d, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x77, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52,
	0x07, 0x77, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x24, 0x0a, 0x0d,
	0x77, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x3f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x10, 0x50, 0x61, 0x6c, 0x61,
	0x63, 0x65, 0x57, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x52, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x52, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x22, 0x9f, 0x01, 0x0a, 0x10, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x61, 0x6c, 0x61, 0x63,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x73, 0x67, 0x52, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x13, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61, 0x6c,
	0x61, 0x63, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x13, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61,
	0x6c, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x3b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x68,
	0x6f, 0x77, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x12, 0x50,
	0x61, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x12, 0x50,
	0x61, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xb0, 0x04, 0x0a, 0x13, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x70, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x70,
	0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x77, 0x78, 0x48, 0x65, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x77, 0x78, 0x48, 0x65, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x41, 0x0a, 0x08,
	0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2a, 0x0a, 0x10, 0x70, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x6c, 0x53, 0x68, 0x61, 0x70, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x05, 0x52, 0x10, 0x70, 0x65, 0x74, 0x53, 0x6f,
	0x75, 0x6c, 0x53, 0x68, 0x61, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x10, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x65, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x70, 0x69,
	0x72, 0x69, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x11, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0f, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x1f, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64,
	0x47, 0x69, 0x66, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x4a, 0x0a, 0x0f, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x69, 0x66, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x12, 0x37, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x84, 0x02, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69,
	0x66, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x68, 0x6f, 0x77, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69,
	0x66, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7a, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x67, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x40, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x37, 0x0a, 0x1d, 0x50, 0x61,
	0x6c, 0x61, 0x63, 0x65, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x1d, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2a, 0x7a,
	0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e,
	0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x10, 0x01, 0x12, 0x1a,
	0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53,
	0x74, 0x61, 0x72, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x65,
	0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x68, 0x10, 0x03, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67,
	0x71, 0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67,
	0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b,
	0x70, 0x62,
}

var (
	file_Palace_proto_rawDescOnce sync.Once
	file_Palace_proto_rawDescData = file_Palace_proto_rawDesc
)

func file_Palace_proto_rawDescGZIP() []byte {
	file_Palace_proto_rawDescOnce.Do(func() {
		file_Palace_proto_rawDescData = protoimpl.X.CompressGZIP(file_Palace_proto_rawDescData)
	})
	return file_Palace_proto_rawDescData
}

var file_Palace_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Palace_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_Palace_proto_goTypes = []any{
	(SendGiftType)(0),                     // 0: com.yq.msg.CityMsg.SendGiftType
	(*PalaceSyncMsg)(nil),                 // 1: com.yq.msg.CityMsg.PalaceSyncMsg
	(*PalaceMiracleDataMsg)(nil),          // 2: com.yq.msg.CityMsg.PalaceMiracleDataMsg
	(*PalaceAchievementDataMsg)(nil),      // 3: com.yq.msg.CityMsg.PalaceAchievementDataMsg
	(*EnterPalaceReq)(nil),                // 4: com.yq.msg.CityMsg.EnterPalaceReq
	(*EnterPalaceRsp)(nil),                // 5: com.yq.msg.CityMsg.EnterPalaceRsp
	(*PalaceDataMsg)(nil),                 // 6: com.yq.msg.CityMsg.PalaceDataMsg
	(*GetTitleIdListReq)(nil),             // 7: com.yq.msg.CityMsg.GetTitleIdListReq
	(*GetTitleIdListRsp)(nil),             // 8: com.yq.msg.CityMsg.GetTitleIdListRsp
	(*PalaceWorshipReq)(nil),              // 9: com.yq.msg.CityMsg.PalaceWorshipReq
	(*PalaceWorshipRsp)(nil),              // 10: com.yq.msg.CityMsg.PalaceWorshipRsp
	(*EnterPalaceInnerReq)(nil),           // 11: com.yq.msg.CityMsg.EnterPalaceInnerReq
	(*EnterPalaceInnerRsp)(nil),           // 12: com.yq.msg.CityMsg.EnterPalaceInnerRsp
	(*PalaceInnerBookReq)(nil),            // 13: com.yq.msg.CityMsg.PalaceInnerBookReq
	(*PalaceInnerBookRsp)(nil),            // 14: com.yq.msg.CityMsg.PalaceInnerBookRsp
	(*PalacePlayerShowMsg)(nil),           // 15: com.yq.msg.CityMsg.PalacePlayerShowMsg
	(*SendGiftReq)(nil),                   // 16: com.yq.msg.CityMsg.SendGiftReq
	(*SendGiftRsp)(nil),                   // 17: com.yq.msg.CityMsg.SendGiftRsp
	(*SendGiftSyncMsg)(nil),               // 18: com.yq.msg.CityMsg.SendGiftSyncMsg
	(*SendGiftDataMsg)(nil),               // 19: com.yq.msg.CityMsg.SendGiftDataMsg
	(*GetSendGiftRewardReq)(nil),          // 20: com.yq.msg.CityMsg.GetSendGiftRewardReq
	(*GetSendGiftRewardRsp)(nil),          // 21: com.yq.msg.CityMsg.GetSendGiftRewardRsp
	(*PalaceAchievementGetRewardReq)(nil), // 22: com.yq.msg.CityMsg.PalaceAchievementGetRewardReq
	(*PalaceAchievementGetRewardRsp)(nil), // 23: com.yq.msg.CityMsg.PalaceAchievementGetRewardRsp
	(*PlayerHeadDataMsg)(nil),             // 24: com.yq.msg.CityMsg.PlayerHeadDataMsg
}
var file_Palace_proto_depIdxs = []int32{
	3,  // 0: com.yq.msg.CityMsg.PalaceSyncMsg.achievementData:type_name -> com.yq.msg.CityMsg.PalaceAchievementDataMsg
	6,  // 1: com.yq.msg.CityMsg.EnterPalaceRsp.palaceData:type_name -> com.yq.msg.CityMsg.PalaceDataMsg
	15, // 2: com.yq.msg.CityMsg.PalaceWorshipRsp.playerData:type_name -> com.yq.msg.CityMsg.PalacePlayerShowMsg
	15, // 3: com.yq.msg.CityMsg.EnterPalaceInnerRsp.data:type_name -> com.yq.msg.CityMsg.PalacePlayerShowMsg
	15, // 4: com.yq.msg.CityMsg.PalaceInnerBookRsp.data:type_name -> com.yq.msg.CityMsg.PalacePlayerShowMsg
	24, // 5: com.yq.msg.CityMsg.PalacePlayerShowMsg.headInfo:type_name -> com.yq.msg.CityMsg.PlayerHeadDataMsg
	19, // 6: com.yq.msg.CityMsg.SendGiftSyncMsg.data:type_name -> com.yq.msg.CityMsg.SendGiftDataMsg
	15, // 7: com.yq.msg.CityMsg.SendGiftDataMsg.playerData:type_name -> com.yq.msg.CityMsg.PalacePlayerShowMsg
	0,  // 8: com.yq.msg.CityMsg.SendGiftDataMsg.type:type_name -> com.yq.msg.CityMsg.SendGiftType
	0,  // 9: com.yq.msg.CityMsg.GetSendGiftRewardReq.type:type_name -> com.yq.msg.CityMsg.SendGiftType
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_Palace_proto_init() }
func file_Palace_proto_init() {
	if File_Palace_proto != nil {
		return
	}
	file_WatchPlayer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Palace_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PalaceSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PalaceMiracleDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PalaceAchievementDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*EnterPalaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*EnterPalaceRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PalaceDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetTitleIdListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetTitleIdListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PalaceWorshipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PalaceWorshipRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*EnterPalaceInnerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*EnterPalaceInnerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PalaceInnerBookReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*PalaceInnerBookRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*PalacePlayerShowMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SendGiftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*SendGiftRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*SendGiftSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*SendGiftDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetSendGiftRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetSendGiftRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*PalaceAchievementGetRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Palace_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*PalaceAchievementGetRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Palace_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Palace_proto_goTypes,
		DependencyIndexes: file_Palace_proto_depIdxs,
		EnumInfos:         file_Palace_proto_enumTypes,
		MessageInfos:      file_Palace_proto_msgTypes,
	}.Build()
	File_Palace_proto = out.File
	file_Palace_proto_rawDesc = nil
	file_Palace_proto_goTypes = nil
	file_Palace_proto_depIdxs = nil
}
