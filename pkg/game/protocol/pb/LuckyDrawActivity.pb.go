// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: LuckyDrawActivity.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActivityDrawConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LuckyDrawConfig []*LuckyDrawConfig `protobuf:"bytes,1,rep,name=luckyDrawConfig" json:"luckyDrawConfig,omitempty"`
}

func (x *ActivityDrawConfig) Reset() {
	*x = ActivityDrawConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LuckyDrawActivity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityDrawConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityDrawConfig) ProtoMessage() {}

func (x *ActivityDrawConfig) ProtoReflect() protoreflect.Message {
	mi := &file_LuckyDrawActivity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityDrawConfig.ProtoReflect.Descriptor instead.
func (*ActivityDrawConfig) Descriptor() ([]byte, []int) {
	return file_LuckyDrawActivity_proto_rawDescGZIP(), []int{0}
}

func (x *ActivityDrawConfig) GetLuckyDrawConfig() []*LuckyDrawConfig {
	if x != nil {
		return x.LuckyDrawConfig
	}
	return nil
}

type LuckyDrawConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Reward       *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
	Weight       *int32  `protobuf:"varint,3,opt,name=weight" json:"weight,omitempty"`
	Limit        *int32  `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	Big          *int32  `protobuf:"varint,5,opt,name=big" json:"big,omitempty"`
	ProtectTimes *int32  `protobuf:"varint,6,opt,name=protectTimes" json:"protectTimes,omitempty"`
}

func (x *LuckyDrawConfig) Reset() {
	*x = LuckyDrawConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LuckyDrawActivity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LuckyDrawConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LuckyDrawConfig) ProtoMessage() {}

func (x *LuckyDrawConfig) ProtoReflect() protoreflect.Message {
	mi := &file_LuckyDrawActivity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LuckyDrawConfig.ProtoReflect.Descriptor instead.
func (*LuckyDrawConfig) Descriptor() ([]byte, []int) {
	return file_LuckyDrawActivity_proto_rawDescGZIP(), []int{1}
}

func (x *LuckyDrawConfig) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *LuckyDrawConfig) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *LuckyDrawConfig) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *LuckyDrawConfig) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *LuckyDrawConfig) GetBig() int32 {
	if x != nil && x.Big != nil {
		return *x.Big
	}
	return 0
}

func (x *LuckyDrawConfig) GetProtectTimes() int32 {
	if x != nil && x.ProtectTimes != nil {
		return *x.ProtectTimes
	}
	return 0
}

type LuckyDrawReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Times      *int32 `protobuf:"varint,2,req,name=times" json:"times,omitempty"`
}

func (x *LuckyDrawReq) Reset() {
	*x = LuckyDrawReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LuckyDrawActivity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LuckyDrawReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LuckyDrawReq) ProtoMessage() {}

func (x *LuckyDrawReq) ProtoReflect() protoreflect.Message {
	mi := &file_LuckyDrawActivity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LuckyDrawReq.ProtoReflect.Descriptor instead.
func (*LuckyDrawReq) Descriptor() ([]byte, []int) {
	return file_LuckyDrawActivity_proto_rawDescGZIP(), []int{2}
}

func (x *LuckyDrawReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *LuckyDrawReq) GetTimes() int32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

type LuckyDrawResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32             `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Result []*LuckyDrawResult `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
}

func (x *LuckyDrawResp) Reset() {
	*x = LuckyDrawResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LuckyDrawActivity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LuckyDrawResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LuckyDrawResp) ProtoMessage() {}

func (x *LuckyDrawResp) ProtoReflect() protoreflect.Message {
	mi := &file_LuckyDrawActivity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LuckyDrawResp.ProtoReflect.Descriptor instead.
func (*LuckyDrawResp) Descriptor() ([]byte, []int) {
	return file_LuckyDrawActivity_proto_rawDescGZIP(), []int{3}
}

func (x *LuckyDrawResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *LuckyDrawResp) GetResult() []*LuckyDrawResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type LuckyDrawResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Reward *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
}

func (x *LuckyDrawResult) Reset() {
	*x = LuckyDrawResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LuckyDrawActivity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LuckyDrawResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LuckyDrawResult) ProtoMessage() {}

func (x *LuckyDrawResult) ProtoReflect() protoreflect.Message {
	mi := &file_LuckyDrawActivity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LuckyDrawResult.ProtoReflect.Descriptor instead.
func (*LuckyDrawResult) Descriptor() ([]byte, []int) {
	return file_LuckyDrawActivity_proto_rawDescGZIP(), []int{4}
}

func (x *LuckyDrawResult) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *LuckyDrawResult) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type LuckyDrawActivityDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LimitRewardTimes []*LimitRewardTimes `protobuf:"bytes,1,rep,name=limitRewardTimes" json:"limitRewardTimes,omitempty"`
	AddUpDrawTimes   *int32              `protobuf:"varint,2,opt,name=addUpDrawTimes" json:"addUpDrawTimes,omitempty"`
	ProtectDrawTimes *int32              `protobuf:"varint,3,opt,name=protectDrawTimes" json:"protectDrawTimes,omitempty"`
}

func (x *LuckyDrawActivityDataMsg) Reset() {
	*x = LuckyDrawActivityDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LuckyDrawActivity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LuckyDrawActivityDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LuckyDrawActivityDataMsg) ProtoMessage() {}

func (x *LuckyDrawActivityDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_LuckyDrawActivity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LuckyDrawActivityDataMsg.ProtoReflect.Descriptor instead.
func (*LuckyDrawActivityDataMsg) Descriptor() ([]byte, []int) {
	return file_LuckyDrawActivity_proto_rawDescGZIP(), []int{5}
}

func (x *LuckyDrawActivityDataMsg) GetLimitRewardTimes() []*LimitRewardTimes {
	if x != nil {
		return x.LimitRewardTimes
	}
	return nil
}

func (x *LuckyDrawActivityDataMsg) GetAddUpDrawTimes() int32 {
	if x != nil && x.AddUpDrawTimes != nil {
		return *x.AddUpDrawTimes
	}
	return 0
}

func (x *LuckyDrawActivityDataMsg) GetProtectDrawTimes() int32 {
	if x != nil && x.ProtectDrawTimes != nil {
		return *x.ProtectDrawTimes
	}
	return 0
}

type LimitRewardTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Times *int32 `protobuf:"varint,2,opt,name=times" json:"times,omitempty"`
}

func (x *LimitRewardTimes) Reset() {
	*x = LimitRewardTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LuckyDrawActivity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitRewardTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitRewardTimes) ProtoMessage() {}

func (x *LimitRewardTimes) ProtoReflect() protoreflect.Message {
	mi := &file_LuckyDrawActivity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitRewardTimes.ProtoReflect.Descriptor instead.
func (*LimitRewardTimes) Descriptor() ([]byte, []int) {
	return file_LuckyDrawActivity_proto_rawDescGZIP(), []int{6}
}

func (x *LimitRewardTimes) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *LimitRewardTimes) GetTimes() int32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

var File_LuckyDrawActivity_proto protoreflect.FileDescriptor

var file_LuckyDrawActivity_proto_rawDesc = []byte{
	0x0a, 0x17, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x44, 0x72, 0x61, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x22, 0x63, 0x0a,
	0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x4d, 0x0a, 0x0f, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x44, 0x72, 0x61, 0x77,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0f, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x9d, 0x01, 0x0a, 0x0f, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x44, 0x72, 0x61, 0x77,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x62, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x62, 0x69, 0x67, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x22, 0x44, 0x0a, 0x0c, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x44, 0x72, 0x61, 0x77, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x5e, 0x0a, 0x0d, 0x4c, 0x75, 0x63, 0x6b,
	0x79, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x39, 0x0a, 0x0f, 0x4c, 0x75, 0x63, 0x6b,
	0x79, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x18, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x44, 0x72, 0x61,
	0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67,
	0x12, 0x50, 0x0a, 0x10, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x52, 0x10, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x55, 0x70, 0x44, 0x72, 0x61, 0x77, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x55,
	0x70, 0x44, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x44, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x44, 0x72, 0x61,
	0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x10, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69,
	0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_LuckyDrawActivity_proto_rawDescOnce sync.Once
	file_LuckyDrawActivity_proto_rawDescData = file_LuckyDrawActivity_proto_rawDesc
)

func file_LuckyDrawActivity_proto_rawDescGZIP() []byte {
	file_LuckyDrawActivity_proto_rawDescOnce.Do(func() {
		file_LuckyDrawActivity_proto_rawDescData = protoimpl.X.CompressGZIP(file_LuckyDrawActivity_proto_rawDescData)
	})
	return file_LuckyDrawActivity_proto_rawDescData
}

var file_LuckyDrawActivity_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_LuckyDrawActivity_proto_goTypes = []any{
	(*ActivityDrawConfig)(nil),       // 0: com.yq.msg.CityMsg.ActivityDrawConfig
	(*LuckyDrawConfig)(nil),          // 1: com.yq.msg.CityMsg.LuckyDrawConfig
	(*LuckyDrawReq)(nil),             // 2: com.yq.msg.CityMsg.LuckyDrawReq
	(*LuckyDrawResp)(nil),            // 3: com.yq.msg.CityMsg.LuckyDrawResp
	(*LuckyDrawResult)(nil),          // 4: com.yq.msg.CityMsg.LuckyDrawResult
	(*LuckyDrawActivityDataMsg)(nil), // 5: com.yq.msg.CityMsg.LuckyDrawActivityDataMsg
	(*LimitRewardTimes)(nil),         // 6: com.yq.msg.CityMsg.LimitRewardTimes
}
var file_LuckyDrawActivity_proto_depIdxs = []int32{
	1, // 0: com.yq.msg.CityMsg.ActivityDrawConfig.luckyDrawConfig:type_name -> com.yq.msg.CityMsg.LuckyDrawConfig
	4, // 1: com.yq.msg.CityMsg.LuckyDrawResp.result:type_name -> com.yq.msg.CityMsg.LuckyDrawResult
	6, // 2: com.yq.msg.CityMsg.LuckyDrawActivityDataMsg.limitRewardTimes:type_name -> com.yq.msg.CityMsg.LimitRewardTimes
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_LuckyDrawActivity_proto_init() }
func file_LuckyDrawActivity_proto_init() {
	if File_LuckyDrawActivity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_LuckyDrawActivity_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityDrawConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LuckyDrawActivity_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*LuckyDrawConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LuckyDrawActivity_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*LuckyDrawReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LuckyDrawActivity_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*LuckyDrawResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LuckyDrawActivity_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*LuckyDrawResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LuckyDrawActivity_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*LuckyDrawActivityDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LuckyDrawActivity_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*LimitRewardTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_LuckyDrawActivity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_LuckyDrawActivity_proto_goTypes,
		DependencyIndexes: file_LuckyDrawActivity_proto_depIdxs,
		MessageInfos:      file_LuckyDrawActivity_proto_msgTypes,
	}.Build()
	File_LuckyDrawActivity_proto = out.File
	file_LuckyDrawActivity_proto_rawDesc = nil
	file_LuckyDrawActivity_proto_goTypes = nil
	file_LuckyDrawActivity_proto_depIdxs = nil
}
