// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: MeiTuanSubscribe.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MeiTuanSubscribePb int32

const (
	MeiTuanSubscribePb_S_MEI_TUAN_SUBSCRIBE_SYNC    MeiTuanSubscribePb = 216700
	MeiTuanSubscribePb_S_MEI_TUAN_SUBSCRIBE_SUCCEED MeiTuanSubscribePb = 216701
	MeiTuanSubscribePb_S_MEI_TUAN_SUBSCRIBE_REWARD  MeiTuanSubscribePb = 216702
)

// Enum value maps for MeiTuanSubscribePb.
var (
	MeiTuanSubscribePb_name = map[int32]string{
		216700: "S_MEI_TUAN_SUBSCRIBE_SYNC",
		216701: "S_MEI_TUAN_SUBSCRIBE_SUCCEED",
		216702: "S_MEI_TUAN_SUBSCRIBE_REWARD",
	}
	MeiTuanSubscribePb_value = map[string]int32{
		"S_MEI_TUAN_SUBSCRIBE_SYNC":    216700,
		"S_MEI_TUAN_SUBSCRIBE_SUCCEED": 216701,
		"S_MEI_TUAN_SUBSCRIBE_REWARD":  216702,
	}
)

func (x MeiTuanSubscribePb) Enum() *MeiTuanSubscribePb {
	p := new(MeiTuanSubscribePb)
	*p = x
	return p
}

func (x MeiTuanSubscribePb) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MeiTuanSubscribePb) Descriptor() protoreflect.EnumDescriptor {
	return file_MeiTuanSubscribe_proto_enumTypes[0].Descriptor()
}

func (MeiTuanSubscribePb) Type() protoreflect.EnumType {
	return &file_MeiTuanSubscribe_proto_enumTypes[0]
}

func (x MeiTuanSubscribePb) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MeiTuanSubscribePb) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MeiTuanSubscribePb(num)
	return nil
}

// Deprecated: Use MeiTuanSubscribePb.Descriptor instead.
func (MeiTuanSubscribePb) EnumDescriptor() ([]byte, []int) {
	return file_MeiTuanSubscribe_proto_rawDescGZIP(), []int{0}
}

type SyncMeiTuanSubscribeMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeiTuanSubscribeDataMsg *MeiTuanSubscribeDataMsg `protobuf:"bytes,1,req,name=meiTuanSubscribeDataMsg" json:"meiTuanSubscribeDataMsg,omitempty"`
}

func (x *SyncMeiTuanSubscribeMsg) Reset() {
	*x = SyncMeiTuanSubscribeMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MeiTuanSubscribe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMeiTuanSubscribeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMeiTuanSubscribeMsg) ProtoMessage() {}

func (x *SyncMeiTuanSubscribeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_MeiTuanSubscribe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMeiTuanSubscribeMsg.ProtoReflect.Descriptor instead.
func (*SyncMeiTuanSubscribeMsg) Descriptor() ([]byte, []int) {
	return file_MeiTuanSubscribe_proto_rawDescGZIP(), []int{0}
}

func (x *SyncMeiTuanSubscribeMsg) GetMeiTuanSubscribeDataMsg() *MeiTuanSubscribeDataMsg {
	if x != nil {
		return x.MeiTuanSubscribeDataMsg
	}
	return nil
}

type MeiTuanSubscribeSucceedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MeiTuanSubscribeSucceedReq) Reset() {
	*x = MeiTuanSubscribeSucceedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MeiTuanSubscribe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeiTuanSubscribeSucceedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeiTuanSubscribeSucceedReq) ProtoMessage() {}

func (x *MeiTuanSubscribeSucceedReq) ProtoReflect() protoreflect.Message {
	mi := &file_MeiTuanSubscribe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeiTuanSubscribeSucceedReq.ProtoReflect.Descriptor instead.
func (*MeiTuanSubscribeSucceedReq) Descriptor() ([]byte, []int) {
	return file_MeiTuanSubscribe_proto_rawDescGZIP(), []int{1}
}

type MeiTuanSubscribeSucceedResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                     *int32                   `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	MeiTuanSubscribeDataMsg *MeiTuanSubscribeDataMsg `protobuf:"bytes,2,opt,name=meiTuanSubscribeDataMsg" json:"meiTuanSubscribeDataMsg,omitempty"`
}

func (x *MeiTuanSubscribeSucceedResp) Reset() {
	*x = MeiTuanSubscribeSucceedResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MeiTuanSubscribe_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeiTuanSubscribeSucceedResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeiTuanSubscribeSucceedResp) ProtoMessage() {}

func (x *MeiTuanSubscribeSucceedResp) ProtoReflect() protoreflect.Message {
	mi := &file_MeiTuanSubscribe_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeiTuanSubscribeSucceedResp.ProtoReflect.Descriptor instead.
func (*MeiTuanSubscribeSucceedResp) Descriptor() ([]byte, []int) {
	return file_MeiTuanSubscribe_proto_rawDescGZIP(), []int{2}
}

func (x *MeiTuanSubscribeSucceedResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *MeiTuanSubscribeSucceedResp) GetMeiTuanSubscribeDataMsg() *MeiTuanSubscribeDataMsg {
	if x != nil {
		return x.MeiTuanSubscribeDataMsg
	}
	return nil
}

type MeiTuanSubscribeRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MeiTuanSubscribeRewardReq) Reset() {
	*x = MeiTuanSubscribeRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MeiTuanSubscribe_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeiTuanSubscribeRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeiTuanSubscribeRewardReq) ProtoMessage() {}

func (x *MeiTuanSubscribeRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_MeiTuanSubscribe_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeiTuanSubscribeRewardReq.ProtoReflect.Descriptor instead.
func (*MeiTuanSubscribeRewardReq) Descriptor() ([]byte, []int) {
	return file_MeiTuanSubscribe_proto_rawDescGZIP(), []int{3}
}

type MeiTuanSubscribeRewardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                     *int32                   `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	MeiTuanSubscribeDataMsg *MeiTuanSubscribeDataMsg `protobuf:"bytes,2,opt,name=meiTuanSubscribeDataMsg" json:"meiTuanSubscribeDataMsg,omitempty"`
	Reward                  *string                  `protobuf:"bytes,3,opt,name=reward" json:"reward,omitempty"`
}

func (x *MeiTuanSubscribeRewardResp) Reset() {
	*x = MeiTuanSubscribeRewardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MeiTuanSubscribe_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeiTuanSubscribeRewardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeiTuanSubscribeRewardResp) ProtoMessage() {}

func (x *MeiTuanSubscribeRewardResp) ProtoReflect() protoreflect.Message {
	mi := &file_MeiTuanSubscribe_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeiTuanSubscribeRewardResp.ProtoReflect.Descriptor instead.
func (*MeiTuanSubscribeRewardResp) Descriptor() ([]byte, []int) {
	return file_MeiTuanSubscribe_proto_rawDescGZIP(), []int{4}
}

func (x *MeiTuanSubscribeRewardResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *MeiTuanSubscribeRewardResp) GetMeiTuanSubscribeDataMsg() *MeiTuanSubscribeDataMsg {
	if x != nil {
		return x.MeiTuanSubscribeDataMsg
	}
	return nil
}

func (x *MeiTuanSubscribeRewardResp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type MeiTuanSubscribeDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscribeTime *int64 `protobuf:"varint,1,req,name=subscribeTime" json:"subscribeTime,omitempty"`
	RewardTime    *int64 `protobuf:"varint,2,req,name=rewardTime" json:"rewardTime,omitempty"`
}

func (x *MeiTuanSubscribeDataMsg) Reset() {
	*x = MeiTuanSubscribeDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MeiTuanSubscribe_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeiTuanSubscribeDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeiTuanSubscribeDataMsg) ProtoMessage() {}

func (x *MeiTuanSubscribeDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_MeiTuanSubscribe_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeiTuanSubscribeDataMsg.ProtoReflect.Descriptor instead.
func (*MeiTuanSubscribeDataMsg) Descriptor() ([]byte, []int) {
	return file_MeiTuanSubscribe_proto_rawDescGZIP(), []int{5}
}

func (x *MeiTuanSubscribeDataMsg) GetSubscribeTime() int64 {
	if x != nil && x.SubscribeTime != nil {
		return *x.SubscribeTime
	}
	return 0
}

func (x *MeiTuanSubscribeDataMsg) GetRewardTime() int64 {
	if x != nil && x.RewardTime != nil {
		return *x.RewardTime
	}
	return 0
}

var File_MeiTuanSubscribe_proto protoreflect.FileDescriptor

var file_MeiTuanSubscribe_proto_rawDesc = []byte{
	0x0a, 0x16, 0x4d, 0x65, 0x69, 0x54, 0x75, 0x61, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x22, 0x80, 0x01, 0x0a,
	0x17, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x69, 0x54, 0x75, 0x61, 0x6e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x65, 0x0a, 0x17, 0x6d, 0x65, 0x69, 0x54,
	0x75, 0x61, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d,
	0x65, 0x69, 0x54, 0x75, 0x61, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x17, 0x6d, 0x65, 0x69, 0x54, 0x75, 0x61, 0x6e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x22,
	0x1c, 0x0a, 0x1a, 0x4d, 0x65, 0x69, 0x54, 0x75, 0x61, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x22, 0x96, 0x01,
	0x0a, 0x1b, 0x4d, 0x65, 0x69, 0x54, 0x75, 0x61, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12,
	0x65, 0x0a, 0x17, 0x6d, 0x65, 0x69, 0x54, 0x75, 0x61, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x69, 0x54, 0x75, 0x61, 0x6e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x17, 0x6d,
	0x65, 0x69, 0x54, 0x75, 0x61, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x22, 0x1b, 0x0a, 0x19, 0x4d, 0x65, 0x69, 0x54, 0x75, 0x61,
	0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x22, 0xad, 0x01, 0x0a, 0x1a, 0x4d, 0x65, 0x69, 0x54, 0x75, 0x61, 0x6e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x65, 0x0a, 0x17, 0x6d, 0x65, 0x69, 0x54, 0x75, 0x61, 0x6e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x69, 0x54, 0x75,
	0x61, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x73, 0x67, 0x52, 0x17, 0x6d, 0x65, 0x69, 0x54, 0x75, 0x61, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x22, 0x5f, 0x0a, 0x17, 0x4d, 0x65, 0x69, 0x54, 0x75, 0x61, 0x6e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x2a, 0x7c, 0x0a, 0x12, 0x4d, 0x65, 0x69, 0x54, 0x75, 0x61, 0x6e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x62, 0x12, 0x1f, 0x0a, 0x19, 0x53, 0x5f,
	0x4d, 0x45, 0x49, 0x5f, 0x54, 0x55, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49,
	0x42, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0xfc, 0x9c, 0x0d, 0x12, 0x22, 0x0a, 0x1c, 0x53,
	0x5f, 0x4d, 0x45, 0x49, 0x5f, 0x54, 0x55, 0x41, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52,
	0x49, 0x42, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x10, 0xfd, 0x9c, 0x0d, 0x12,
	0x21, 0x0a, 0x1b, 0x53, 0x5f, 0x4d, 0x45, 0x49, 0x5f, 0x54, 0x55, 0x41, 0x4e, 0x5f, 0x53, 0x55,
	0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x5f, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x10, 0xfe,
	0x9c, 0x0d, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x69, 0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d,
	0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_MeiTuanSubscribe_proto_rawDescOnce sync.Once
	file_MeiTuanSubscribe_proto_rawDescData = file_MeiTuanSubscribe_proto_rawDesc
)

func file_MeiTuanSubscribe_proto_rawDescGZIP() []byte {
	file_MeiTuanSubscribe_proto_rawDescOnce.Do(func() {
		file_MeiTuanSubscribe_proto_rawDescData = protoimpl.X.CompressGZIP(file_MeiTuanSubscribe_proto_rawDescData)
	})
	return file_MeiTuanSubscribe_proto_rawDescData
}

var file_MeiTuanSubscribe_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_MeiTuanSubscribe_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_MeiTuanSubscribe_proto_goTypes = []any{
	(MeiTuanSubscribePb)(0),             // 0: com.yq.msg.CityMsg.MeiTuanSubscribePb
	(*SyncMeiTuanSubscribeMsg)(nil),     // 1: com.yq.msg.CityMsg.SyncMeiTuanSubscribeMsg
	(*MeiTuanSubscribeSucceedReq)(nil),  // 2: com.yq.msg.CityMsg.MeiTuanSubscribeSucceedReq
	(*MeiTuanSubscribeSucceedResp)(nil), // 3: com.yq.msg.CityMsg.MeiTuanSubscribeSucceedResp
	(*MeiTuanSubscribeRewardReq)(nil),   // 4: com.yq.msg.CityMsg.MeiTuanSubscribeRewardReq
	(*MeiTuanSubscribeRewardResp)(nil),  // 5: com.yq.msg.CityMsg.MeiTuanSubscribeRewardResp
	(*MeiTuanSubscribeDataMsg)(nil),     // 6: com.yq.msg.CityMsg.MeiTuanSubscribeDataMsg
}
var file_MeiTuanSubscribe_proto_depIdxs = []int32{
	6, // 0: com.yq.msg.CityMsg.SyncMeiTuanSubscribeMsg.meiTuanSubscribeDataMsg:type_name -> com.yq.msg.CityMsg.MeiTuanSubscribeDataMsg
	6, // 1: com.yq.msg.CityMsg.MeiTuanSubscribeSucceedResp.meiTuanSubscribeDataMsg:type_name -> com.yq.msg.CityMsg.MeiTuanSubscribeDataMsg
	6, // 2: com.yq.msg.CityMsg.MeiTuanSubscribeRewardResp.meiTuanSubscribeDataMsg:type_name -> com.yq.msg.CityMsg.MeiTuanSubscribeDataMsg
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_MeiTuanSubscribe_proto_init() }
func file_MeiTuanSubscribe_proto_init() {
	if File_MeiTuanSubscribe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_MeiTuanSubscribe_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SyncMeiTuanSubscribeMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MeiTuanSubscribe_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MeiTuanSubscribeSucceedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MeiTuanSubscribe_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MeiTuanSubscribeSucceedResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MeiTuanSubscribe_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*MeiTuanSubscribeRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MeiTuanSubscribe_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*MeiTuanSubscribeRewardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MeiTuanSubscribe_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*MeiTuanSubscribeDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_MeiTuanSubscribe_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_MeiTuanSubscribe_proto_goTypes,
		DependencyIndexes: file_MeiTuanSubscribe_proto_depIdxs,
		EnumInfos:         file_MeiTuanSubscribe_proto_enumTypes,
		MessageInfos:      file_MeiTuanSubscribe_proto_msgTypes,
	}.Build()
	File_MeiTuanSubscribe_proto = out.File
	file_MeiTuanSubscribe_proto_rawDesc = nil
	file_MeiTuanSubscribe_proto_goTypes = nil
	file_MeiTuanSubscribe_proto_depIdxs = nil
}
