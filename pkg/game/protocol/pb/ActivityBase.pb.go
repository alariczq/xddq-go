// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: ActivityBase.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActivityMainConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId    *int32  `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	Type          *int32  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	ChildType     *int32  `protobuf:"varint,3,opt,name=childType" json:"childType,omitempty"`
	BeginShowTime *int64  `protobuf:"varint,4,opt,name=beginShowTime" json:"beginShowTime,omitempty"`
	EndShowTime   *int64  `protobuf:"varint,5,opt,name=endShowTime" json:"endShowTime,omitempty"`
	BeginTime     *int64  `protobuf:"varint,6,opt,name=beginTime" json:"beginTime,omitempty"`
	EndTime       *int64  `protobuf:"varint,7,opt,name=endTime" json:"endTime,omitempty"`
	ServerId      []int64 `protobuf:"varint,8,rep,name=serverId" json:"serverId,omitempty"`
	GroupType     *int32  `protobuf:"varint,9,opt,name=groupType" json:"groupType,omitempty"`
}

func (x *ActivityMainConfig) Reset() {
	*x = ActivityMainConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityMainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityMainConfig) ProtoMessage() {}

func (x *ActivityMainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityMainConfig.ProtoReflect.Descriptor instead.
func (*ActivityMainConfig) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{0}
}

func (x *ActivityMainConfig) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActivityMainConfig) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ActivityMainConfig) GetChildType() int32 {
	if x != nil && x.ChildType != nil {
		return *x.ChildType
	}
	return 0
}

func (x *ActivityMainConfig) GetBeginShowTime() int64 {
	if x != nil && x.BeginShowTime != nil {
		return *x.BeginShowTime
	}
	return 0
}

func (x *ActivityMainConfig) GetEndShowTime() int64 {
	if x != nil && x.EndShowTime != nil {
		return *x.EndShowTime
	}
	return 0
}

func (x *ActivityMainConfig) GetBeginTime() int64 {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return 0
}

func (x *ActivityMainConfig) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *ActivityMainConfig) GetServerId() []int64 {
	if x != nil {
		return x.ServerId
	}
	return nil
}

func (x *ActivityMainConfig) GetGroupType() int32 {
	if x != nil && x.GroupType != nil {
		return *x.GroupType
	}
	return 0
}

type ActivityConditionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId    *int32   `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	ConditionId   *int32   `protobuf:"varint,2,opt,name=conditionId" json:"conditionId,omitempty"`
	Title         *string  `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Desc          *string  `protobuf:"bytes,4,opt,name=desc" json:"desc,omitempty"`
	Type          *int32   `protobuf:"varint,5,opt,name=type" json:"type,omitempty"`
	Rewards       *string  `protobuf:"bytes,6,opt,name=rewards" json:"rewards,omitempty"`
	MasterRewards *string  `protobuf:"bytes,7,opt,name=masterRewards" json:"masterRewards,omitempty"`
	Param         []string `protobuf:"bytes,8,rep,name=param" json:"param,omitempty"`
	ExtendParam   *string  `protobuf:"bytes,9,opt,name=extendParam" json:"extendParam,omitempty"`
	JumpId        *string  `protobuf:"bytes,10,opt,name=jumpId" json:"jumpId,omitempty"`
	Refresh       *int32   `protobuf:"varint,11,opt,name=refresh" json:"refresh,omitempty"`
}

func (x *ActivityConditionConfig) Reset() {
	*x = ActivityConditionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityConditionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityConditionConfig) ProtoMessage() {}

func (x *ActivityConditionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityConditionConfig.ProtoReflect.Descriptor instead.
func (*ActivityConditionConfig) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{1}
}

func (x *ActivityConditionConfig) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActivityConditionConfig) GetConditionId() int32 {
	if x != nil && x.ConditionId != nil {
		return *x.ConditionId
	}
	return 0
}

func (x *ActivityConditionConfig) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *ActivityConditionConfig) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *ActivityConditionConfig) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ActivityConditionConfig) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

func (x *ActivityConditionConfig) GetMasterRewards() string {
	if x != nil && x.MasterRewards != nil {
		return *x.MasterRewards
	}
	return ""
}

func (x *ActivityConditionConfig) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *ActivityConditionConfig) GetExtendParam() string {
	if x != nil && x.ExtendParam != nil {
		return *x.ExtendParam
	}
	return ""
}

func (x *ActivityConditionConfig) GetJumpId() string {
	if x != nil && x.JumpId != nil {
		return *x.JumpId
	}
	return ""
}

func (x *ActivityConditionConfig) GetRefresh() int32 {
	if x != nil && x.Refresh != nil {
		return *x.Refresh
	}
	return 0
}

type ActivityMallConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId    *int32       `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	MallTempMsg   *MallTempMsg `protobuf:"bytes,2,opt,name=mallTempMsg" json:"mallTempMsg,omitempty"`
	BuyUnlockType *int32       `protobuf:"varint,3,opt,name=buyUnlockType" json:"buyUnlockType,omitempty"`
	BuyUnlock     *int32       `protobuf:"varint,4,opt,name=buyUnlock" json:"buyUnlock,omitempty"`
	FundParam     *string      `protobuf:"bytes,5,opt,name=fundParam" json:"fundParam,omitempty"`
}

func (x *ActivityMallConfig) Reset() {
	*x = ActivityMallConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityMallConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityMallConfig) ProtoMessage() {}

func (x *ActivityMallConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityMallConfig.ProtoReflect.Descriptor instead.
func (*ActivityMallConfig) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{2}
}

func (x *ActivityMallConfig) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActivityMallConfig) GetMallTempMsg() *MallTempMsg {
	if x != nil {
		return x.MallTempMsg
	}
	return nil
}

func (x *ActivityMallConfig) GetBuyUnlockType() int32 {
	if x != nil && x.BuyUnlockType != nil {
		return *x.BuyUnlockType
	}
	return 0
}

func (x *ActivityMallConfig) GetBuyUnlock() int32 {
	if x != nil && x.BuyUnlock != nil {
		return *x.BuyUnlock
	}
	return 0
}

func (x *ActivityMallConfig) GetFundParam() string {
	if x != nil && x.FundParam != nil {
		return *x.FundParam
	}
	return ""
}

type ActivityRankConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId    *int32  `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	Id            *int32  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Title         *string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Desc          *string `protobuf:"bytes,4,opt,name=desc" json:"desc,omitempty"`
	Type          *int32  `protobuf:"varint,5,opt,name=type" json:"type,omitempty"`
	Rewards       *string `protobuf:"bytes,6,opt,name=rewards" json:"rewards,omitempty"`
	MasterRewards *string `protobuf:"bytes,7,opt,name=masterRewards" json:"masterRewards,omitempty"`
	Params        *string `protobuf:"bytes,8,opt,name=params" json:"params,omitempty"`
}

func (x *ActivityRankConfig) Reset() {
	*x = ActivityRankConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityRankConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityRankConfig) ProtoMessage() {}

func (x *ActivityRankConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityRankConfig.ProtoReflect.Descriptor instead.
func (*ActivityRankConfig) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{3}
}

func (x *ActivityRankConfig) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActivityRankConfig) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ActivityRankConfig) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *ActivityRankConfig) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *ActivityRankConfig) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ActivityRankConfig) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

func (x *ActivityRankConfig) GetMasterRewards() string {
	if x != nil && x.MasterRewards != nil {
		return *x.MasterRewards
	}
	return ""
}

func (x *ActivityRankConfig) GetParams() string {
	if x != nil && x.Params != nil {
		return *x.Params
	}
	return ""
}

type ActivityParamConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32  `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	Param      *string `protobuf:"bytes,2,opt,name=param" json:"param,omitempty"`
	Value      *string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (x *ActivityParamConfig) Reset() {
	*x = ActivityParamConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityParamConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityParamConfig) ProtoMessage() {}

func (x *ActivityParamConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityParamConfig.ProtoReflect.Descriptor instead.
func (*ActivityParamConfig) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{4}
}

func (x *ActivityParamConfig) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActivityParamConfig) GetParam() string {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return ""
}

func (x *ActivityParamConfig) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type ActivityCommonConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainConfig      *ActivityMainConfig        `protobuf:"bytes,1,opt,name=mainConfig" json:"mainConfig,omitempty"`
	ConditionConfig []*ActivityConditionConfig `protobuf:"bytes,2,rep,name=conditionConfig" json:"conditionConfig,omitempty"`
	MallConfig      []*ActivityMallConfig      `protobuf:"bytes,3,rep,name=mallConfig" json:"mallConfig,omitempty"`
	ParamConfig     []*ActivityParamConfig     `protobuf:"bytes,4,rep,name=paramConfig" json:"paramConfig,omitempty"`
	RankConfig      []*ActivityRankConfig      `protobuf:"bytes,5,rep,name=rankConfig" json:"rankConfig,omitempty"`
}

func (x *ActivityCommonConfig) Reset() {
	*x = ActivityCommonConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityCommonConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityCommonConfig) ProtoMessage() {}

func (x *ActivityCommonConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityCommonConfig.ProtoReflect.Descriptor instead.
func (*ActivityCommonConfig) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{5}
}

func (x *ActivityCommonConfig) GetMainConfig() *ActivityMainConfig {
	if x != nil {
		return x.MainConfig
	}
	return nil
}

func (x *ActivityCommonConfig) GetConditionConfig() []*ActivityConditionConfig {
	if x != nil {
		return x.ConditionConfig
	}
	return nil
}

func (x *ActivityCommonConfig) GetMallConfig() []*ActivityMallConfig {
	if x != nil {
		return x.MallConfig
	}
	return nil
}

func (x *ActivityCommonConfig) GetParamConfig() []*ActivityParamConfig {
	if x != nil {
		return x.ParamConfig
	}
	return nil
}

func (x *ActivityCommonConfig) GetRankConfig() []*ActivityRankConfig {
	if x != nil {
		return x.RankConfig
	}
	return nil
}

type PushActivityList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainConfig   []*ActivityMainConfig   `protobuf:"bytes,1,rep,name=mainConfig" json:"mainConfig,omitempty"`
	PosterConfig []*ActivityPosterConfig `protobuf:"bytes,2,rep,name=posterConfig" json:"posterConfig,omitempty"`
	ParamConfig  []*ActivityParamConfig  `protobuf:"bytes,3,rep,name=paramConfig" json:"paramConfig,omitempty"`
}

func (x *PushActivityList) Reset() {
	*x = PushActivityList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushActivityList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushActivityList) ProtoMessage() {}

func (x *PushActivityList) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushActivityList.ProtoReflect.Descriptor instead.
func (*PushActivityList) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{6}
}

func (x *PushActivityList) GetMainConfig() []*ActivityMainConfig {
	if x != nil {
		return x.MainConfig
	}
	return nil
}

func (x *PushActivityList) GetPosterConfig() []*ActivityPosterConfig {
	if x != nil {
		return x.PosterConfig
	}
	return nil
}

func (x *PushActivityList) GetParamConfig() []*ActivityParamConfig {
	if x != nil {
		return x.ParamConfig
	}
	return nil
}

type ActivityScoreDataMsgSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityScoreData []*ActivityScoreDataList `protobuf:"bytes,1,rep,name=activityScoreData" json:"activityScoreData,omitempty"`
}

func (x *ActivityScoreDataMsgSync) Reset() {
	*x = ActivityScoreDataMsgSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityScoreDataMsgSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityScoreDataMsgSync) ProtoMessage() {}

func (x *ActivityScoreDataMsgSync) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityScoreDataMsgSync.ProtoReflect.Descriptor instead.
func (*ActivityScoreDataMsgSync) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{7}
}

func (x *ActivityScoreDataMsgSync) GetActivityScoreData() []*ActivityScoreDataList {
	if x != nil {
		return x.ActivityScoreData
	}
	return nil
}

type ActivityScoreDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId           *int32                  `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	ActivityScoreDataMsg []*ActivityScoreDataMsg `protobuf:"bytes,2,rep,name=activityScoreDataMsg" json:"activityScoreDataMsg,omitempty"`
}

func (x *ActivityScoreDataList) Reset() {
	*x = ActivityScoreDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityScoreDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityScoreDataList) ProtoMessage() {}

func (x *ActivityScoreDataList) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityScoreDataList.ProtoReflect.Descriptor instead.
func (*ActivityScoreDataList) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{8}
}

func (x *ActivityScoreDataList) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActivityScoreDataList) GetActivityScoreDataMsg() []*ActivityScoreDataMsg {
	if x != nil {
		return x.ActivityScoreDataMsg
	}
	return nil
}

type ActivityDetailConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonConfig *ActivityCommonConfig `protobuf:"bytes,1,opt,name=commonConfig" json:"commonConfig,omitempty"`
	UniqueConfig []byte                `protobuf:"bytes,2,opt,name=uniqueConfig" json:"uniqueConfig,omitempty"`
}

func (x *ActivityDetailConfig) Reset() {
	*x = ActivityDetailConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityDetailConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityDetailConfig) ProtoMessage() {}

func (x *ActivityDetailConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityDetailConfig.ProtoReflect.Descriptor instead.
func (*ActivityDetailConfig) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{9}
}

func (x *ActivityDetailConfig) GetCommonConfig() *ActivityCommonConfig {
	if x != nil {
		return x.CommonConfig
	}
	return nil
}

func (x *ActivityDetailConfig) GetUniqueConfig() []byte {
	if x != nil {
		return x.UniqueConfig
	}
	return nil
}

type ActivityConditionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionId        *int32                 `protobuf:"varint,1,opt,name=conditionId" json:"conditionId,omitempty"`
	Value              *string                `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	IsGetReward        *bool                  `protobuf:"varint,3,opt,name=isGetReward" json:"isGetReward,omitempty"`
	IsGetMasterRewards *bool                  `protobuf:"varint,4,opt,name=isGetMasterRewards" json:"isGetMasterRewards,omitempty"`
	MultiReward        []*ActivityMultiReward `protobuf:"bytes,5,rep,name=multiReward" json:"multiReward,omitempty"`
	Infinites          *int32                 `protobuf:"varint,6,opt,name=infinites" json:"infinites,omitempty"`
	TriggerDropTimes   *int32                 `protobuf:"varint,7,opt,name=triggerDropTimes" json:"triggerDropTimes,omitempty"`
	CompleteTime       *int64                 `protobuf:"varint,8,opt,name=completeTime" json:"completeTime,omitempty"`
}

func (x *ActivityConditionData) Reset() {
	*x = ActivityConditionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityConditionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityConditionData) ProtoMessage() {}

func (x *ActivityConditionData) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityConditionData.ProtoReflect.Descriptor instead.
func (*ActivityConditionData) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{10}
}

func (x *ActivityConditionData) GetConditionId() int32 {
	if x != nil && x.ConditionId != nil {
		return *x.ConditionId
	}
	return 0
}

func (x *ActivityConditionData) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *ActivityConditionData) GetIsGetReward() bool {
	if x != nil && x.IsGetReward != nil {
		return *x.IsGetReward
	}
	return false
}

func (x *ActivityConditionData) GetIsGetMasterRewards() bool {
	if x != nil && x.IsGetMasterRewards != nil {
		return *x.IsGetMasterRewards
	}
	return false
}

func (x *ActivityConditionData) GetMultiReward() []*ActivityMultiReward {
	if x != nil {
		return x.MultiReward
	}
	return nil
}

func (x *ActivityConditionData) GetInfinites() int32 {
	if x != nil && x.Infinites != nil {
		return *x.Infinites
	}
	return 0
}

func (x *ActivityConditionData) GetTriggerDropTimes() int32 {
	if x != nil && x.TriggerDropTimes != nil {
		return *x.TriggerDropTimes
	}
	return 0
}

func (x *ActivityConditionData) GetCompleteTime() int64 {
	if x != nil && x.CompleteTime != nil {
		return *x.CompleteTime
	}
	return 0
}

type ActivityMultiReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index       *int32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	IsGetReward *bool  `protobuf:"varint,2,opt,name=isGetReward" json:"isGetReward,omitempty"`
}

func (x *ActivityMultiReward) Reset() {
	*x = ActivityMultiReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityMultiReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityMultiReward) ProtoMessage() {}

func (x *ActivityMultiReward) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityMultiReward.ProtoReflect.Descriptor instead.
func (*ActivityMultiReward) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{11}
}

func (x *ActivityMultiReward) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *ActivityMultiReward) GetIsGetReward() bool {
	if x != nil && x.IsGetReward != nil {
		return *x.IsGetReward
	}
	return false
}

type ActivityMallBuyCountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MallId *int32 `protobuf:"varint,1,opt,name=mallId" json:"mallId,omitempty"`
	Count  *int64 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (x *ActivityMallBuyCountData) Reset() {
	*x = ActivityMallBuyCountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityMallBuyCountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityMallBuyCountData) ProtoMessage() {}

func (x *ActivityMallBuyCountData) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityMallBuyCountData.ProtoReflect.Descriptor instead.
func (*ActivityMallBuyCountData) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{12}
}

func (x *ActivityMallBuyCountData) GetMallId() int32 {
	if x != nil && x.MallId != nil {
		return *x.MallId
	}
	return 0
}

func (x *ActivityMallBuyCountData) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type ReqGetActivityDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
}

func (x *ReqGetActivityDetail) Reset() {
	*x = ReqGetActivityDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetActivityDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetActivityDetail) ProtoMessage() {}

func (x *ReqGetActivityDetail) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetActivityDetail.ProtoReflect.Descriptor instead.
func (*ReqGetActivityDetail) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{13}
}

func (x *ReqGetActivityDetail) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type RspGetActivityDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32              `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Activity *ActivityCommonData `protobuf:"bytes,2,opt,name=activity" json:"activity,omitempty"`
}

func (x *RspGetActivityDetail) Reset() {
	*x = RspGetActivityDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGetActivityDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGetActivityDetail) ProtoMessage() {}

func (x *RspGetActivityDetail) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGetActivityDetail.ProtoReflect.Descriptor instead.
func (*RspGetActivityDetail) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{14}
}

func (x *RspGetActivityDetail) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RspGetActivityDetail) GetActivity() *ActivityCommonData {
	if x != nil {
		return x.Activity
	}
	return nil
}

type ActivityCommonData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId                *int32                      `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	ConditionDataList         []*ActivityConditionData    `protobuf:"bytes,2,rep,name=conditionDataList" json:"conditionDataList,omitempty"`
	MallBuyCountList          []*ActivityMallBuyCountData `protobuf:"bytes,3,rep,name=mallBuyCountList" json:"mallBuyCountList,omitempty"`
	DetailConfig              *ActivityDetailConfig       `protobuf:"bytes,4,opt,name=detailConfig" json:"detailConfig,omitempty"`
	PlayerData                []byte                      `protobuf:"bytes,5,opt,name=playerData" json:"playerData,omitempty"`
	ActivityScoreDataMsg      []*ActivityScoreDataMsg     `protobuf:"bytes,6,rep,name=activityScoreDataMsg" json:"activityScoreDataMsg,omitempty"`
	UnionNameServerIdDataList []*UnionNameServerIdData    `protobuf:"bytes,7,rep,name=unionNameServerIdDataList" json:"unionNameServerIdDataList,omitempty"`
	UnionLockTime             *int64                      `protobuf:"varint,8,opt,name=unionLockTime" json:"unionLockTime,omitempty"`
}

func (x *ActivityCommonData) Reset() {
	*x = ActivityCommonData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityCommonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityCommonData) ProtoMessage() {}

func (x *ActivityCommonData) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityCommonData.ProtoReflect.Descriptor instead.
func (*ActivityCommonData) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{15}
}

func (x *ActivityCommonData) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActivityCommonData) GetConditionDataList() []*ActivityConditionData {
	if x != nil {
		return x.ConditionDataList
	}
	return nil
}

func (x *ActivityCommonData) GetMallBuyCountList() []*ActivityMallBuyCountData {
	if x != nil {
		return x.MallBuyCountList
	}
	return nil
}

func (x *ActivityCommonData) GetDetailConfig() *ActivityDetailConfig {
	if x != nil {
		return x.DetailConfig
	}
	return nil
}

func (x *ActivityCommonData) GetPlayerData() []byte {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

func (x *ActivityCommonData) GetActivityScoreDataMsg() []*ActivityScoreDataMsg {
	if x != nil {
		return x.ActivityScoreDataMsg
	}
	return nil
}

func (x *ActivityCommonData) GetUnionNameServerIdDataList() []*UnionNameServerIdData {
	if x != nil {
		return x.UnionNameServerIdDataList
	}
	return nil
}

func (x *ActivityCommonData) GetUnionLockTime() int64 {
	if x != nil && x.UnionLockTime != nil {
		return *x.UnionLockTime
	}
	return 0
}

type ActivityScoreDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScorePropId *int32 `protobuf:"varint,1,opt,name=scorePropId" json:"scorePropId,omitempty"`
	TodayCount  *int64 `protobuf:"varint,2,opt,name=todayCount" json:"todayCount,omitempty"`
	TotalCount  *int64 `protobuf:"varint,3,opt,name=totalCount" json:"totalCount,omitempty"`
}

func (x *ActivityScoreDataMsg) Reset() {
	*x = ActivityScoreDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityScoreDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityScoreDataMsg) ProtoMessage() {}

func (x *ActivityScoreDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityScoreDataMsg.ProtoReflect.Descriptor instead.
func (*ActivityScoreDataMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{16}
}

func (x *ActivityScoreDataMsg) GetScorePropId() int32 {
	if x != nil && x.ScorePropId != nil {
		return *x.ScorePropId
	}
	return 0
}

func (x *ActivityScoreDataMsg) GetTodayCount() int64 {
	if x != nil && x.TodayCount != nil {
		return *x.TodayCount
	}
	return 0
}

func (x *ActivityScoreDataMsg) GetTotalCount() int64 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

type ActivityCommonDataListSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityDataList []*ActivityCommonData `protobuf:"bytes,1,rep,name=activityDataList" json:"activityDataList,omitempty"`
}

func (x *ActivityCommonDataListSync) Reset() {
	*x = ActivityCommonDataListSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityCommonDataListSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityCommonDataListSync) ProtoMessage() {}

func (x *ActivityCommonDataListSync) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityCommonDataListSync.ProtoReflect.Descriptor instead.
func (*ActivityCommonDataListSync) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{17}
}

func (x *ActivityCommonDataListSync) GetActivityDataList() []*ActivityCommonData {
	if x != nil {
		return x.ActivityDataList
	}
	return nil
}

type ActivityPlayerDataSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	PlayerData []byte `protobuf:"bytes,2,opt,name=playerData" json:"playerData,omitempty"`
}

func (x *ActivityPlayerDataSync) Reset() {
	*x = ActivityPlayerDataSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityPlayerDataSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityPlayerDataSync) ProtoMessage() {}

func (x *ActivityPlayerDataSync) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityPlayerDataSync.ProtoReflect.Descriptor instead.
func (*ActivityPlayerDataSync) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{18}
}

func (x *ActivityPlayerDataSync) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActivityPlayerDataSync) GetPlayerData() []byte {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

type ReqGetActivityConditionReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	ConditionId *int32 `protobuf:"varint,2,opt,name=conditionId" json:"conditionId,omitempty"`
}

func (x *ReqGetActivityConditionReward) Reset() {
	*x = ReqGetActivityConditionReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetActivityConditionReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetActivityConditionReward) ProtoMessage() {}

func (x *ReqGetActivityConditionReward) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetActivityConditionReward.ProtoReflect.Descriptor instead.
func (*ReqGetActivityConditionReward) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{19}
}

func (x *ReqGetActivityConditionReward) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReqGetActivityConditionReward) GetConditionId() int32 {
	if x != nil && x.ConditionId != nil {
		return *x.ConditionId
	}
	return 0
}

type AcitivityConditionDataArr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	ConditionId *int32 `protobuf:"varint,2,opt,name=conditionId" json:"conditionId,omitempty"`
}

func (x *AcitivityConditionDataArr) Reset() {
	*x = AcitivityConditionDataArr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcitivityConditionDataArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcitivityConditionDataArr) ProtoMessage() {}

func (x *AcitivityConditionDataArr) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcitivityConditionDataArr.ProtoReflect.Descriptor instead.
func (*AcitivityConditionDataArr) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{20}
}

func (x *AcitivityConditionDataArr) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *AcitivityConditionDataArr) GetConditionId() int32 {
	if x != nil && x.ConditionId != nil {
		return *x.ConditionId
	}
	return 0
}

type ReqGetActivityConditionRewardByArr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityDataList []*AcitivityConditionDataArr `protobuf:"bytes,1,rep,name=activityDataList" json:"activityDataList,omitempty"`
}

func (x *ReqGetActivityConditionRewardByArr) Reset() {
	*x = ReqGetActivityConditionRewardByArr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetActivityConditionRewardByArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetActivityConditionRewardByArr) ProtoMessage() {}

func (x *ReqGetActivityConditionRewardByArr) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetActivityConditionRewardByArr.ProtoReflect.Descriptor instead.
func (*ReqGetActivityConditionRewardByArr) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{21}
}

func (x *ReqGetActivityConditionRewardByArr) GetActivityDataList() []*AcitivityConditionDataArr {
	if x != nil {
		return x.ActivityDataList
	}
	return nil
}

type RspGetActivityConditionReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Rewards *string `protobuf:"bytes,2,opt,name=rewards" json:"rewards,omitempty"`
}

func (x *RspGetActivityConditionReward) Reset() {
	*x = RspGetActivityConditionReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGetActivityConditionReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGetActivityConditionReward) ProtoMessage() {}

func (x *RspGetActivityConditionReward) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGetActivityConditionReward.ProtoReflect.Descriptor instead.
func (*RspGetActivityConditionReward) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{22}
}

func (x *RspGetActivityConditionReward) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RspGetActivityConditionReward) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

type ReqBuyActivityGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  *int32  `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	MallId      *int32  `protobuf:"varint,2,opt,name=mallId" json:"mallId,omitempty"`
	Count       *int64  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	IsUseADTime *bool   `protobuf:"varint,4,opt,name=isUseADTime" json:"isUseADTime,omitempty"`
	Extra       *string `protobuf:"bytes,5,opt,name=extra" json:"extra,omitempty"`
}

func (x *ReqBuyActivityGoods) Reset() {
	*x = ReqBuyActivityGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBuyActivityGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBuyActivityGoods) ProtoMessage() {}

func (x *ReqBuyActivityGoods) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBuyActivityGoods.ProtoReflect.Descriptor instead.
func (*ReqBuyActivityGoods) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{23}
}

func (x *ReqBuyActivityGoods) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReqBuyActivityGoods) GetMallId() int32 {
	if x != nil && x.MallId != nil {
		return *x.MallId
	}
	return 0
}

func (x *ReqBuyActivityGoods) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *ReqBuyActivityGoods) GetIsUseADTime() bool {
	if x != nil && x.IsUseADTime != nil {
		return *x.IsUseADTime
	}
	return false
}

func (x *ReqBuyActivityGoods) GetExtra() string {
	if x != nil && x.Extra != nil {
		return *x.Extra
	}
	return ""
}

type RspBuyActivityGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Rewards *string `protobuf:"bytes,2,opt,name=rewards" json:"rewards,omitempty"`
	Extra   *string `protobuf:"bytes,3,opt,name=extra" json:"extra,omitempty"`
}

func (x *RspBuyActivityGoods) Reset() {
	*x = RspBuyActivityGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspBuyActivityGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspBuyActivityGoods) ProtoMessage() {}

func (x *RspBuyActivityGoods) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspBuyActivityGoods.ProtoReflect.Descriptor instead.
func (*RspBuyActivityGoods) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{24}
}

func (x *RspBuyActivityGoods) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RspBuyActivityGoods) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

func (x *RspBuyActivityGoods) GetExtra() string {
	if x != nil && x.Extra != nil {
		return *x.Extra
	}
	return ""
}

type ActivityConditionDataListSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityConditionDataList []*ActivityConditionDataList `protobuf:"bytes,1,rep,name=activityConditionDataList" json:"activityConditionDataList,omitempty"`
}

func (x *ActivityConditionDataListSync) Reset() {
	*x = ActivityConditionDataListSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityConditionDataListSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityConditionDataListSync) ProtoMessage() {}

func (x *ActivityConditionDataListSync) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityConditionDataListSync.ProtoReflect.Descriptor instead.
func (*ActivityConditionDataListSync) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{25}
}

func (x *ActivityConditionDataListSync) GetActivityConditionDataList() []*ActivityConditionDataList {
	if x != nil {
		return x.ActivityConditionDataList
	}
	return nil
}

type ActivityConditionDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId        *int32                   `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	ConditionDataList []*ActivityConditionData `protobuf:"bytes,2,rep,name=conditionDataList" json:"conditionDataList,omitempty"`
}

func (x *ActivityConditionDataList) Reset() {
	*x = ActivityConditionDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityConditionDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityConditionDataList) ProtoMessage() {}

func (x *ActivityConditionDataList) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityConditionDataList.ProtoReflect.Descriptor instead.
func (*ActivityConditionDataList) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{26}
}

func (x *ActivityConditionDataList) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActivityConditionDataList) GetConditionDataList() []*ActivityConditionData {
	if x != nil {
		return x.ConditionDataList
	}
	return nil
}

type ActivityMallBuyCountDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId       *int32                      `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	MallBuyCountList []*ActivityMallBuyCountData `protobuf:"bytes,2,rep,name=mallBuyCountList" json:"mallBuyCountList,omitempty"`
}

func (x *ActivityMallBuyCountDataList) Reset() {
	*x = ActivityMallBuyCountDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityMallBuyCountDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityMallBuyCountDataList) ProtoMessage() {}

func (x *ActivityMallBuyCountDataList) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityMallBuyCountDataList.ProtoReflect.Descriptor instead.
func (*ActivityMallBuyCountDataList) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{27}
}

func (x *ActivityMallBuyCountDataList) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActivityMallBuyCountDataList) GetMallBuyCountList() []*ActivityMallBuyCountData {
	if x != nil {
		return x.MallBuyCountList
	}
	return nil
}

type ActivityMallBuyCountDataListSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityMallBuyCountDataList []*ActivityMallBuyCountDataList `protobuf:"bytes,1,rep,name=activityMallBuyCountDataList" json:"activityMallBuyCountDataList,omitempty"`
}

func (x *ActivityMallBuyCountDataListSync) Reset() {
	*x = ActivityMallBuyCountDataListSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityMallBuyCountDataListSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityMallBuyCountDataListSync) ProtoMessage() {}

func (x *ActivityMallBuyCountDataListSync) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityMallBuyCountDataListSync.ProtoReflect.Descriptor instead.
func (*ActivityMallBuyCountDataListSync) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{28}
}

func (x *ActivityMallBuyCountDataListSync) GetActivityMallBuyCountDataList() []*ActivityMallBuyCountDataList {
	if x != nil {
		return x.ActivityMallBuyCountDataList
	}
	return nil
}

type ReqShareTaskDone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	ConditionId *int32 `protobuf:"varint,2,req,name=conditionId" json:"conditionId,omitempty"`
}

func (x *ReqShareTaskDone) Reset() {
	*x = ReqShareTaskDone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqShareTaskDone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqShareTaskDone) ProtoMessage() {}

func (x *ReqShareTaskDone) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqShareTaskDone.ProtoReflect.Descriptor instead.
func (*ReqShareTaskDone) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{29}
}

func (x *ReqShareTaskDone) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReqShareTaskDone) GetConditionId() int32 {
	if x != nil && x.ConditionId != nil {
		return *x.ConditionId
	}
	return 0
}

type RespShareTaskDone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *RespShareTaskDone) Reset() {
	*x = RespShareTaskDone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespShareTaskDone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespShareTaskDone) ProtoMessage() {}

func (x *RespShareTaskDone) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespShareTaskDone.ProtoReflect.Descriptor instead.
func (*RespShareTaskDone) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{30}
}

func (x *RespShareTaskDone) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type ReqGetActivityRankReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	RankType   *int32 `protobuf:"varint,2,opt,name=rankType" json:"rankType,omitempty"`
}

func (x *ReqGetActivityRankReward) Reset() {
	*x = ReqGetActivityRankReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetActivityRankReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetActivityRankReward) ProtoMessage() {}

func (x *ReqGetActivityRankReward) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetActivityRankReward.ProtoReflect.Descriptor instead.
func (*ReqGetActivityRankReward) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{31}
}

func (x *ReqGetActivityRankReward) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReqGetActivityRankReward) GetRankType() int32 {
	if x != nil && x.RankType != nil {
		return *x.RankType
	}
	return 0
}

type RespGetActivityRankReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Rewards *string `protobuf:"bytes,2,opt,name=rewards" json:"rewards,omitempty"`
}

func (x *RespGetActivityRankReward) Reset() {
	*x = RespGetActivityRankReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetActivityRankReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetActivityRankReward) ProtoMessage() {}

func (x *RespGetActivityRankReward) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetActivityRankReward.ProtoReflect.Descriptor instead.
func (*RespGetActivityRankReward) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{32}
}

func (x *RespGetActivityRankReward) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RespGetActivityRankReward) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

type ReqGetActivityRankState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	RankType   *int32 `protobuf:"varint,2,opt,name=rankType" json:"rankType,omitempty"`
}

func (x *ReqGetActivityRankState) Reset() {
	*x = ReqGetActivityRankState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetActivityRankState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetActivityRankState) ProtoMessage() {}

func (x *ReqGetActivityRankState) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetActivityRankState.ProtoReflect.Descriptor instead.
func (*ReqGetActivityRankState) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{33}
}

func (x *ReqGetActivityRankState) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReqGetActivityRankState) GetRankType() int32 {
	if x != nil && x.RankType != nil {
		return *x.RankType
	}
	return 0
}

type RespGetActivityRankState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	MyRank  *int32  `protobuf:"varint,2,opt,name=myRank" json:"myRank,omitempty"`
	MyValue *string `protobuf:"bytes,3,opt,name=myValue" json:"myValue,omitempty"`
	Param   *string `protobuf:"bytes,4,opt,name=param" json:"param,omitempty"`
	Reward  *bool   `protobuf:"varint,5,opt,name=reward" json:"reward,omitempty"`
}

func (x *RespGetActivityRankState) Reset() {
	*x = RespGetActivityRankState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetActivityRankState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetActivityRankState) ProtoMessage() {}

func (x *RespGetActivityRankState) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetActivityRankState.ProtoReflect.Descriptor instead.
func (*RespGetActivityRankState) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{34}
}

func (x *RespGetActivityRankState) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RespGetActivityRankState) GetMyRank() int32 {
	if x != nil && x.MyRank != nil {
		return *x.MyRank
	}
	return 0
}

func (x *RespGetActivityRankState) GetMyValue() string {
	if x != nil && x.MyValue != nil {
		return *x.MyValue
	}
	return ""
}

func (x *RespGetActivityRankState) GetParam() string {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return ""
}

func (x *RespGetActivityRankState) GetReward() bool {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return false
}

type ActivityPosterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId   *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PostId       *int32  `protobuf:"varint,2,req,name=postId" json:"postId,omitempty"`
	ShowReward   *string `protobuf:"bytes,3,req,name=showReward" json:"showReward,omitempty"`
	ActivityJump *string `protobuf:"bytes,4,req,name=activityJump" json:"activityJump,omitempty"`
	Param        *string `protobuf:"bytes,5,opt,name=param" json:"param,omitempty"`
}

func (x *ActivityPosterConfig) Reset() {
	*x = ActivityPosterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityPosterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityPosterConfig) ProtoMessage() {}

func (x *ActivityPosterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityPosterConfig.ProtoReflect.Descriptor instead.
func (*ActivityPosterConfig) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{35}
}

func (x *ActivityPosterConfig) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActivityPosterConfig) GetPostId() int32 {
	if x != nil && x.PostId != nil {
		return *x.PostId
	}
	return 0
}

func (x *ActivityPosterConfig) GetShowReward() string {
	if x != nil && x.ShowReward != nil {
		return *x.ShowReward
	}
	return ""
}

func (x *ActivityPosterConfig) GetActivityJump() string {
	if x != nil && x.ActivityJump != nil {
		return *x.ActivityJump
	}
	return ""
}

func (x *ActivityPosterConfig) GetParam() string {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return ""
}

type GameToCrossGetActivityCommonDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *GameToCrossGetActivityCommonDataMsg) Reset() {
	*x = GameToCrossGetActivityCommonDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameToCrossGetActivityCommonDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameToCrossGetActivityCommonDataMsg) ProtoMessage() {}

func (x *GameToCrossGetActivityCommonDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameToCrossGetActivityCommonDataMsg.ProtoReflect.Descriptor instead.
func (*GameToCrossGetActivityCommonDataMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{36}
}

func (x *GameToCrossGetActivityCommonDataMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type CrossToGameGetActivityCommonDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PlayerData []byte `protobuf:"bytes,2,opt,name=playerData" json:"playerData,omitempty"`
}

func (x *CrossToGameGetActivityCommonDataMsg) Reset() {
	*x = CrossToGameGetActivityCommonDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossToGameGetActivityCommonDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossToGameGetActivityCommonDataMsg) ProtoMessage() {}

func (x *CrossToGameGetActivityCommonDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossToGameGetActivityCommonDataMsg.ProtoReflect.Descriptor instead.
func (*CrossToGameGetActivityCommonDataMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{37}
}

func (x *CrossToGameGetActivityCommonDataMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *CrossToGameGetActivityCommonDataMsg) GetPlayerData() []byte {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

type CrossToGameNotifyActivityConditionMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionType *int32  `protobuf:"varint,1,req,name=conditionType" json:"conditionType,omitempty"`
	Value         *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
}

func (x *CrossToGameNotifyActivityConditionMsg) Reset() {
	*x = CrossToGameNotifyActivityConditionMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossToGameNotifyActivityConditionMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossToGameNotifyActivityConditionMsg) ProtoMessage() {}

func (x *CrossToGameNotifyActivityConditionMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossToGameNotifyActivityConditionMsg.ProtoReflect.Descriptor instead.
func (*CrossToGameNotifyActivityConditionMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{38}
}

func (x *CrossToGameNotifyActivityConditionMsg) GetConditionType() int32 {
	if x != nil && x.ConditionType != nil {
		return *x.ConditionType
	}
	return 0
}

func (x *CrossToGameNotifyActivityConditionMsg) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type ReqGuessInfoLoadMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  *int32   `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	ExtraParams []string `protobuf:"bytes,2,rep,name=extraParams" json:"extraParams,omitempty"`
}

func (x *ReqGuessInfoLoadMsg) Reset() {
	*x = ReqGuessInfoLoadMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGuessInfoLoadMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGuessInfoLoadMsg) ProtoMessage() {}

func (x *ReqGuessInfoLoadMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGuessInfoLoadMsg.ProtoReflect.Descriptor instead.
func (*ReqGuessInfoLoadMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{39}
}

func (x *ReqGuessInfoLoadMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReqGuessInfoLoadMsg) GetExtraParams() []string {
	if x != nil {
		return x.ExtraParams
	}
	return nil
}

type RespGuessInfoLoadMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret               *int32                `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	GuessList         []byte                `protobuf:"bytes,2,opt,name=guessList" json:"guessList,omitempty"`
	MyGuessInfo       []int64               `protobuf:"varint,3,rep,name=myGuessInfo" json:"myGuessInfo,omitempty"`
	RewardParam       *int32                `protobuf:"varint,4,opt,name=rewardParam" json:"rewardParam,omitempty"`
	IsReceive         *bool                 `protobuf:"varint,5,opt,name=isReceive" json:"isReceive,omitempty"`
	TotalSettleResult []*GuessTotalResulMsg `protobuf:"bytes,6,rep,name=totalSettleResult" json:"totalSettleResult,omitempty"`
}

func (x *RespGuessInfoLoadMsg) Reset() {
	*x = RespGuessInfoLoadMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGuessInfoLoadMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGuessInfoLoadMsg) ProtoMessage() {}

func (x *RespGuessInfoLoadMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGuessInfoLoadMsg.ProtoReflect.Descriptor instead.
func (*RespGuessInfoLoadMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{40}
}

func (x *RespGuessInfoLoadMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RespGuessInfoLoadMsg) GetGuessList() []byte {
	if x != nil {
		return x.GuessList
	}
	return nil
}

func (x *RespGuessInfoLoadMsg) GetMyGuessInfo() []int64 {
	if x != nil {
		return x.MyGuessInfo
	}
	return nil
}

func (x *RespGuessInfoLoadMsg) GetRewardParam() int32 {
	if x != nil && x.RewardParam != nil {
		return *x.RewardParam
	}
	return 0
}

func (x *RespGuessInfoLoadMsg) GetIsReceive() bool {
	if x != nil && x.IsReceive != nil {
		return *x.IsReceive
	}
	return false
}

func (x *RespGuessInfoLoadMsg) GetTotalSettleResult() []*GuessTotalResulMsg {
	if x != nil {
		return x.TotalSettleResult
	}
	return nil
}

type GuessTotalResulMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param     *int32 `protobuf:"varint,1,opt,name=param" json:"param,omitempty"`
	Count     *int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	GuessType *int32 `protobuf:"varint,3,opt,name=guessType" json:"guessType,omitempty"`
}

func (x *GuessTotalResulMsg) Reset() {
	*x = GuessTotalResulMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuessTotalResulMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuessTotalResulMsg) ProtoMessage() {}

func (x *GuessTotalResulMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuessTotalResulMsg.ProtoReflect.Descriptor instead.
func (*GuessTotalResulMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{41}
}

func (x *GuessTotalResulMsg) GetParam() int32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return 0
}

func (x *GuessTotalResulMsg) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *GuessTotalResulMsg) GetGuessType() int32 {
	if x != nil && x.GuessType != nil {
		return *x.GuessType
	}
	return 0
}

type ReqGuessMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	MyGuessInfo []int64 `protobuf:"varint,2,rep,name=myGuessInfo" json:"myGuessInfo,omitempty"`
}

func (x *ReqGuessMsg) Reset() {
	*x = ReqGuessMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGuessMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGuessMsg) ProtoMessage() {}

func (x *ReqGuessMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGuessMsg.ProtoReflect.Descriptor instead.
func (*ReqGuessMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{42}
}

func (x *ReqGuessMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReqGuessMsg) GetMyGuessInfo() []int64 {
	if x != nil {
		return x.MyGuessInfo
	}
	return nil
}

type RespGuessMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret         *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Cost        *string `protobuf:"bytes,2,opt,name=cost" json:"cost,omitempty"`
	MyGuessInfo []int64 `protobuf:"varint,3,rep,name=myGuessInfo" json:"myGuessInfo,omitempty"`
}

func (x *RespGuessMsg) Reset() {
	*x = RespGuessMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGuessMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGuessMsg) ProtoMessage() {}

func (x *RespGuessMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGuessMsg.ProtoReflect.Descriptor instead.
func (*RespGuessMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{43}
}

func (x *RespGuessMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RespGuessMsg) GetCost() string {
	if x != nil && x.Cost != nil {
		return *x.Cost
	}
	return ""
}

func (x *RespGuessMsg) GetMyGuessInfo() []int64 {
	if x != nil {
		return x.MyGuessInfo
	}
	return nil
}

type ReqGuessRewardMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  *int32   `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	ExtraParams []string `protobuf:"bytes,2,rep,name=extraParams" json:"extraParams,omitempty"`
}

func (x *ReqGuessRewardMsg) Reset() {
	*x = ReqGuessRewardMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGuessRewardMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGuessRewardMsg) ProtoMessage() {}

func (x *ReqGuessRewardMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGuessRewardMsg.ProtoReflect.Descriptor instead.
func (*ReqGuessRewardMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{44}
}

func (x *ReqGuessRewardMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReqGuessRewardMsg) GetExtraParams() []string {
	if x != nil {
		return x.ExtraParams
	}
	return nil
}

type RespGuessRewardMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Reward *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
}

func (x *RespGuessRewardMsg) Reset() {
	*x = RespGuessRewardMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGuessRewardMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGuessRewardMsg) ProtoMessage() {}

func (x *RespGuessRewardMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGuessRewardMsg.ProtoReflect.Descriptor instead.
func (*RespGuessRewardMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{45}
}

func (x *RespGuessRewardMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RespGuessRewardMsg) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type ReqGuessResultDetailMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  *int32   `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Param       *int32   `protobuf:"varint,2,req,name=param" json:"param,omitempty"`
	ExtraParams []string `protobuf:"bytes,3,rep,name=extraParams" json:"extraParams,omitempty"`
}

func (x *ReqGuessResultDetailMsg) Reset() {
	*x = ReqGuessResultDetailMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGuessResultDetailMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGuessResultDetailMsg) ProtoMessage() {}

func (x *ReqGuessResultDetailMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGuessResultDetailMsg.ProtoReflect.Descriptor instead.
func (*ReqGuessResultDetailMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{46}
}

func (x *ReqGuessResultDetailMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReqGuessResultDetailMsg) GetParam() int32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return 0
}

func (x *ReqGuessResultDetailMsg) GetExtraParams() []string {
	if x != nil {
		return x.ExtraParams
	}
	return nil
}

type RespGuessResultDetailMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32             `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Param      *int32             `protobuf:"varint,2,opt,name=param" json:"param,omitempty"`
	PlayerList []*GuessPlayerInfo `protobuf:"bytes,3,rep,name=playerList" json:"playerList,omitempty"`
}

func (x *RespGuessResultDetailMsg) Reset() {
	*x = RespGuessResultDetailMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGuessResultDetailMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGuessResultDetailMsg) ProtoMessage() {}

func (x *RespGuessResultDetailMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGuessResultDetailMsg.ProtoReflect.Descriptor instead.
func (*RespGuessResultDetailMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{47}
}

func (x *RespGuessResultDetailMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RespGuessResultDetailMsg) GetParam() int32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return 0
}

func (x *RespGuessResultDetailMsg) GetPlayerList() []*GuessPlayerInfo {
	if x != nil {
		return x.PlayerList
	}
	return nil
}

type GuessPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *int64  `protobuf:"varint,1,opt,name=playerId" json:"playerId,omitempty"`
	NickName *string `protobuf:"bytes,2,opt,name=nickName" json:"nickName,omitempty"`
	ServerId *int32  `protobuf:"varint,3,opt,name=serverId" json:"serverId,omitempty"`
}

func (x *GuessPlayerInfo) Reset() {
	*x = GuessPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuessPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuessPlayerInfo) ProtoMessage() {}

func (x *GuessPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuessPlayerInfo.ProtoReflect.Descriptor instead.
func (*GuessPlayerInfo) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{48}
}

func (x *GuessPlayerInfo) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *GuessPlayerInfo) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *GuessPlayerInfo) GetServerId() int32 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

type ActivityPeakHoldTimeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId   *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	TimeId       *int32  `protobuf:"varint,2,req,name=timeId" json:"timeId,omitempty"`
	Type         *int32  `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
	BeginTime    *int32  `protobuf:"varint,4,req,name=beginTime" json:"beginTime,omitempty"`
	DurationTime *int32  `protobuf:"varint,5,req,name=durationTime" json:"durationTime,omitempty"`
	Param        *string `protobuf:"bytes,6,req,name=param" json:"param,omitempty"`
}

func (x *ActivityPeakHoldTimeConfig) Reset() {
	*x = ActivityPeakHoldTimeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityPeakHoldTimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityPeakHoldTimeConfig) ProtoMessage() {}

func (x *ActivityPeakHoldTimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityPeakHoldTimeConfig.ProtoReflect.Descriptor instead.
func (*ActivityPeakHoldTimeConfig) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{49}
}

func (x *ActivityPeakHoldTimeConfig) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActivityPeakHoldTimeConfig) GetTimeId() int32 {
	if x != nil && x.TimeId != nil {
		return *x.TimeId
	}
	return 0
}

func (x *ActivityPeakHoldTimeConfig) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ActivityPeakHoldTimeConfig) GetBeginTime() int32 {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return 0
}

func (x *ActivityPeakHoldTimeConfig) GetDurationTime() int32 {
	if x != nil && x.DurationTime != nil {
		return *x.DurationTime
	}
	return 0
}

func (x *ActivityPeakHoldTimeConfig) GetParam() string {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return ""
}

type ReceiveCrossUnionRechargeRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	ConditionId *int32 `protobuf:"varint,2,opt,name=conditionId" json:"conditionId,omitempty"`
}

func (x *ReceiveCrossUnionRechargeRewardReq) Reset() {
	*x = ReceiveCrossUnionRechargeRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveCrossUnionRechargeRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveCrossUnionRechargeRewardReq) ProtoMessage() {}

func (x *ReceiveCrossUnionRechargeRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveCrossUnionRechargeRewardReq.ProtoReflect.Descriptor instead.
func (*ReceiveCrossUnionRechargeRewardReq) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{50}
}

func (x *ReceiveCrossUnionRechargeRewardReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReceiveCrossUnionRechargeRewardReq) GetConditionId() int32 {
	if x != nil && x.ConditionId != nil {
		return *x.ConditionId
	}
	return 0
}

type ReceiveCrossUnionRechargeRewardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Rewards *string `protobuf:"bytes,2,opt,name=rewards" json:"rewards,omitempty"`
}

func (x *ReceiveCrossUnionRechargeRewardResp) Reset() {
	*x = ReceiveCrossUnionRechargeRewardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveCrossUnionRechargeRewardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveCrossUnionRechargeRewardResp) ProtoMessage() {}

func (x *ReceiveCrossUnionRechargeRewardResp) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveCrossUnionRechargeRewardResp.ProtoReflect.Descriptor instead.
func (*ReceiveCrossUnionRechargeRewardResp) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{51}
}

func (x *ReceiveCrossUnionRechargeRewardResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ReceiveCrossUnionRechargeRewardResp) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

type ActivityGetJoinMemberListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *ActivityGetJoinMemberListReq) Reset() {
	*x = ActivityGetJoinMemberListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityGetJoinMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityGetJoinMemberListReq) ProtoMessage() {}

func (x *ActivityGetJoinMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityGetJoinMemberListReq.ProtoReflect.Descriptor instead.
func (*ActivityGetJoinMemberListReq) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{52}
}

func (x *ActivityGetJoinMemberListReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type ActivityGetJoinMemberListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                *int32   `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	JoinMemberNameList []string `protobuf:"bytes,2,rep,name=joinMemberNameList" json:"joinMemberNameList,omitempty"`
	UnionExp           *int64   `protobuf:"varint,3,opt,name=unionExp" json:"unionExp,omitempty"`
}

func (x *ActivityGetJoinMemberListRsp) Reset() {
	*x = ActivityGetJoinMemberListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityGetJoinMemberListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityGetJoinMemberListRsp) ProtoMessage() {}

func (x *ActivityGetJoinMemberListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityGetJoinMemberListRsp.ProtoReflect.Descriptor instead.
func (*ActivityGetJoinMemberListRsp) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{53}
}

func (x *ActivityGetJoinMemberListRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ActivityGetJoinMemberListRsp) GetJoinMemberNameList() []string {
	if x != nil {
		return x.JoinMemberNameList
	}
	return nil
}

func (x *ActivityGetJoinMemberListRsp) GetUnionExp() int64 {
	if x != nil && x.UnionExp != nil {
		return *x.UnionExp
	}
	return 0
}

type ActivityMallSelectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MallId *int32 `protobuf:"varint,1,opt,name=mallId" json:"mallId,omitempty"`
	Index  *int32 `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
}

func (x *ActivityMallSelectData) Reset() {
	*x = ActivityMallSelectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityMallSelectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityMallSelectData) ProtoMessage() {}

func (x *ActivityMallSelectData) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityMallSelectData.ProtoReflect.Descriptor instead.
func (*ActivityMallSelectData) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{54}
}

func (x *ActivityMallSelectData) GetMallId() int32 {
	if x != nil && x.MallId != nil {
		return *x.MallId
	}
	return 0
}

func (x *ActivityMallSelectData) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type ActivityMallSelectDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId     *int32                    `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	MallSelectList []*ActivityMallSelectData `protobuf:"bytes,2,rep,name=mallSelectList" json:"mallSelectList,omitempty"`
}

func (x *ActivityMallSelectDataList) Reset() {
	*x = ActivityMallSelectDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityMallSelectDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityMallSelectDataList) ProtoMessage() {}

func (x *ActivityMallSelectDataList) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityMallSelectDataList.ProtoReflect.Descriptor instead.
func (*ActivityMallSelectDataList) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{55}
}

func (x *ActivityMallSelectDataList) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActivityMallSelectDataList) GetMallSelectList() []*ActivityMallSelectData {
	if x != nil {
		return x.MallSelectList
	}
	return nil
}

type ActivityMallSelectDataListSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityMallSelectDataList []*ActivityMallSelectDataList `protobuf:"bytes,1,rep,name=activityMallSelectDataList" json:"activityMallSelectDataList,omitempty"`
}

func (x *ActivityMallSelectDataListSync) Reset() {
	*x = ActivityMallSelectDataListSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityMallSelectDataListSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityMallSelectDataListSync) ProtoMessage() {}

func (x *ActivityMallSelectDataListSync) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityMallSelectDataListSync.ProtoReflect.Descriptor instead.
func (*ActivityMallSelectDataListSync) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{56}
}

func (x *ActivityMallSelectDataListSync) GetActivityMallSelectDataList() []*ActivityMallSelectDataList {
	if x != nil {
		return x.ActivityMallSelectDataList
	}
	return nil
}

type SelectActivityGoodsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	MallId     *int32 `protobuf:"varint,2,req,name=mallId" json:"mallId,omitempty"`
	Index      *int32 `protobuf:"varint,3,req,name=index" json:"index,omitempty"`
}

func (x *SelectActivityGoodsReq) Reset() {
	*x = SelectActivityGoodsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectActivityGoodsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectActivityGoodsReq) ProtoMessage() {}

func (x *SelectActivityGoodsReq) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectActivityGoodsReq.ProtoReflect.Descriptor instead.
func (*SelectActivityGoodsReq) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{57}
}

func (x *SelectActivityGoodsReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *SelectActivityGoodsReq) GetMallId() int32 {
	if x != nil && x.MallId != nil {
		return *x.MallId
	}
	return 0
}

func (x *SelectActivityGoodsReq) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type SelectActivityGoodsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *SelectActivityGoodsResp) Reset() {
	*x = SelectActivityGoodsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectActivityGoodsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectActivityGoodsResp) ProtoMessage() {}

func (x *SelectActivityGoodsResp) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectActivityGoodsResp.ProtoReflect.Descriptor instead.
func (*SelectActivityGoodsResp) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{58}
}

func (x *SelectActivityGoodsResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type SelectActivityConditionGoodsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32                      `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	RewardMsg  []*SelectConditionRewardMsg `protobuf:"bytes,2,rep,name=rewardMsg" json:"rewardMsg,omitempty"`
}

func (x *SelectActivityConditionGoodsReq) Reset() {
	*x = SelectActivityConditionGoodsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectActivityConditionGoodsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectActivityConditionGoodsReq) ProtoMessage() {}

func (x *SelectActivityConditionGoodsReq) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectActivityConditionGoodsReq.ProtoReflect.Descriptor instead.
func (*SelectActivityConditionGoodsReq) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{59}
}

func (x *SelectActivityConditionGoodsReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *SelectActivityConditionGoodsReq) GetRewardMsg() []*SelectConditionRewardMsg {
	if x != nil {
		return x.RewardMsg
	}
	return nil
}

type SelectActivityConditionGoodsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *SelectActivityConditionGoodsResp) Reset() {
	*x = SelectActivityConditionGoodsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectActivityConditionGoodsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectActivityConditionGoodsResp) ProtoMessage() {}

func (x *SelectActivityConditionGoodsResp) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectActivityConditionGoodsResp.ProtoReflect.Descriptor instead.
func (*SelectActivityConditionGoodsResp) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{60}
}

func (x *SelectActivityConditionGoodsResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type SelectItemMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index       *int32 `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	SelectIndex *int32 `protobuf:"varint,2,req,name=selectIndex" json:"selectIndex,omitempty"`
}

func (x *SelectItemMsg) Reset() {
	*x = SelectItemMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectItemMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectItemMsg) ProtoMessage() {}

func (x *SelectItemMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectItemMsg.ProtoReflect.Descriptor instead.
func (*SelectItemMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{61}
}

func (x *SelectItemMsg) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *SelectItemMsg) GetSelectIndex() int32 {
	if x != nil && x.SelectIndex != nil {
		return *x.SelectIndex
	}
	return 0
}

type ActivityConditionSelectDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32                      `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	SelectData []*SelectConditionRewardMsg `protobuf:"bytes,2,rep,name=selectData" json:"selectData,omitempty"`
}

func (x *ActivityConditionSelectDataList) Reset() {
	*x = ActivityConditionSelectDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityConditionSelectDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityConditionSelectDataList) ProtoMessage() {}

func (x *ActivityConditionSelectDataList) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityConditionSelectDataList.ProtoReflect.Descriptor instead.
func (*ActivityConditionSelectDataList) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{62}
}

func (x *ActivityConditionSelectDataList) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActivityConditionSelectDataList) GetSelectData() []*SelectConditionRewardMsg {
	if x != nil {
		return x.SelectData
	}
	return nil
}

type ActivityConditionSelectDataListSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivitySelectData []*ActivityConditionSelectDataList `protobuf:"bytes,1,rep,name=activitySelectData" json:"activitySelectData,omitempty"`
}

func (x *ActivityConditionSelectDataListSync) Reset() {
	*x = ActivityConditionSelectDataListSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityConditionSelectDataListSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityConditionSelectDataListSync) ProtoMessage() {}

func (x *ActivityConditionSelectDataListSync) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityConditionSelectDataListSync.ProtoReflect.Descriptor instead.
func (*ActivityConditionSelectDataListSync) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{63}
}

func (x *ActivityConditionSelectDataListSync) GetActivitySelectData() []*ActivityConditionSelectDataList {
	if x != nil {
		return x.ActivitySelectData
	}
	return nil
}

type SelectConditionRewardMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionId *int32           `protobuf:"varint,1,req,name=conditionId" json:"conditionId,omitempty"`
	SelectItem  []*SelectItemMsg `protobuf:"bytes,2,rep,name=selectItem" json:"selectItem,omitempty"`
}

func (x *SelectConditionRewardMsg) Reset() {
	*x = SelectConditionRewardMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ActivityBase_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectConditionRewardMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectConditionRewardMsg) ProtoMessage() {}

func (x *SelectConditionRewardMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ActivityBase_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectConditionRewardMsg.ProtoReflect.Descriptor instead.
func (*SelectConditionRewardMsg) Descriptor() ([]byte, []int) {
	return file_ActivityBase_proto_rawDescGZIP(), []int{64}
}

func (x *SelectConditionRewardMsg) GetConditionId() int32 {
	if x != nil && x.ConditionId != nil {
		return *x.ConditionId
	}
	return 0
}

func (x *SelectConditionRewardMsg) GetSelectItem() []*SelectItemMsg {
	if x != nil {
		return x.SelectItem
	}
	return nil
}

var File_ActivityBase_proto protoreflect.FileDescriptor

var file_ActivityBase_proto_rawDesc = []byte{
	0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x4d, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa0, 0x02, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d,
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc3, 0x02, 0x0a, 0x17, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x75, 0x6d,
	0x70, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x75, 0x6d, 0x70, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x22, 0xd9, 0x01, 0x0a, 0x12,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x6d, 0x61, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6c,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x0b, 0x6d, 0x61, 0x6c, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x79, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x75,
	0x79, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62,
	0x75, 0x79, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x62, 0x75, 0x79, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x75, 0x6e,
	0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x75,
	0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xda, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x61, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x90, 0x03, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x46, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x6d, 0x61,
	0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x55, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x46, 0x0a, 0x0a, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4d, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x6d, 0x61, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x49, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x46, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a,
	0x72, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xf3, 0x01, 0x0a, 0x10, 0x50,
	0x75, 0x73, 0x68, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x46, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x6d, 0x61, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4c, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x49, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0x73, 0x0a, 0x18, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x57, 0x0a, 0x11,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x95, 0x01, 0x0a, 0x15, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x5c, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x22, 0x88, 0x01,
	0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4c, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xda, 0x02, 0x0a, 0x15, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x12,
	0x69, 0x73, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x49, 0x0a, 0x0b,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x44, 0x72, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x22, 0x48, 0x0a, 0x18, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x36,
	0x0a, 0x14, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x14, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x42, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x22, 0xc2, 0x04, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x11, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x10, 0x6d, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x6c, 0x6c,
	0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x6d, 0x61,
	0x6c, 0x6c, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4c,
	0x0a, 0x0c, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5c, 0x0a, 0x14,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x52, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x67, 0x0a, 0x19, 0x75, 0x6e,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x19, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x6b,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x78, 0x0a, 0x14, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73,
	0x67, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x70, 0x0a, 0x1a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6e,
	0x63, 0x12, 0x52, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x61, 0x0a, 0x1d, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x5d, 0x0a, 0x19, 0x41, 0x63, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x7f, 0x0a, 0x22, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x42, 0x79, 0x41, 0x72, 0x72, 0x12, 0x59, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72, 0x72,
	0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x4b, 0x0a, 0x1d, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22,
	0x9b, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x42, 0x75, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x6c, 0x6c, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x55, 0x73, 0x65, 0x41, 0x44,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x55, 0x73,
	0x65, 0x41, 0x44, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x57, 0x0a,
	0x13, 0x52, 0x73, 0x70, 0x42, 0x75, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x8c, 0x01, 0x0a, 0x1d, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x6b, 0x0a, 0x19, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x19, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x19, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x98, 0x01, 0x0a,
	0x1c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x58, 0x0a,
	0x10, 0x6d, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x6d, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x20, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x74, 0x0a, 0x1c,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x1c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61,
	0x6c, 0x6c, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x54, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22,
	0x56, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72,
	0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0x47, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x22, 0x55, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72,
	0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x70,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x79, 0x52, 0x61, 0x6e, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x6f,
	0x77, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4a, 0x75, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4a, 0x75, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x22, 0x45, 0x0a, 0x23, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x23, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x63, 0x0a, 0x25, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x57, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x47, 0x75, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xfe, 0x01,
	0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x47, 0x75, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x6f, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x75, 0x65, 0x73,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x67, 0x75, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x79, 0x47, 0x75, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x79, 0x47,
	0x75, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x11, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5e,
	0x0a, 0x12, 0x47, 0x75, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x75, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x75, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4f,
	0x0a, 0x0b, 0x52, 0x65, 0x71, 0x47, 0x75, 0x65, 0x73, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x6d, 0x79, 0x47, 0x75, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x0b, 0x6d, 0x79, 0x47, 0x75, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x56, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x47, 0x75, 0x65, 0x73, 0x73, 0x4d, 0x73, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x79, 0x47, 0x75, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x79, 0x47, 0x75,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x47, 0x75,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x3e,
	0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x47, 0x75, 0x65, 0x73, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x71,
	0x0a, 0x17, 0x52, 0x65, 0x71, 0x47, 0x75, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x20, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x87, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x70, 0x47, 0x75, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x47, 0x75, 0x65, 0x73, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x0f, 0x47,
	0x75, 0x65, 0x73, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x1a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50,
	0x65, 0x61, 0x6b, 0x48, 0x6f, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x0c, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x66, 0x0a, 0x22, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x43, 0x72, 0x6f, 0x73, 0x73, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x51, 0x0a,
	0x23, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x22, 0x3e, 0x0a, 0x1c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x22, 0x7c, 0x0a, 0x1c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x6a, 0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12,
	0x6a, 0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x22, 0x46,
	0x0a, 0x16, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x6c, 0x6c, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x6c, 0x6c,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x90, 0x01, 0x0a, 0x1a, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4d, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x0e, 0x6d, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x6c, 0x6c, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x6d, 0x61, 0x6c, 0x6c, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x1e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x6e, 0x0a, 0x1a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61,
	0x6c, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x1a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x6c, 0x6c, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x66, 0x0a, 0x16,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x2b, 0x0a, 0x17, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x22, 0x8d, 0x01, 0x0a, 0x1f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73,
	0x67, 0x22, 0x34, 0x0a, 0x20, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x47, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x8f, 0x01, 0x0a, 0x1f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x8a, 0x01, 0x0a, 0x23, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x63, 0x0a, 0x12, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x12, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x7f, 0x0a, 0x18, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x41, 0x0a,
	0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69,
	0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_ActivityBase_proto_rawDescOnce sync.Once
	file_ActivityBase_proto_rawDescData = file_ActivityBase_proto_rawDesc
)

func file_ActivityBase_proto_rawDescGZIP() []byte {
	file_ActivityBase_proto_rawDescOnce.Do(func() {
		file_ActivityBase_proto_rawDescData = protoimpl.X.CompressGZIP(file_ActivityBase_proto_rawDescData)
	})
	return file_ActivityBase_proto_rawDescData
}

var file_ActivityBase_proto_msgTypes = make([]protoimpl.MessageInfo, 65)
var file_ActivityBase_proto_goTypes = []any{
	(*ActivityMainConfig)(nil),                    // 0: com.yq.msg.CityMsg.ActivityMainConfig
	(*ActivityConditionConfig)(nil),               // 1: com.yq.msg.CityMsg.ActivityConditionConfig
	(*ActivityMallConfig)(nil),                    // 2: com.yq.msg.CityMsg.ActivityMallConfig
	(*ActivityRankConfig)(nil),                    // 3: com.yq.msg.CityMsg.ActivityRankConfig
	(*ActivityParamConfig)(nil),                   // 4: com.yq.msg.CityMsg.ActivityParamConfig
	(*ActivityCommonConfig)(nil),                  // 5: com.yq.msg.CityMsg.ActivityCommonConfig
	(*PushActivityList)(nil),                      // 6: com.yq.msg.CityMsg.PushActivityList
	(*ActivityScoreDataMsgSync)(nil),              // 7: com.yq.msg.CityMsg.ActivityScoreDataMsgSync
	(*ActivityScoreDataList)(nil),                 // 8: com.yq.msg.CityMsg.ActivityScoreDataList
	(*ActivityDetailConfig)(nil),                  // 9: com.yq.msg.CityMsg.ActivityDetailConfig
	(*ActivityConditionData)(nil),                 // 10: com.yq.msg.CityMsg.ActivityConditionData
	(*ActivityMultiReward)(nil),                   // 11: com.yq.msg.CityMsg.ActivityMultiReward
	(*ActivityMallBuyCountData)(nil),              // 12: com.yq.msg.CityMsg.ActivityMallBuyCountData
	(*ReqGetActivityDetail)(nil),                  // 13: com.yq.msg.CityMsg.ReqGetActivityDetail
	(*RspGetActivityDetail)(nil),                  // 14: com.yq.msg.CityMsg.RspGetActivityDetail
	(*ActivityCommonData)(nil),                    // 15: com.yq.msg.CityMsg.ActivityCommonData
	(*ActivityScoreDataMsg)(nil),                  // 16: com.yq.msg.CityMsg.ActivityScoreDataMsg
	(*ActivityCommonDataListSync)(nil),            // 17: com.yq.msg.CityMsg.ActivityCommonDataListSync
	(*ActivityPlayerDataSync)(nil),                // 18: com.yq.msg.CityMsg.ActivityPlayerDataSync
	(*ReqGetActivityConditionReward)(nil),         // 19: com.yq.msg.CityMsg.ReqGetActivityConditionReward
	(*AcitivityConditionDataArr)(nil),             // 20: com.yq.msg.CityMsg.AcitivityConditionDataArr
	(*ReqGetActivityConditionRewardByArr)(nil),    // 21: com.yq.msg.CityMsg.ReqGetActivityConditionRewardByArr
	(*RspGetActivityConditionReward)(nil),         // 22: com.yq.msg.CityMsg.RspGetActivityConditionReward
	(*ReqBuyActivityGoods)(nil),                   // 23: com.yq.msg.CityMsg.ReqBuyActivityGoods
	(*RspBuyActivityGoods)(nil),                   // 24: com.yq.msg.CityMsg.RspBuyActivityGoods
	(*ActivityConditionDataListSync)(nil),         // 25: com.yq.msg.CityMsg.ActivityConditionDataListSync
	(*ActivityConditionDataList)(nil),             // 26: com.yq.msg.CityMsg.ActivityConditionDataList
	(*ActivityMallBuyCountDataList)(nil),          // 27: com.yq.msg.CityMsg.ActivityMallBuyCountDataList
	(*ActivityMallBuyCountDataListSync)(nil),      // 28: com.yq.msg.CityMsg.ActivityMallBuyCountDataListSync
	(*ReqShareTaskDone)(nil),                      // 29: com.yq.msg.CityMsg.ReqShareTaskDone
	(*RespShareTaskDone)(nil),                     // 30: com.yq.msg.CityMsg.RespShareTaskDone
	(*ReqGetActivityRankReward)(nil),              // 31: com.yq.msg.CityMsg.ReqGetActivityRankReward
	(*RespGetActivityRankReward)(nil),             // 32: com.yq.msg.CityMsg.RespGetActivityRankReward
	(*ReqGetActivityRankState)(nil),               // 33: com.yq.msg.CityMsg.ReqGetActivityRankState
	(*RespGetActivityRankState)(nil),              // 34: com.yq.msg.CityMsg.RespGetActivityRankState
	(*ActivityPosterConfig)(nil),                  // 35: com.yq.msg.CityMsg.ActivityPosterConfig
	(*GameToCrossGetActivityCommonDataMsg)(nil),   // 36: com.yq.msg.CityMsg.GameToCrossGetActivityCommonDataMsg
	(*CrossToGameGetActivityCommonDataMsg)(nil),   // 37: com.yq.msg.CityMsg.CrossToGameGetActivityCommonDataMsg
	(*CrossToGameNotifyActivityConditionMsg)(nil), // 38: com.yq.msg.CityMsg.CrossToGameNotifyActivityConditionMsg
	(*ReqGuessInfoLoadMsg)(nil),                   // 39: com.yq.msg.CityMsg.ReqGuessInfoLoadMsg
	(*RespGuessInfoLoadMsg)(nil),                  // 40: com.yq.msg.CityMsg.RespGuessInfoLoadMsg
	(*GuessTotalResulMsg)(nil),                    // 41: com.yq.msg.CityMsg.GuessTotalResulMsg
	(*ReqGuessMsg)(nil),                           // 42: com.yq.msg.CityMsg.ReqGuessMsg
	(*RespGuessMsg)(nil),                          // 43: com.yq.msg.CityMsg.RespGuessMsg
	(*ReqGuessRewardMsg)(nil),                     // 44: com.yq.msg.CityMsg.ReqGuessRewardMsg
	(*RespGuessRewardMsg)(nil),                    // 45: com.yq.msg.CityMsg.RespGuessRewardMsg
	(*ReqGuessResultDetailMsg)(nil),               // 46: com.yq.msg.CityMsg.ReqGuessResultDetailMsg
	(*RespGuessResultDetailMsg)(nil),              // 47: com.yq.msg.CityMsg.RespGuessResultDetailMsg
	(*GuessPlayerInfo)(nil),                       // 48: com.yq.msg.CityMsg.GuessPlayerInfo
	(*ActivityPeakHoldTimeConfig)(nil),            // 49: com.yq.msg.CityMsg.ActivityPeakHoldTimeConfig
	(*ReceiveCrossUnionRechargeRewardReq)(nil),    // 50: com.yq.msg.CityMsg.ReceiveCrossUnionRechargeRewardReq
	(*ReceiveCrossUnionRechargeRewardResp)(nil),   // 51: com.yq.msg.CityMsg.ReceiveCrossUnionRechargeRewardResp
	(*ActivityGetJoinMemberListReq)(nil),          // 52: com.yq.msg.CityMsg.ActivityGetJoinMemberListReq
	(*ActivityGetJoinMemberListRsp)(nil),          // 53: com.yq.msg.CityMsg.ActivityGetJoinMemberListRsp
	(*ActivityMallSelectData)(nil),                // 54: com.yq.msg.CityMsg.ActivityMallSelectData
	(*ActivityMallSelectDataList)(nil),            // 55: com.yq.msg.CityMsg.ActivityMallSelectDataList
	(*ActivityMallSelectDataListSync)(nil),        // 56: com.yq.msg.CityMsg.ActivityMallSelectDataListSync
	(*SelectActivityGoodsReq)(nil),                // 57: com.yq.msg.CityMsg.SelectActivityGoodsReq
	(*SelectActivityGoodsResp)(nil),               // 58: com.yq.msg.CityMsg.SelectActivityGoodsResp
	(*SelectActivityConditionGoodsReq)(nil),       // 59: com.yq.msg.CityMsg.SelectActivityConditionGoodsReq
	(*SelectActivityConditionGoodsResp)(nil),      // 60: com.yq.msg.CityMsg.SelectActivityConditionGoodsResp
	(*SelectItemMsg)(nil),                         // 61: com.yq.msg.CityMsg.SelectItemMsg
	(*ActivityConditionSelectDataList)(nil),       // 62: com.yq.msg.CityMsg.ActivityConditionSelectDataList
	(*ActivityConditionSelectDataListSync)(nil),   // 63: com.yq.msg.CityMsg.ActivityConditionSelectDataListSync
	(*SelectConditionRewardMsg)(nil),              // 64: com.yq.msg.CityMsg.SelectConditionRewardMsg
	(*MallTempMsg)(nil),                           // 65: com.yq.msg.CityMsg.MallTempMsg
	(*UnionNameServerIdData)(nil),                 // 66: com.yq.msg.CityMsg.UnionNameServerIdData
}
var file_ActivityBase_proto_depIdxs = []int32{
	65, // 0: com.yq.msg.CityMsg.ActivityMallConfig.mallTempMsg:type_name -> com.yq.msg.CityMsg.MallTempMsg
	0,  // 1: com.yq.msg.CityMsg.ActivityCommonConfig.mainConfig:type_name -> com.yq.msg.CityMsg.ActivityMainConfig
	1,  // 2: com.yq.msg.CityMsg.ActivityCommonConfig.conditionConfig:type_name -> com.yq.msg.CityMsg.ActivityConditionConfig
	2,  // 3: com.yq.msg.CityMsg.ActivityCommonConfig.mallConfig:type_name -> com.yq.msg.CityMsg.ActivityMallConfig
	4,  // 4: com.yq.msg.CityMsg.ActivityCommonConfig.paramConfig:type_name -> com.yq.msg.CityMsg.ActivityParamConfig
	3,  // 5: com.yq.msg.CityMsg.ActivityCommonConfig.rankConfig:type_name -> com.yq.msg.CityMsg.ActivityRankConfig
	0,  // 6: com.yq.msg.CityMsg.PushActivityList.mainConfig:type_name -> com.yq.msg.CityMsg.ActivityMainConfig
	35, // 7: com.yq.msg.CityMsg.PushActivityList.posterConfig:type_name -> com.yq.msg.CityMsg.ActivityPosterConfig
	4,  // 8: com.yq.msg.CityMsg.PushActivityList.paramConfig:type_name -> com.yq.msg.CityMsg.ActivityParamConfig
	8,  // 9: com.yq.msg.CityMsg.ActivityScoreDataMsgSync.activityScoreData:type_name -> com.yq.msg.CityMsg.ActivityScoreDataList
	16, // 10: com.yq.msg.CityMsg.ActivityScoreDataList.activityScoreDataMsg:type_name -> com.yq.msg.CityMsg.ActivityScoreDataMsg
	5,  // 11: com.yq.msg.CityMsg.ActivityDetailConfig.commonConfig:type_name -> com.yq.msg.CityMsg.ActivityCommonConfig
	11, // 12: com.yq.msg.CityMsg.ActivityConditionData.multiReward:type_name -> com.yq.msg.CityMsg.ActivityMultiReward
	15, // 13: com.yq.msg.CityMsg.RspGetActivityDetail.activity:type_name -> com.yq.msg.CityMsg.ActivityCommonData
	10, // 14: com.yq.msg.CityMsg.ActivityCommonData.conditionDataList:type_name -> com.yq.msg.CityMsg.ActivityConditionData
	12, // 15: com.yq.msg.CityMsg.ActivityCommonData.mallBuyCountList:type_name -> com.yq.msg.CityMsg.ActivityMallBuyCountData
	9,  // 16: com.yq.msg.CityMsg.ActivityCommonData.detailConfig:type_name -> com.yq.msg.CityMsg.ActivityDetailConfig
	16, // 17: com.yq.msg.CityMsg.ActivityCommonData.activityScoreDataMsg:type_name -> com.yq.msg.CityMsg.ActivityScoreDataMsg
	66, // 18: com.yq.msg.CityMsg.ActivityCommonData.unionNameServerIdDataList:type_name -> com.yq.msg.CityMsg.UnionNameServerIdData
	15, // 19: com.yq.msg.CityMsg.ActivityCommonDataListSync.activityDataList:type_name -> com.yq.msg.CityMsg.ActivityCommonData
	20, // 20: com.yq.msg.CityMsg.ReqGetActivityConditionRewardByArr.activityDataList:type_name -> com.yq.msg.CityMsg.AcitivityConditionDataArr
	26, // 21: com.yq.msg.CityMsg.ActivityConditionDataListSync.activityConditionDataList:type_name -> com.yq.msg.CityMsg.ActivityConditionDataList
	10, // 22: com.yq.msg.CityMsg.ActivityConditionDataList.conditionDataList:type_name -> com.yq.msg.CityMsg.ActivityConditionData
	12, // 23: com.yq.msg.CityMsg.ActivityMallBuyCountDataList.mallBuyCountList:type_name -> com.yq.msg.CityMsg.ActivityMallBuyCountData
	27, // 24: com.yq.msg.CityMsg.ActivityMallBuyCountDataListSync.activityMallBuyCountDataList:type_name -> com.yq.msg.CityMsg.ActivityMallBuyCountDataList
	41, // 25: com.yq.msg.CityMsg.RespGuessInfoLoadMsg.totalSettleResult:type_name -> com.yq.msg.CityMsg.GuessTotalResulMsg
	48, // 26: com.yq.msg.CityMsg.RespGuessResultDetailMsg.playerList:type_name -> com.yq.msg.CityMsg.GuessPlayerInfo
	54, // 27: com.yq.msg.CityMsg.ActivityMallSelectDataList.mallSelectList:type_name -> com.yq.msg.CityMsg.ActivityMallSelectData
	55, // 28: com.yq.msg.CityMsg.ActivityMallSelectDataListSync.activityMallSelectDataList:type_name -> com.yq.msg.CityMsg.ActivityMallSelectDataList
	64, // 29: com.yq.msg.CityMsg.SelectActivityConditionGoodsReq.rewardMsg:type_name -> com.yq.msg.CityMsg.SelectConditionRewardMsg
	64, // 30: com.yq.msg.CityMsg.ActivityConditionSelectDataList.selectData:type_name -> com.yq.msg.CityMsg.SelectConditionRewardMsg
	62, // 31: com.yq.msg.CityMsg.ActivityConditionSelectDataListSync.activitySelectData:type_name -> com.yq.msg.CityMsg.ActivityConditionSelectDataList
	61, // 32: com.yq.msg.CityMsg.SelectConditionRewardMsg.selectItem:type_name -> com.yq.msg.CityMsg.SelectItemMsg
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_ActivityBase_proto_init() }
func file_ActivityBase_proto_init() {
	if File_ActivityBase_proto != nil {
		return
	}
	file_Common_proto_init()
	file_Mall_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ActivityBase_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityMainConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityConditionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityMallConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityRankConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityParamConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityCommonConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PushActivityList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityScoreDataMsgSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityScoreDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityDetailConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityConditionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityMultiReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityMallBuyCountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGetActivityDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*RspGetActivityDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityCommonData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityScoreDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityCommonDataListSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityPlayerDataSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGetActivityConditionReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*AcitivityConditionDataArr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGetActivityConditionRewardByArr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*RspGetActivityConditionReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ReqBuyActivityGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*RspBuyActivityGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityConditionDataListSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityConditionDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityMallBuyCountDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityMallBuyCountDataListSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*ReqShareTaskDone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*RespShareTaskDone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGetActivityRankReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*RespGetActivityRankReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGetActivityRankState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*RespGetActivityRankState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityPosterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*GameToCrossGetActivityCommonDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CrossToGameGetActivityCommonDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CrossToGameNotifyActivityConditionMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGuessInfoLoadMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*RespGuessInfoLoadMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*GuessTotalResulMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGuessMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*RespGuessMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGuessRewardMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*RespGuessRewardMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*ReqGuessResultDetailMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*RespGuessResultDetailMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*GuessPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityPeakHoldTimeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiveCrossUnionRechargeRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiveCrossUnionRechargeRewardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityGetJoinMemberListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityGetJoinMemberListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityMallSelectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityMallSelectDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityMallSelectDataListSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*SelectActivityGoodsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*SelectActivityGoodsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*SelectActivityConditionGoodsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*SelectActivityConditionGoodsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*SelectItemMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityConditionSelectDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityConditionSelectDataListSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ActivityBase_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*SelectConditionRewardMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ActivityBase_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   65,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ActivityBase_proto_goTypes,
		DependencyIndexes: file_ActivityBase_proto_depIdxs,
		MessageInfos:      file_ActivityBase_proto_msgTypes,
	}.Build()
	File_ActivityBase_proto = out.File
	file_ActivityBase_proto_rawDesc = nil
	file_ActivityBase_proto_goTypes = nil
	file_ActivityBase_proto_depIdxs = nil
}
