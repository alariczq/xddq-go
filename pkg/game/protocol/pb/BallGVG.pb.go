// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: BallGVG.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BallGVGActivityDataTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	CampId     *int32 `protobuf:"varint,2,req,name=campId" json:"campId,omitempty"`
	State      *int32 `protobuf:"varint,3,req,name=state" json:"state,omitempty"`
	EndNum     *int32 `protobuf:"varint,4,opt,name=endNum" json:"endNum,omitempty"`
	Position   *int32 `protobuf:"varint,5,opt,name=position" json:"position,omitempty"`
}

func (x *BallGVGActivityDataTemp) Reset() {
	*x = BallGVGActivityDataTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGActivityDataTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGActivityDataTemp) ProtoMessage() {}

func (x *BallGVGActivityDataTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGActivityDataTemp.ProtoReflect.Descriptor instead.
func (*BallGVGActivityDataTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{0}
}

func (x *BallGVGActivityDataTemp) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *BallGVGActivityDataTemp) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

func (x *BallGVGActivityDataTemp) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *BallGVGActivityDataTemp) GetEndNum() int32 {
	if x != nil && x.EndNum != nil {
		return *x.EndNum
	}
	return 0
}

func (x *BallGVGActivityDataTemp) GetPosition() int32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

type BallGVGUserDataTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId   *int32                   `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Property     *BallGVGUserPropertyTemp `protobuf:"bytes,2,req,name=property" json:"property,omitempty"`
	CampId       *int32                   `protobuf:"varint,3,req,name=campId" json:"campId,omitempty"`
	PlaceId      *int32                   `protobuf:"varint,4,req,name=placeId" json:"placeId,omitempty"`
	TransferTime *int64                   `protobuf:"varint,5,req,name=transferTime" json:"transferTime,omitempty"`
	AttackTime   *int64                   `protobuf:"varint,6,req,name=attackTime" json:"attackTime,omitempty"`
	ReviveTime   *int64                   `protobuf:"varint,7,req,name=reviveTime" json:"reviveTime,omitempty"`
}

func (x *BallGVGUserDataTemp) Reset() {
	*x = BallGVGUserDataTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGUserDataTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGUserDataTemp) ProtoMessage() {}

func (x *BallGVGUserDataTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGUserDataTemp.ProtoReflect.Descriptor instead.
func (*BallGVGUserDataTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{1}
}

func (x *BallGVGUserDataTemp) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *BallGVGUserDataTemp) GetProperty() *BallGVGUserPropertyTemp {
	if x != nil {
		return x.Property
	}
	return nil
}

func (x *BallGVGUserDataTemp) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

func (x *BallGVGUserDataTemp) GetPlaceId() int32 {
	if x != nil && x.PlaceId != nil {
		return *x.PlaceId
	}
	return 0
}

func (x *BallGVGUserDataTemp) GetTransferTime() int64 {
	if x != nil && x.TransferTime != nil {
		return *x.TransferTime
	}
	return 0
}

func (x *BallGVGUserDataTemp) GetAttackTime() int64 {
	if x != nil && x.AttackTime != nil {
		return *x.AttackTime
	}
	return 0
}

func (x *BallGVGUserDataTemp) GetReviveTime() int64 {
	if x != nil && x.ReviveTime != nil {
		return *x.ReviveTime
	}
	return 0
}

type BallGVGOtherUserTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampId     *int32                   `protobuf:"varint,1,req,name=campId" json:"campId,omitempty"`
	PlayerData *PlayerCharacterImageMsg `protobuf:"bytes,2,req,name=playerData" json:"playerData,omitempty"`
	Property   *BallGVGUserPropertyTemp `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	PlaceId    *int32                   `protobuf:"varint,4,req,name=placeId" json:"placeId,omitempty"`
	Position   *BallGVGPositionTemp     `protobuf:"bytes,5,req,name=position" json:"position,omitempty"`
	ReviveTime *int64                   `protobuf:"varint,6,req,name=reviveTime" json:"reviveTime,omitempty"`
}

func (x *BallGVGOtherUserTemp) Reset() {
	*x = BallGVGOtherUserTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGOtherUserTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGOtherUserTemp) ProtoMessage() {}

func (x *BallGVGOtherUserTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGOtherUserTemp.ProtoReflect.Descriptor instead.
func (*BallGVGOtherUserTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{2}
}

func (x *BallGVGOtherUserTemp) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

func (x *BallGVGOtherUserTemp) GetPlayerData() *PlayerCharacterImageMsg {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

func (x *BallGVGOtherUserTemp) GetProperty() *BallGVGUserPropertyTemp {
	if x != nil {
		return x.Property
	}
	return nil
}

func (x *BallGVGOtherUserTemp) GetPlaceId() int32 {
	if x != nil && x.PlaceId != nil {
		return *x.PlaceId
	}
	return 0
}

func (x *BallGVGOtherUserTemp) GetPosition() *BallGVGPositionTemp {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *BallGVGOtherUserTemp) GetReviveTime() int64 {
	if x != nil && x.ReviveTime != nil {
		return *x.ReviveTime
	}
	return 0
}

type BallGVGUserDetailTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     *PlayerCharacterImageMsg `protobuf:"bytes,1,req,name=user" json:"user,omitempty"`
	PlayerId *int64                   `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
	Property *BallGVGUserPropertyTemp `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
}

func (x *BallGVGUserDetailTemp) Reset() {
	*x = BallGVGUserDetailTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGUserDetailTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGUserDetailTemp) ProtoMessage() {}

func (x *BallGVGUserDetailTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGUserDetailTemp.ProtoReflect.Descriptor instead.
func (*BallGVGUserDetailTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{3}
}

func (x *BallGVGUserDetailTemp) GetUser() *PlayerCharacterImageMsg {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *BallGVGUserDetailTemp) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *BallGVGUserDetailTemp) GetProperty() *BallGVGUserPropertyTemp {
	if x != nil {
		return x.Property
	}
	return nil
}

type BallGVGSimpleUserTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *int64               `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	Position *BallGVGPositionTemp `protobuf:"bytes,2,req,name=position" json:"position,omitempty"`
}

func (x *BallGVGSimpleUserTemp) Reset() {
	*x = BallGVGSimpleUserTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGSimpleUserTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGSimpleUserTemp) ProtoMessage() {}

func (x *BallGVGSimpleUserTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGSimpleUserTemp.ProtoReflect.Descriptor instead.
func (*BallGVGSimpleUserTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{4}
}

func (x *BallGVGSimpleUserTemp) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *BallGVGSimpleUserTemp) GetPosition() *BallGVGPositionTemp {
	if x != nil {
		return x.Position
	}
	return nil
}

type BallGVGUserPropertyTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalHp     *int64 `protobuf:"varint,1,req,name=totalHp" json:"totalHp,omitempty"`
	Hp          *int64 `protobuf:"varint,2,req,name=hp" json:"hp,omitempty"`
	FightValue  *int64 `protobuf:"varint,3,req,name=fightValue" json:"fightValue,omitempty"`
	RealmsId    *int32 `protobuf:"varint,4,req,name=realmsId" json:"realmsId,omitempty"`
	AttackSpeed *int32 `protobuf:"varint,5,req,name=attackSpeed" json:"attackSpeed,omitempty"`
}

func (x *BallGVGUserPropertyTemp) Reset() {
	*x = BallGVGUserPropertyTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGUserPropertyTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGUserPropertyTemp) ProtoMessage() {}

func (x *BallGVGUserPropertyTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGUserPropertyTemp.ProtoReflect.Descriptor instead.
func (*BallGVGUserPropertyTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{5}
}

func (x *BallGVGUserPropertyTemp) GetTotalHp() int64 {
	if x != nil && x.TotalHp != nil {
		return *x.TotalHp
	}
	return 0
}

func (x *BallGVGUserPropertyTemp) GetHp() int64 {
	if x != nil && x.Hp != nil {
		return *x.Hp
	}
	return 0
}

func (x *BallGVGUserPropertyTemp) GetFightValue() int64 {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return 0
}

func (x *BallGVGUserPropertyTemp) GetRealmsId() int32 {
	if x != nil && x.RealmsId != nil {
		return *x.RealmsId
	}
	return 0
}

func (x *BallGVGUserPropertyTemp) GetAttackSpeed() int32 {
	if x != nil && x.AttackSpeed != nil {
		return *x.AttackSpeed
	}
	return 0
}

type BallGVGAttrInfoTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrId    *int32 `protobuf:"varint,1,req,name=attrId" json:"attrId,omitempty"`
	AttrValue *int64 `protobuf:"varint,2,req,name=attrValue" json:"attrValue,omitempty"`
}

func (x *BallGVGAttrInfoTemp) Reset() {
	*x = BallGVGAttrInfoTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGAttrInfoTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGAttrInfoTemp) ProtoMessage() {}

func (x *BallGVGAttrInfoTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGAttrInfoTemp.ProtoReflect.Descriptor instead.
func (*BallGVGAttrInfoTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{6}
}

func (x *BallGVGAttrInfoTemp) GetAttrId() int32 {
	if x != nil && x.AttrId != nil {
		return *x.AttrId
	}
	return 0
}

func (x *BallGVGAttrInfoTemp) GetAttrValue() int64 {
	if x != nil && x.AttrValue != nil {
		return *x.AttrValue
	}
	return 0
}

type BallGVGCampTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampId        *int32                 `protobuf:"varint,1,req,name=campId" json:"campId,omitempty"`
	MajorUser     *BallGVGUserDetailTemp `protobuf:"bytes,2,opt,name=majorUser" json:"majorUser,omitempty"`
	MajorPlaceId  *int32                 `protobuf:"varint,4,opt,name=majorPlaceId" json:"majorPlaceId,omitempty"`
	MajorMarkTime *int64                 `protobuf:"varint,6,opt,name=majorMarkTime" json:"majorMarkTime,omitempty"`
	AppointTime   *int64                 `protobuf:"varint,8,opt,name=appointTime" json:"appointTime,omitempty"`
}

func (x *BallGVGCampTemp) Reset() {
	*x = BallGVGCampTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGCampTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGCampTemp) ProtoMessage() {}

func (x *BallGVGCampTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGCampTemp.ProtoReflect.Descriptor instead.
func (*BallGVGCampTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{7}
}

func (x *BallGVGCampTemp) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

func (x *BallGVGCampTemp) GetMajorUser() *BallGVGUserDetailTemp {
	if x != nil {
		return x.MajorUser
	}
	return nil
}

func (x *BallGVGCampTemp) GetMajorPlaceId() int32 {
	if x != nil && x.MajorPlaceId != nil {
		return *x.MajorPlaceId
	}
	return 0
}

func (x *BallGVGCampTemp) GetMajorMarkTime() int64 {
	if x != nil && x.MajorMarkTime != nil {
		return *x.MajorMarkTime
	}
	return 0
}

func (x *BallGVGCampTemp) GetAppointTime() int64 {
	if x != nil && x.AppointTime != nil {
		return *x.AppointTime
	}
	return 0
}

type BallGVGPositionTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X    *string `protobuf:"bytes,1,req,name=x" json:"x,omitempty"`
	Y    *string `protobuf:"bytes,2,req,name=y" json:"y,omitempty"`
	DirX *string `protobuf:"bytes,3,req,name=dirX" json:"dirX,omitempty"`
	DirY *string `protobuf:"bytes,4,req,name=dirY" json:"dirY,omitempty"`
	Time *int64  `protobuf:"varint,5,req,name=time" json:"time,omitempty"`
}

func (x *BallGVGPositionTemp) Reset() {
	*x = BallGVGPositionTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGPositionTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGPositionTemp) ProtoMessage() {}

func (x *BallGVGPositionTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGPositionTemp.ProtoReflect.Descriptor instead.
func (*BallGVGPositionTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{8}
}

func (x *BallGVGPositionTemp) GetX() string {
	if x != nil && x.X != nil {
		return *x.X
	}
	return ""
}

func (x *BallGVGPositionTemp) GetY() string {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return ""
}

func (x *BallGVGPositionTemp) GetDirX() string {
	if x != nil && x.DirX != nil {
		return *x.DirX
	}
	return ""
}

func (x *BallGVGPositionTemp) GetDirY() string {
	if x != nil && x.DirY != nil {
		return *x.DirY
	}
	return ""
}

func (x *BallGVGPositionTemp) GetTime() int64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

type BallGVGPlaceDataTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaceId   *int32                  `protobuf:"varint,1,req,name=placeId" json:"placeId,omitempty"`
	User      []*BallGVGOtherUserTemp `protobuf:"bytes,2,rep,name=user" json:"user,omitempty"`
	SeizeTime *int64                  `protobuf:"varint,3,req,name=seizeTime" json:"seizeTime,omitempty"`
	CampId    *int32                  `protobuf:"varint,4,req,name=campId" json:"campId,omitempty"`
}

func (x *BallGVGPlaceDataTemp) Reset() {
	*x = BallGVGPlaceDataTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGPlaceDataTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGPlaceDataTemp) ProtoMessage() {}

func (x *BallGVGPlaceDataTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGPlaceDataTemp.ProtoReflect.Descriptor instead.
func (*BallGVGPlaceDataTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{9}
}

func (x *BallGVGPlaceDataTemp) GetPlaceId() int32 {
	if x != nil && x.PlaceId != nil {
		return *x.PlaceId
	}
	return 0
}

func (x *BallGVGPlaceDataTemp) GetUser() []*BallGVGOtherUserTemp {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *BallGVGPlaceDataTemp) GetSeizeTime() int64 {
	if x != nil && x.SeizeTime != nil {
		return *x.SeizeTime
	}
	return 0
}

func (x *BallGVGPlaceDataTemp) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

type BallGVGPlaceSeizeInfoTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampId    *int32 `protobuf:"varint,1,req,name=campId" json:"campId,omitempty"`
	SeizeTime *int32 `protobuf:"varint,2,req,name=seizeTime" json:"seizeTime,omitempty"`
	Num       *int32 `protobuf:"varint,3,req,name=num" json:"num,omitempty"`
}

func (x *BallGVGPlaceSeizeInfoTemp) Reset() {
	*x = BallGVGPlaceSeizeInfoTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGPlaceSeizeInfoTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGPlaceSeizeInfoTemp) ProtoMessage() {}

func (x *BallGVGPlaceSeizeInfoTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGPlaceSeizeInfoTemp.ProtoReflect.Descriptor instead.
func (*BallGVGPlaceSeizeInfoTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{10}
}

func (x *BallGVGPlaceSeizeInfoTemp) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

func (x *BallGVGPlaceSeizeInfoTemp) GetSeizeTime() int32 {
	if x != nil && x.SeizeTime != nil {
		return *x.SeizeTime
	}
	return 0
}

func (x *BallGVGPlaceSeizeInfoTemp) GetNum() int32 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

type BallGVGCampScoreTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampId     *int32 `protobuf:"varint,1,req,name=campId" json:"campId,omitempty"`
	Score      *int64 `protobuf:"varint,2,req,name=score" json:"score,omitempty"`
	Rank       *int32 `protobuf:"varint,3,req,name=rank" json:"rank,omitempty"`
	TotalScore *int64 `protobuf:"varint,4,req,name=totalScore" json:"totalScore,omitempty"`
	TotalRank  *int32 `protobuf:"varint,5,req,name=totalRank" json:"totalRank,omitempty"`
}

func (x *BallGVGCampScoreTemp) Reset() {
	*x = BallGVGCampScoreTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGCampScoreTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGCampScoreTemp) ProtoMessage() {}

func (x *BallGVGCampScoreTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGCampScoreTemp.ProtoReflect.Descriptor instead.
func (*BallGVGCampScoreTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{11}
}

func (x *BallGVGCampScoreTemp) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

func (x *BallGVGCampScoreTemp) GetScore() int64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *BallGVGCampScoreTemp) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *BallGVGCampScoreTemp) GetTotalScore() int64 {
	if x != nil && x.TotalScore != nil {
		return *x.TotalScore
	}
	return 0
}

func (x *BallGVGCampScoreTemp) GetTotalRank() int32 {
	if x != nil && x.TotalRank != nil {
		return *x.TotalRank
	}
	return 0
}

type BallGVGCampScoreSyncTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampId *int32 `protobuf:"varint,1,req,name=campId" json:"campId,omitempty"`
	Score  *int64 `protobuf:"varint,2,req,name=score" json:"score,omitempty"`
}

func (x *BallGVGCampScoreSyncTemp) Reset() {
	*x = BallGVGCampScoreSyncTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGCampScoreSyncTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGCampScoreSyncTemp) ProtoMessage() {}

func (x *BallGVGCampScoreSyncTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGCampScoreSyncTemp.ProtoReflect.Descriptor instead.
func (*BallGVGCampScoreSyncTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{12}
}

func (x *BallGVGCampScoreSyncTemp) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

func (x *BallGVGCampScoreSyncTemp) GetScore() int64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

type BallGVGPlaceConfigTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId   *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Id           *int32  `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Type         *int32  `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
	Name         *string `protobuf:"bytes,4,req,name=name" json:"name,omitempty"`
	Level        *int32  `protobuf:"varint,5,req,name=level" json:"level,omitempty"`
	Radius       *int32  `protobuf:"varint,6,req,name=radius" json:"radius,omitempty"`
	SeizeScore   *int32  `protobuf:"varint,7,req,name=seizeScore" json:"seizeScore,omitempty"`
	SeizeProduce *int32  `protobuf:"varint,8,req,name=seizeProduce" json:"seizeProduce,omitempty"`
}

func (x *BallGVGPlaceConfigTemp) Reset() {
	*x = BallGVGPlaceConfigTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGPlaceConfigTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGPlaceConfigTemp) ProtoMessage() {}

func (x *BallGVGPlaceConfigTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGPlaceConfigTemp.ProtoReflect.Descriptor instead.
func (*BallGVGPlaceConfigTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{13}
}

func (x *BallGVGPlaceConfigTemp) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *BallGVGPlaceConfigTemp) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *BallGVGPlaceConfigTemp) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *BallGVGPlaceConfigTemp) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BallGVGPlaceConfigTemp) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *BallGVGPlaceConfigTemp) GetRadius() int32 {
	if x != nil && x.Radius != nil {
		return *x.Radius
	}
	return 0
}

func (x *BallGVGPlaceConfigTemp) GetSeizeScore() int32 {
	if x != nil && x.SeizeScore != nil {
		return *x.SeizeScore
	}
	return 0
}

func (x *BallGVGPlaceConfigTemp) GetSeizeProduce() int32 {
	if x != nil && x.SeizeProduce != nil {
		return *x.SeizeProduce
	}
	return 0
}

type BallGVGPlaceSimpleTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaceId     *int32                        `protobuf:"varint,1,req,name=placeId" json:"placeId,omitempty"`
	SeizeCampId *int32                        `protobuf:"varint,2,req,name=seizeCampId" json:"seizeCampId,omitempty"`
	CampMember  []*BallGVGPlaceCampMemberTemp `protobuf:"bytes,3,rep,name=campMember" json:"campMember,omitempty"`
}

func (x *BallGVGPlaceSimpleTemp) Reset() {
	*x = BallGVGPlaceSimpleTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGPlaceSimpleTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGPlaceSimpleTemp) ProtoMessage() {}

func (x *BallGVGPlaceSimpleTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGPlaceSimpleTemp.ProtoReflect.Descriptor instead.
func (*BallGVGPlaceSimpleTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{14}
}

func (x *BallGVGPlaceSimpleTemp) GetPlaceId() int32 {
	if x != nil && x.PlaceId != nil {
		return *x.PlaceId
	}
	return 0
}

func (x *BallGVGPlaceSimpleTemp) GetSeizeCampId() int32 {
	if x != nil && x.SeizeCampId != nil {
		return *x.SeizeCampId
	}
	return 0
}

func (x *BallGVGPlaceSimpleTemp) GetCampMember() []*BallGVGPlaceCampMemberTemp {
	if x != nil {
		return x.CampMember
	}
	return nil
}

type BallGVGPlaceCampMemberTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampId *int32 `protobuf:"varint,1,req,name=campId" json:"campId,omitempty"`
	Num    *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
}

func (x *BallGVGPlaceCampMemberTemp) Reset() {
	*x = BallGVGPlaceCampMemberTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGPlaceCampMemberTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGPlaceCampMemberTemp) ProtoMessage() {}

func (x *BallGVGPlaceCampMemberTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGPlaceCampMemberTemp.ProtoReflect.Descriptor instead.
func (*BallGVGPlaceCampMemberTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{15}
}

func (x *BallGVGPlaceCampMemberTemp) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

func (x *BallGVGPlaceCampMemberTemp) GetNum() int32 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

type BallGVGBestPerformanceTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kill  *BallGVGBattleScoreUserTemp `protobuf:"bytes,1,opt,name=kill" json:"kill,omitempty"`
	Seize *BallGVGBattleScoreUserTemp `protobuf:"bytes,2,opt,name=seize" json:"seize,omitempty"`
}

func (x *BallGVGBestPerformanceTemp) Reset() {
	*x = BallGVGBestPerformanceTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGBestPerformanceTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGBestPerformanceTemp) ProtoMessage() {}

func (x *BallGVGBestPerformanceTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGBestPerformanceTemp.ProtoReflect.Descriptor instead.
func (*BallGVGBestPerformanceTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{16}
}

func (x *BallGVGBestPerformanceTemp) GetKill() *BallGVGBattleScoreUserTemp {
	if x != nil {
		return x.Kill
	}
	return nil
}

func (x *BallGVGBestPerformanceTemp) GetSeize() *BallGVGBattleScoreUserTemp {
	if x != nil {
		return x.Seize
	}
	return nil
}

type BallGVGBattleScoreUserTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *int64                   `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	User     *PlayerCharacterImageMsg `protobuf:"bytes,2,req,name=user" json:"user,omitempty"`
	Score    *BallGVGBattleScoreTemp  `protobuf:"bytes,3,req,name=score" json:"score,omitempty"`
	CampId   *int32                   `protobuf:"varint,4,req,name=campId" json:"campId,omitempty"`
}

func (x *BallGVGBattleScoreUserTemp) Reset() {
	*x = BallGVGBattleScoreUserTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGBattleScoreUserTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGBattleScoreUserTemp) ProtoMessage() {}

func (x *BallGVGBattleScoreUserTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGBattleScoreUserTemp.ProtoReflect.Descriptor instead.
func (*BallGVGBattleScoreUserTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{17}
}

func (x *BallGVGBattleScoreUserTemp) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *BallGVGBattleScoreUserTemp) GetUser() *PlayerCharacterImageMsg {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *BallGVGBattleScoreUserTemp) GetScore() *BallGVGBattleScoreTemp {
	if x != nil {
		return x.Score
	}
	return nil
}

func (x *BallGVGBattleScoreUserTemp) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

type BallGVGBattleScoreTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kill       *int32 `protobuf:"varint,1,req,name=kill" json:"kill,omitempty"`
	KillScore  *int64 `protobuf:"varint,2,req,name=killScore" json:"killScore,omitempty"`
	Seize      *int32 `protobuf:"varint,3,req,name=seize" json:"seize,omitempty"`
	SeizeScore *int64 `protobuf:"varint,4,req,name=seizeScore" json:"seizeScore,omitempty"`
}

func (x *BallGVGBattleScoreTemp) Reset() {
	*x = BallGVGBattleScoreTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGBattleScoreTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGBattleScoreTemp) ProtoMessage() {}

func (x *BallGVGBattleScoreTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGBattleScoreTemp.ProtoReflect.Descriptor instead.
func (*BallGVGBattleScoreTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{18}
}

func (x *BallGVGBattleScoreTemp) GetKill() int32 {
	if x != nil && x.Kill != nil {
		return *x.Kill
	}
	return 0
}

func (x *BallGVGBattleScoreTemp) GetKillScore() int64 {
	if x != nil && x.KillScore != nil {
		return *x.KillScore
	}
	return 0
}

func (x *BallGVGBattleScoreTemp) GetSeize() int32 {
	if x != nil && x.Seize != nil {
		return *x.Seize
	}
	return 0
}

func (x *BallGVGBattleScoreTemp) GetSeizeScore() int64 {
	if x != nil && x.SeizeScore != nil {
		return *x.SeizeScore
	}
	return 0
}

type BallGVGEndDataTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleScore         *BallGVGBattleScoreTemp     `protobuf:"bytes,1,req,name=battleScore" json:"battleScore,omitempty"`
	CampScore           []*BallGVGCampScoreTemp     `protobuf:"bytes,2,rep,name=campScore" json:"campScore,omitempty"`
	BestPerformance     *BallGVGBestPerformanceTemp `protobuf:"bytes,3,req,name=bestPerformance" json:"bestPerformance,omitempty"`
	CampBestPerformance *BallGVGBestPerformanceTemp `protobuf:"bytes,4,req,name=campBestPerformance" json:"campBestPerformance,omitempty"`
	Score               *int64                      `protobuf:"varint,5,req,name=score" json:"score,omitempty"`
	Rank                *int32                      `protobuf:"varint,6,req,name=rank" json:"rank,omitempty"`
}

func (x *BallGVGEndDataTemp) Reset() {
	*x = BallGVGEndDataTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGEndDataTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGEndDataTemp) ProtoMessage() {}

func (x *BallGVGEndDataTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGEndDataTemp.ProtoReflect.Descriptor instead.
func (*BallGVGEndDataTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{19}
}

func (x *BallGVGEndDataTemp) GetBattleScore() *BallGVGBattleScoreTemp {
	if x != nil {
		return x.BattleScore
	}
	return nil
}

func (x *BallGVGEndDataTemp) GetCampScore() []*BallGVGCampScoreTemp {
	if x != nil {
		return x.CampScore
	}
	return nil
}

func (x *BallGVGEndDataTemp) GetBestPerformance() *BallGVGBestPerformanceTemp {
	if x != nil {
		return x.BestPerformance
	}
	return nil
}

func (x *BallGVGEndDataTemp) GetCampBestPerformance() *BallGVGBestPerformanceTemp {
	if x != nil {
		return x.CampBestPerformance
	}
	return nil
}

func (x *BallGVGEndDataTemp) GetScore() int64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *BallGVGEndDataTemp) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

type BallGVGUnionNameListReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *BallGVGUnionNameListReqMsg) Reset() {
	*x = BallGVGUnionNameListReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGUnionNameListReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGUnionNameListReqMsg) ProtoMessage() {}

func (x *BallGVGUnionNameListReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGUnionNameListReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGUnionNameListReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{20}
}

func (x *BallGVGUnionNameListReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type BallGVGUnionNameListRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       *int32   `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	UnionName []string `protobuf:"bytes,2,rep,name=unionName" json:"unionName,omitempty"`
}

func (x *BallGVGUnionNameListRespMsg) Reset() {
	*x = BallGVGUnionNameListRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGUnionNameListRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGUnionNameListRespMsg) ProtoMessage() {}

func (x *BallGVGUnionNameListRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGUnionNameListRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGUnionNameListRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{21}
}

func (x *BallGVGUnionNameListRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *BallGVGUnionNameListRespMsg) GetUnionName() []string {
	if x != nil {
		return x.UnionName
	}
	return nil
}

type BallGVGApplicationReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *BallGVGApplicationReqMsg) Reset() {
	*x = BallGVGApplicationReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGApplicationReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGApplicationReqMsg) ProtoMessage() {}

func (x *BallGVGApplicationReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGApplicationReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGApplicationReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{22}
}

func (x *BallGVGApplicationReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type BallGVGApplicationRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *BallGVGApplicationRespMsg) Reset() {
	*x = BallGVGApplicationRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGApplicationRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGApplicationRespMsg) ProtoMessage() {}

func (x *BallGVGApplicationRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGApplicationRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGApplicationRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{23}
}

func (x *BallGVGApplicationRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type BallGVGAbilityRankNumReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *BallGVGAbilityRankNumReqMsg) Reset() {
	*x = BallGVGAbilityRankNumReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGAbilityRankNumReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGAbilityRankNumReqMsg) ProtoMessage() {}

func (x *BallGVGAbilityRankNumReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGAbilityRankNumReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGAbilityRankNumReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{24}
}

func (x *BallGVGAbilityRankNumReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type BallGVGAbilityRankNumRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	MyRank *int32 `protobuf:"varint,2,opt,name=myRank" json:"myRank,omitempty"`
}

func (x *BallGVGAbilityRankNumRespMsg) Reset() {
	*x = BallGVGAbilityRankNumRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGAbilityRankNumRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGAbilityRankNumRespMsg) ProtoMessage() {}

func (x *BallGVGAbilityRankNumRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGAbilityRankNumRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGAbilityRankNumRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{25}
}

func (x *BallGVGAbilityRankNumRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *BallGVGAbilityRankNumRespMsg) GetMyRank() int32 {
	if x != nil && x.MyRank != nil {
		return *x.MyRank
	}
	return 0
}

type BallGVGEnterActivityReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *BallGVGEnterActivityReqMsg) Reset() {
	*x = BallGVGEnterActivityReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGEnterActivityReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGEnterActivityReqMsg) ProtoMessage() {}

func (x *BallGVGEnterActivityReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGEnterActivityReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGEnterActivityReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{26}
}

func (x *BallGVGEnterActivityReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type BallGVGEnterActivityRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32                      `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	UserData   *BallGVGUserDataTemp        `protobuf:"bytes,2,opt,name=userData" json:"userData,omitempty"`
	Camp       *BallGVGCampTemp            `protobuf:"bytes,3,opt,name=camp" json:"camp,omitempty"`
	PlaceData  *BallGVGPlaceDataTemp       `protobuf:"bytes,4,opt,name=placeData" json:"placeData,omitempty"`
	Score      []*BallGVGCampScoreSyncTemp `protobuf:"bytes,5,rep,name=score" json:"score,omitempty"`
	NoticeList *BallGVGNoticeListMsg       `protobuf:"bytes,6,opt,name=noticeList" json:"noticeList,omitempty"`
	MinLv      *int32                      `protobuf:"varint,7,opt,name=minLv" json:"minLv,omitempty"`
	MaxLv      *int32                      `protobuf:"varint,8,opt,name=maxLv" json:"maxLv,omitempty"`
}

func (x *BallGVGEnterActivityRespMsg) Reset() {
	*x = BallGVGEnterActivityRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGEnterActivityRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGEnterActivityRespMsg) ProtoMessage() {}

func (x *BallGVGEnterActivityRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGEnterActivityRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGEnterActivityRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{27}
}

func (x *BallGVGEnterActivityRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *BallGVGEnterActivityRespMsg) GetUserData() *BallGVGUserDataTemp {
	if x != nil {
		return x.UserData
	}
	return nil
}

func (x *BallGVGEnterActivityRespMsg) GetCamp() *BallGVGCampTemp {
	if x != nil {
		return x.Camp
	}
	return nil
}

func (x *BallGVGEnterActivityRespMsg) GetPlaceData() *BallGVGPlaceDataTemp {
	if x != nil {
		return x.PlaceData
	}
	return nil
}

func (x *BallGVGEnterActivityRespMsg) GetScore() []*BallGVGCampScoreSyncTemp {
	if x != nil {
		return x.Score
	}
	return nil
}

func (x *BallGVGEnterActivityRespMsg) GetNoticeList() *BallGVGNoticeListMsg {
	if x != nil {
		return x.NoticeList
	}
	return nil
}

func (x *BallGVGEnterActivityRespMsg) GetMinLv() int32 {
	if x != nil && x.MinLv != nil {
		return *x.MinLv
	}
	return 0
}

func (x *BallGVGEnterActivityRespMsg) GetMaxLv() int32 {
	if x != nil && x.MaxLv != nil {
		return *x.MaxLv
	}
	return 0
}

type BallGVGEnterPlaceReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PlaceId    *int32 `protobuf:"varint,2,req,name=placeId" json:"placeId,omitempty"`
}

func (x *BallGVGEnterPlaceReqMsg) Reset() {
	*x = BallGVGEnterPlaceReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGEnterPlaceReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGEnterPlaceReqMsg) ProtoMessage() {}

func (x *BallGVGEnterPlaceReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGEnterPlaceReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGEnterPlaceReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{28}
}

func (x *BallGVGEnterPlaceReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *BallGVGEnterPlaceReqMsg) GetPlaceId() int32 {
	if x != nil && x.PlaceId != nil {
		return *x.PlaceId
	}
	return 0
}

type BallGVGEnterPlaceRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32                `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	PlaceData    *BallGVGPlaceDataTemp `protobuf:"bytes,2,opt,name=placeData" json:"placeData,omitempty"`
	PlaceId      *int32                `protobuf:"varint,3,opt,name=placeId" json:"placeId,omitempty"`
	TransferTime *int64                `protobuf:"varint,4,opt,name=transferTime" json:"transferTime,omitempty"`
}

func (x *BallGVGEnterPlaceRespMsg) Reset() {
	*x = BallGVGEnterPlaceRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGEnterPlaceRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGEnterPlaceRespMsg) ProtoMessage() {}

func (x *BallGVGEnterPlaceRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGEnterPlaceRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGEnterPlaceRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{29}
}

func (x *BallGVGEnterPlaceRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *BallGVGEnterPlaceRespMsg) GetPlaceData() *BallGVGPlaceDataTemp {
	if x != nil {
		return x.PlaceData
	}
	return nil
}

func (x *BallGVGEnterPlaceRespMsg) GetPlaceId() int32 {
	if x != nil && x.PlaceId != nil {
		return *x.PlaceId
	}
	return 0
}

func (x *BallGVGEnterPlaceRespMsg) GetTransferTime() int64 {
	if x != nil && x.TransferTime != nil {
		return *x.TransferTime
	}
	return 0
}

type BallGVGLeavePlaceReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *BallGVGLeavePlaceReqMsg) Reset() {
	*x = BallGVGLeavePlaceReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGLeavePlaceReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGLeavePlaceReqMsg) ProtoMessage() {}

func (x *BallGVGLeavePlaceReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGLeavePlaceReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGLeavePlaceReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{30}
}

func (x *BallGVGLeavePlaceReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type BallGVGLeavePlaceRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *BallGVGLeavePlaceRespMsg) Reset() {
	*x = BallGVGLeavePlaceRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGLeavePlaceRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGLeavePlaceRespMsg) ProtoMessage() {}

func (x *BallGVGLeavePlaceRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGLeavePlaceRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGLeavePlaceRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{31}
}

func (x *BallGVGLeavePlaceRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type BallGVGMoveReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32               `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Position   *BallGVGPositionTemp `protobuf:"bytes,2,req,name=position" json:"position,omitempty"`
}

func (x *BallGVGMoveReqMsg) Reset() {
	*x = BallGVGMoveReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGMoveReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGMoveReqMsg) ProtoMessage() {}

func (x *BallGVGMoveReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGMoveReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGMoveReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{32}
}

func (x *BallGVGMoveReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *BallGVGMoveReqMsg) GetPosition() *BallGVGPositionTemp {
	if x != nil {
		return x.Position
	}
	return nil
}

type BallGVGMoveRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *BallGVGMoveRespMsg) Reset() {
	*x = BallGVGMoveRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGMoveRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGMoveRespMsg) ProtoMessage() {}

func (x *BallGVGMoveRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGMoveRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGMoveRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{33}
}

func (x *BallGVGMoveRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type BallGVGAttackReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId     *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	AttackPlayerId *int64 `protobuf:"varint,2,req,name=attackPlayerId" json:"attackPlayerId,omitempty"`
}

func (x *BallGVGAttackReqMsg) Reset() {
	*x = BallGVGAttackReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGAttackReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGAttackReqMsg) ProtoMessage() {}

func (x *BallGVGAttackReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGAttackReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGAttackReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{34}
}

func (x *BallGVGAttackReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *BallGVGAttackReqMsg) GetAttackPlayerId() int64 {
	if x != nil && x.AttackPlayerId != nil {
		return *x.AttackPlayerId
	}
	return 0
}

type BallGVGAttackRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret         *int32                        `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	AttackTime  *int64                        `protobuf:"varint,2,opt,name=attackTime" json:"attackTime,omitempty"`
	Attack      *BallGVGAttackedTemp          `protobuf:"bytes,3,opt,name=attack" json:"attack,omitempty"`
	AttackScore *int64                        `protobuf:"varint,4,opt,name=attackScore" json:"attackScore,omitempty"`
	UserData    *BallGVGUserDataTemp          `protobuf:"bytes,5,opt,name=userData" json:"userData,omitempty"`
	ScoreResult *BallGVGBattleScoreResultTemp `protobuf:"bytes,6,opt,name=scoreResult" json:"scoreResult,omitempty"`
}

func (x *BallGVGAttackRespMsg) Reset() {
	*x = BallGVGAttackRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGAttackRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGAttackRespMsg) ProtoMessage() {}

func (x *BallGVGAttackRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGAttackRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGAttackRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{35}
}

func (x *BallGVGAttackRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *BallGVGAttackRespMsg) GetAttackTime() int64 {
	if x != nil && x.AttackTime != nil {
		return *x.AttackTime
	}
	return 0
}

func (x *BallGVGAttackRespMsg) GetAttack() *BallGVGAttackedTemp {
	if x != nil {
		return x.Attack
	}
	return nil
}

func (x *BallGVGAttackRespMsg) GetAttackScore() int64 {
	if x != nil && x.AttackScore != nil {
		return *x.AttackScore
	}
	return 0
}

func (x *BallGVGAttackRespMsg) GetUserData() *BallGVGUserDataTemp {
	if x != nil {
		return x.UserData
	}
	return nil
}

func (x *BallGVGAttackRespMsg) GetScoreResult() *BallGVGBattleScoreResultTemp {
	if x != nil {
		return x.ScoreResult
	}
	return nil
}

type BallGVGAppointMajorUserReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId    *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	MajorPlayerId *int64 `protobuf:"varint,2,req,name=majorPlayerId" json:"majorPlayerId,omitempty"`
}

func (x *BallGVGAppointMajorUserReqMsg) Reset() {
	*x = BallGVGAppointMajorUserReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGAppointMajorUserReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGAppointMajorUserReqMsg) ProtoMessage() {}

func (x *BallGVGAppointMajorUserReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGAppointMajorUserReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGAppointMajorUserReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{36}
}

func (x *BallGVGAppointMajorUserReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *BallGVGAppointMajorUserReqMsg) GetMajorPlayerId() int64 {
	if x != nil && x.MajorPlayerId != nil {
		return *x.MajorPlayerId
	}
	return 0
}

type BallGVGAppointMajorUserRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	MajorPlayerId *int64 `protobuf:"varint,2,opt,name=majorPlayerId" json:"majorPlayerId,omitempty"`
}

func (x *BallGVGAppointMajorUserRespMsg) Reset() {
	*x = BallGVGAppointMajorUserRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGAppointMajorUserRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGAppointMajorUserRespMsg) ProtoMessage() {}

func (x *BallGVGAppointMajorUserRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGAppointMajorUserRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGAppointMajorUserRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{37}
}

func (x *BallGVGAppointMajorUserRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *BallGVGAppointMajorUserRespMsg) GetMajorPlayerId() int64 {
	if x != nil && x.MajorPlayerId != nil {
		return *x.MajorPlayerId
	}
	return 0
}

type BallGVGMarkPlaceReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PlaceId    *int32 `protobuf:"varint,2,req,name=placeId" json:"placeId,omitempty"`
}

func (x *BallGVGMarkPlaceReqMsg) Reset() {
	*x = BallGVGMarkPlaceReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGMarkPlaceReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGMarkPlaceReqMsg) ProtoMessage() {}

func (x *BallGVGMarkPlaceReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGMarkPlaceReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGMarkPlaceReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{38}
}

func (x *BallGVGMarkPlaceReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *BallGVGMarkPlaceReqMsg) GetPlaceId() int32 {
	if x != nil && x.PlaceId != nil {
		return *x.PlaceId
	}
	return 0
}

type BallGVGMarkPlaceRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *BallGVGMarkPlaceRespMsg) Reset() {
	*x = BallGVGMarkPlaceRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGMarkPlaceRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGMarkPlaceRespMsg) ProtoMessage() {}

func (x *BallGVGMarkPlaceRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGMarkPlaceRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGMarkPlaceRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{39}
}

func (x *BallGVGMarkPlaceRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type BallGVGLeaveActivityReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *BallGVGLeaveActivityReqMsg) Reset() {
	*x = BallGVGLeaveActivityReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGLeaveActivityReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGLeaveActivityReqMsg) ProtoMessage() {}

func (x *BallGVGLeaveActivityReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGLeaveActivityReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGLeaveActivityReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{40}
}

func (x *BallGVGLeaveActivityReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type BallGVGLeaveActivityRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *BallGVGLeaveActivityRespMsg) Reset() {
	*x = BallGVGLeaveActivityRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGLeaveActivityRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGLeaveActivityRespMsg) ProtoMessage() {}

func (x *BallGVGLeaveActivityRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGLeaveActivityRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGLeaveActivityRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{41}
}

func (x *BallGVGLeaveActivityRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type BallGVGGetPlaceInfoReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *BallGVGGetPlaceInfoReqMsg) Reset() {
	*x = BallGVGGetPlaceInfoReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGGetPlaceInfoReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGGetPlaceInfoReqMsg) ProtoMessage() {}

func (x *BallGVGGetPlaceInfoReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGGetPlaceInfoReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGGetPlaceInfoReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{42}
}

func (x *BallGVGGetPlaceInfoReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type BallGVGGetPlaceInfoRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   *int32                    `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Place []*BallGVGPlaceSimpleTemp `protobuf:"bytes,2,rep,name=place" json:"place,omitempty"`
}

func (x *BallGVGGetPlaceInfoRespMsg) Reset() {
	*x = BallGVGGetPlaceInfoRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGGetPlaceInfoRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGGetPlaceInfoRespMsg) ProtoMessage() {}

func (x *BallGVGGetPlaceInfoRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGGetPlaceInfoRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGGetPlaceInfoRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{43}
}

func (x *BallGVGGetPlaceInfoRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *BallGVGGetPlaceInfoRespMsg) GetPlace() []*BallGVGPlaceSimpleTemp {
	if x != nil {
		return x.Place
	}
	return nil
}

type BallGVGGetUserRankReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	CampId     *int32 `protobuf:"varint,2,req,name=campId" json:"campId,omitempty"`
}

func (x *BallGVGGetUserRankReqMsg) Reset() {
	*x = BallGVGGetUserRankReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGGetUserRankReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGGetUserRankReqMsg) ProtoMessage() {}

func (x *BallGVGGetUserRankReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGGetUserRankReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGGetUserRankReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{44}
}

func (x *BallGVGGetUserRankReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *BallGVGGetUserRankReqMsg) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

type BallGVGGetUserRankRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32                `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Rank         []*BallGVGUserRankMsg `protobuf:"bytes,2,rep,name=rank" json:"rank,omitempty"`
	MyFightValue *int64                `protobuf:"varint,3,req,name=myFightValue" json:"myFightValue,omitempty"`
	MyValue      *int64                `protobuf:"varint,4,opt,name=myValue" json:"myValue,omitempty"`
	MyRank       *int64                `protobuf:"varint,5,opt,name=myRank" json:"myRank,omitempty"`
}

func (x *BallGVGGetUserRankRespMsg) Reset() {
	*x = BallGVGGetUserRankRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGGetUserRankRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGGetUserRankRespMsg) ProtoMessage() {}

func (x *BallGVGGetUserRankRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGGetUserRankRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGGetUserRankRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{45}
}

func (x *BallGVGGetUserRankRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *BallGVGGetUserRankRespMsg) GetRank() []*BallGVGUserRankMsg {
	if x != nil {
		return x.Rank
	}
	return nil
}

func (x *BallGVGGetUserRankRespMsg) GetMyFightValue() int64 {
	if x != nil && x.MyFightValue != nil {
		return *x.MyFightValue
	}
	return 0
}

func (x *BallGVGGetUserRankRespMsg) GetMyValue() int64 {
	if x != nil && x.MyValue != nil {
		return *x.MyValue
	}
	return 0
}

func (x *BallGVGGetUserRankRespMsg) GetMyRank() int64 {
	if x != nil && x.MyRank != nil {
		return *x.MyRank
	}
	return 0
}

type BallGVGUserRankList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankTemp []*BallGVGUserRankMsg `protobuf:"bytes,1,rep,name=rankTemp" json:"rankTemp,omitempty"`
}

func (x *BallGVGUserRankList) Reset() {
	*x = BallGVGUserRankList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGUserRankList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGUserRankList) ProtoMessage() {}

func (x *BallGVGUserRankList) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGUserRankList.ProtoReflect.Descriptor instead.
func (*BallGVGUserRankList) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{46}
}

func (x *BallGVGUserRankList) GetRankTemp() []*BallGVGUserRankMsg {
	if x != nil {
		return x.RankTemp
	}
	return nil
}

type BallGVGUserRankMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId       *int64                   `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	PlayerBaseData *PlayerCharacterImageMsg `protobuf:"bytes,2,req,name=playerBaseData" json:"playerBaseData,omitempty"`
	Value          *int64                   `protobuf:"varint,3,req,name=value" json:"value,omitempty"`
	CampId         *int32                   `protobuf:"varint,4,req,name=campId" json:"campId,omitempty"`
	FightValue     *int64                   `protobuf:"varint,5,req,name=fightValue" json:"fightValue,omitempty"`
}

func (x *BallGVGUserRankMsg) Reset() {
	*x = BallGVGUserRankMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGUserRankMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGUserRankMsg) ProtoMessage() {}

func (x *BallGVGUserRankMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGUserRankMsg.ProtoReflect.Descriptor instead.
func (*BallGVGUserRankMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{47}
}

func (x *BallGVGUserRankMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *BallGVGUserRankMsg) GetPlayerBaseData() *PlayerCharacterImageMsg {
	if x != nil {
		return x.PlayerBaseData
	}
	return nil
}

func (x *BallGVGUserRankMsg) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *BallGVGUserRankMsg) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

func (x *BallGVGUserRankMsg) GetFightValue() int64 {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return 0
}

type BallGVGUnionRankList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankTemp []*BallGVGUnionRankMsg `protobuf:"bytes,1,rep,name=rankTemp" json:"rankTemp,omitempty"`
}

func (x *BallGVGUnionRankList) Reset() {
	*x = BallGVGUnionRankList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGUnionRankList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGUnionRankList) ProtoMessage() {}

func (x *BallGVGUnionRankList) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGUnionRankList.ProtoReflect.Descriptor instead.
func (*BallGVGUnionRankList) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{48}
}

func (x *BallGVGUnionRankList) GetRankTemp() []*BallGVGUnionRankMsg {
	if x != nil {
		return x.RankTemp
	}
	return nil
}

type BallGVGUnionRankMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseData *OtherUnionData `protobuf:"bytes,1,opt,name=baseData" json:"baseData,omitempty"`
	Value    *int64          `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	CampId   *int32          `protobuf:"varint,3,opt,name=campId" json:"campId,omitempty"`
}

func (x *BallGVGUnionRankMsg) Reset() {
	*x = BallGVGUnionRankMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGUnionRankMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGUnionRankMsg) ProtoMessage() {}

func (x *BallGVGUnionRankMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGUnionRankMsg.ProtoReflect.Descriptor instead.
func (*BallGVGUnionRankMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{49}
}

func (x *BallGVGUnionRankMsg) GetBaseData() *OtherUnionData {
	if x != nil {
		return x.BaseData
	}
	return nil
}

func (x *BallGVGUnionRankMsg) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *BallGVGUnionRankMsg) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

type BallGVGCampRankList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankTemp []*BallGVGCampRankMsg `protobuf:"bytes,1,rep,name=rankTemp" json:"rankTemp,omitempty"`
}

func (x *BallGVGCampRankList) Reset() {
	*x = BallGVGCampRankList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGCampRankList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGCampRankList) ProtoMessage() {}

func (x *BallGVGCampRankList) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGCampRankList.ProtoReflect.Descriptor instead.
func (*BallGVGCampRankList) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{50}
}

func (x *BallGVGCampRankList) GetRankTemp() []*BallGVGCampRankMsg {
	if x != nil {
		return x.RankTemp
	}
	return nil
}

type BallGVGCampRankMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampId *int32 `protobuf:"varint,1,req,name=campId" json:"campId,omitempty"`
	Value  *int64 `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
}

func (x *BallGVGCampRankMsg) Reset() {
	*x = BallGVGCampRankMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGCampRankMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGCampRankMsg) ProtoMessage() {}

func (x *BallGVGCampRankMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGCampRankMsg.ProtoReflect.Descriptor instead.
func (*BallGVGCampRankMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{51}
}

func (x *BallGVGCampRankMsg) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

func (x *BallGVGCampRankMsg) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type BallGVGGetUnionUserListReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	ServerId   *int64 `protobuf:"varint,2,req,name=serverId" json:"serverId,omitempty"`
	UnionId    *int64 `protobuf:"varint,3,req,name=unionId" json:"unionId,omitempty"`
}

func (x *BallGVGGetUnionUserListReqMsg) Reset() {
	*x = BallGVGGetUnionUserListReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGGetUnionUserListReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGGetUnionUserListReqMsg) ProtoMessage() {}

func (x *BallGVGGetUnionUserListReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGGetUnionUserListReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGGetUnionUserListReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{52}
}

func (x *BallGVGGetUnionUserListReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *BallGVGGetUnionUserListReqMsg) GetServerId() int64 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

func (x *BallGVGGetUnionUserListReqMsg) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

type BallGVGGetUnionUserListRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                  *int32                     `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	UnionMemberScoreList []*BallGVGUnionMemberScore `protobuf:"bytes,2,rep,name=unionMemberScoreList" json:"unionMemberScoreList,omitempty"`
}

func (x *BallGVGGetUnionUserListRespMsg) Reset() {
	*x = BallGVGGetUnionUserListRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGGetUnionUserListRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGGetUnionUserListRespMsg) ProtoMessage() {}

func (x *BallGVGGetUnionUserListRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGGetUnionUserListRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGGetUnionUserListRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{53}
}

func (x *BallGVGGetUnionUserListRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *BallGVGGetUnionUserListRespMsg) GetUnionMemberScoreList() []*BallGVGUnionMemberScore {
	if x != nil {
		return x.UnionMemberScoreList
	}
	return nil
}

type BallGVGUnionMemberScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   *int64  `protobuf:"varint,1,opt,name=playerId" json:"playerId,omitempty"`
	MemberName *string `protobuf:"bytes,2,opt,name=memberName" json:"memberName,omitempty"`
	Score      *int32  `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
}

func (x *BallGVGUnionMemberScore) Reset() {
	*x = BallGVGUnionMemberScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGUnionMemberScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGUnionMemberScore) ProtoMessage() {}

func (x *BallGVGUnionMemberScore) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGUnionMemberScore.ProtoReflect.Descriptor instead.
func (*BallGVGUnionMemberScore) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{54}
}

func (x *BallGVGUnionMemberScore) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *BallGVGUnionMemberScore) GetMemberName() string {
	if x != nil && x.MemberName != nil {
		return *x.MemberName
	}
	return ""
}

func (x *BallGVGUnionMemberScore) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

type BallGVGConfigSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaceConfig []*BallGVGPlaceConfigTemp `protobuf:"bytes,1,rep,name=placeConfig" json:"placeConfig,omitempty"`
}

func (x *BallGVGConfigSyncMsg) Reset() {
	*x = BallGVGConfigSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGConfigSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGConfigSyncMsg) ProtoMessage() {}

func (x *BallGVGConfigSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGConfigSyncMsg.ProtoReflect.Descriptor instead.
func (*BallGVGConfigSyncMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{55}
}

func (x *BallGVGConfigSyncMsg) GetPlaceConfig() []*BallGVGPlaceConfigTemp {
	if x != nil {
		return x.PlaceConfig
	}
	return nil
}

type BallGVGAttackedSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attack []*BallGVGAttackedTemp `protobuf:"bytes,1,rep,name=attack" json:"attack,omitempty"`
}

func (x *BallGVGAttackedSyncMsg) Reset() {
	*x = BallGVGAttackedSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGAttackedSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGAttackedSyncMsg) ProtoMessage() {}

func (x *BallGVGAttackedSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGAttackedSyncMsg.ProtoReflect.Descriptor instead.
func (*BallGVGAttackedSyncMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{56}
}

func (x *BallGVGAttackedSyncMsg) GetAttack() []*BallGVGAttackedTemp {
	if x != nil {
		return x.Attack
	}
	return nil
}

type BallGVGAttackedTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttackPlayerId   *int64                    `protobuf:"varint,1,opt,name=attackPlayerId" json:"attackPlayerId,omitempty"`
	AttackedPlayerId *int64                    `protobuf:"varint,2,opt,name=attackedPlayerId" json:"attackedPlayerId,omitempty"`
	IsShun           *bool                     `protobuf:"varint,3,opt,name=isShun" json:"isShun,omitempty"`
	AttackHp         *int64                    `protobuf:"varint,4,opt,name=attackHp" json:"attackHp,omitempty"`
	AttackedHp       *int64                    `protobuf:"varint,5,opt,name=attackedHp" json:"attackedHp,omitempty"`
	AtkTempList      []*BallGVGOneAttackedTemp `protobuf:"bytes,6,rep,name=atkTempList" json:"atkTempList,omitempty"`
}

func (x *BallGVGAttackedTemp) Reset() {
	*x = BallGVGAttackedTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGAttackedTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGAttackedTemp) ProtoMessage() {}

func (x *BallGVGAttackedTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGAttackedTemp.ProtoReflect.Descriptor instead.
func (*BallGVGAttackedTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{57}
}

func (x *BallGVGAttackedTemp) GetAttackPlayerId() int64 {
	if x != nil && x.AttackPlayerId != nil {
		return *x.AttackPlayerId
	}
	return 0
}

func (x *BallGVGAttackedTemp) GetAttackedPlayerId() int64 {
	if x != nil && x.AttackedPlayerId != nil {
		return *x.AttackedPlayerId
	}
	return 0
}

func (x *BallGVGAttackedTemp) GetIsShun() bool {
	if x != nil && x.IsShun != nil {
		return *x.IsShun
	}
	return false
}

func (x *BallGVGAttackedTemp) GetAttackHp() int64 {
	if x != nil && x.AttackHp != nil {
		return *x.AttackHp
	}
	return 0
}

func (x *BallGVGAttackedTemp) GetAttackedHp() int64 {
	if x != nil && x.AttackedHp != nil {
		return *x.AttackedHp
	}
	return 0
}

func (x *BallGVGAttackedTemp) GetAtkTempList() []*BallGVGOneAttackedTemp {
	if x != nil {
		return x.AtkTempList
	}
	return nil
}

type BallGVGOneAttackedTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Damage    *int64 `protobuf:"varint,1,opt,name=damage" json:"damage,omitempty"`
	SuckHp    *int64 `protobuf:"varint,2,opt,name=suckHp" json:"suckHp,omitempty"`
	IsDodge   *bool  `protobuf:"varint,3,opt,name=isDodge" json:"isDodge,omitempty"`
	IsCrit    *bool  `protobuf:"varint,4,opt,name=isCrit" json:"isCrit,omitempty"`
	BackDamge *int64 `protobuf:"varint,5,opt,name=backDamge" json:"backDamge,omitempty"`
}

func (x *BallGVGOneAttackedTemp) Reset() {
	*x = BallGVGOneAttackedTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGOneAttackedTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGOneAttackedTemp) ProtoMessage() {}

func (x *BallGVGOneAttackedTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGOneAttackedTemp.ProtoReflect.Descriptor instead.
func (*BallGVGOneAttackedTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{58}
}

func (x *BallGVGOneAttackedTemp) GetDamage() int64 {
	if x != nil && x.Damage != nil {
		return *x.Damage
	}
	return 0
}

func (x *BallGVGOneAttackedTemp) GetSuckHp() int64 {
	if x != nil && x.SuckHp != nil {
		return *x.SuckHp
	}
	return 0
}

func (x *BallGVGOneAttackedTemp) GetIsDodge() bool {
	if x != nil && x.IsDodge != nil {
		return *x.IsDodge
	}
	return false
}

func (x *BallGVGOneAttackedTemp) GetIsCrit() bool {
	if x != nil && x.IsCrit != nil {
		return *x.IsCrit
	}
	return false
}

func (x *BallGVGOneAttackedTemp) GetBackDamge() int64 {
	if x != nil && x.BackDamge != nil {
		return *x.BackDamge
	}
	return 0
}

type BallGVGCampScoreSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampScore []*BallGVGCampScoreSyncTemp `protobuf:"bytes,1,rep,name=campScore" json:"campScore,omitempty"`
}

func (x *BallGVGCampScoreSyncMsg) Reset() {
	*x = BallGVGCampScoreSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGCampScoreSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGCampScoreSyncMsg) ProtoMessage() {}

func (x *BallGVGCampScoreSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGCampScoreSyncMsg.ProtoReflect.Descriptor instead.
func (*BallGVGCampScoreSyncMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{59}
}

func (x *BallGVGCampScoreSyncMsg) GetCampScore() []*BallGVGCampScoreSyncTemp {
	if x != nil {
		return x.CampScore
	}
	return nil
}

type BallGVGPlaceSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User []*BallGVGSimpleUserTemp `protobuf:"bytes,1,rep,name=user" json:"user,omitempty"`
}

func (x *BallGVGPlaceSyncMsg) Reset() {
	*x = BallGVGPlaceSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGPlaceSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGPlaceSyncMsg) ProtoMessage() {}

func (x *BallGVGPlaceSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGPlaceSyncMsg.ProtoReflect.Descriptor instead.
func (*BallGVGPlaceSyncMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{60}
}

func (x *BallGVGPlaceSyncMsg) GetUser() []*BallGVGSimpleUserTemp {
	if x != nil {
		return x.User
	}
	return nil
}

type BallGVGNoticeListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notice     []*BallGVGNoticeTemp `protobuf:"bytes,1,rep,name=notice" json:"notice,omitempty"`
	CampNotice []*BallGVGNoticeTemp `protobuf:"bytes,2,rep,name=campNotice" json:"campNotice,omitempty"`
}

func (x *BallGVGNoticeListMsg) Reset() {
	*x = BallGVGNoticeListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGNoticeListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGNoticeListMsg) ProtoMessage() {}

func (x *BallGVGNoticeListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGNoticeListMsg.ProtoReflect.Descriptor instead.
func (*BallGVGNoticeListMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{61}
}

func (x *BallGVGNoticeListMsg) GetNotice() []*BallGVGNoticeTemp {
	if x != nil {
		return x.Notice
	}
	return nil
}

func (x *BallGVGNoticeListMsg) GetCampNotice() []*BallGVGNoticeTemp {
	if x != nil {
		return x.CampNotice
	}
	return nil
}

type BallGVGNoticeTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User1      *BallGVGNoticeUserTemp `protobuf:"bytes,1,opt,name=user1" json:"user1,omitempty"`
	User2      *BallGVGNoticeUserTemp `protobuf:"bytes,2,opt,name=user2" json:"user2,omitempty"`
	CampId     *int32                 `protobuf:"varint,3,opt,name=campId" json:"campId,omitempty"`
	NoticeType *int32                 `protobuf:"varint,4,opt,name=noticeType" json:"noticeType,omitempty"`
	Content    *string                `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	NoticeTime *int64                 `protobuf:"varint,6,opt,name=noticeTime" json:"noticeTime,omitempty"`
	IsRoll     *int32                 `protobuf:"varint,7,opt,name=isRoll" json:"isRoll,omitempty"`
}

func (x *BallGVGNoticeTemp) Reset() {
	*x = BallGVGNoticeTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGNoticeTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGNoticeTemp) ProtoMessage() {}

func (x *BallGVGNoticeTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGNoticeTemp.ProtoReflect.Descriptor instead.
func (*BallGVGNoticeTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{62}
}

func (x *BallGVGNoticeTemp) GetUser1() *BallGVGNoticeUserTemp {
	if x != nil {
		return x.User1
	}
	return nil
}

func (x *BallGVGNoticeTemp) GetUser2() *BallGVGNoticeUserTemp {
	if x != nil {
		return x.User2
	}
	return nil
}

func (x *BallGVGNoticeTemp) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

func (x *BallGVGNoticeTemp) GetNoticeType() int32 {
	if x != nil && x.NoticeType != nil {
		return *x.NoticeType
	}
	return 0
}

func (x *BallGVGNoticeTemp) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *BallGVGNoticeTemp) GetNoticeTime() int64 {
	if x != nil && x.NoticeTime != nil {
		return *x.NoticeTime
	}
	return 0
}

func (x *BallGVGNoticeTemp) GetIsRoll() int32 {
	if x != nil && x.IsRoll != nil {
		return *x.IsRoll
	}
	return 0
}

type BallGVGNoticeUserTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NickName *string            `protobuf:"bytes,1,opt,name=nickName" json:"nickName,omitempty"`
	RealmsId *int32             `protobuf:"varint,2,opt,name=realmsId" json:"realmsId,omitempty"`
	HeadInfo *PlayerHeadDataMsg `protobuf:"bytes,3,opt,name=headInfo" json:"headInfo,omitempty"`
}

func (x *BallGVGNoticeUserTemp) Reset() {
	*x = BallGVGNoticeUserTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGNoticeUserTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGNoticeUserTemp) ProtoMessage() {}

func (x *BallGVGNoticeUserTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGNoticeUserTemp.ProtoReflect.Descriptor instead.
func (*BallGVGNoticeUserTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{63}
}

func (x *BallGVGNoticeUserTemp) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *BallGVGNoticeUserTemp) GetRealmsId() int32 {
	if x != nil && x.RealmsId != nil {
		return *x.RealmsId
	}
	return 0
}

func (x *BallGVGNoticeUserTemp) GetHeadInfo() *PlayerHeadDataMsg {
	if x != nil {
		return x.HeadInfo
	}
	return nil
}

type BallGVGNoticeSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notice     *BallGVGNoticeTemp `protobuf:"bytes,1,opt,name=notice" json:"notice,omitempty"`
	CampNotice *BallGVGNoticeTemp `protobuf:"bytes,2,opt,name=campNotice" json:"campNotice,omitempty"`
}

func (x *BallGVGNoticeSyncMsg) Reset() {
	*x = BallGVGNoticeSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGNoticeSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGNoticeSyncMsg) ProtoMessage() {}

func (x *BallGVGNoticeSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGNoticeSyncMsg.ProtoReflect.Descriptor instead.
func (*BallGVGNoticeSyncMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{64}
}

func (x *BallGVGNoticeSyncMsg) GetNotice() *BallGVGNoticeTemp {
	if x != nil {
		return x.Notice
	}
	return nil
}

func (x *BallGVGNoticeSyncMsg) GetCampNotice() *BallGVGNoticeTemp {
	if x != nil {
		return x.CampNotice
	}
	return nil
}

type BallGVGCampSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Camp *BallGVGCampTemp `protobuf:"bytes,1,req,name=camp" json:"camp,omitempty"`
}

func (x *BallGVGCampSyncMsg) Reset() {
	*x = BallGVGCampSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGCampSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGCampSyncMsg) ProtoMessage() {}

func (x *BallGVGCampSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGCampSyncMsg.ProtoReflect.Descriptor instead.
func (*BallGVGCampSyncMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{65}
}

func (x *BallGVGCampSyncMsg) GetCamp() *BallGVGCampTemp {
	if x != nil {
		return x.Camp
	}
	return nil
}

type BallGVGAttackedUserSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttackUserData *BallGVGOtherUserTemp         `protobuf:"bytes,1,req,name=attackUserData" json:"attackUserData,omitempty"`
	Attack         *BallGVGAttackedTemp          `protobuf:"bytes,2,opt,name=attack" json:"attack,omitempty"`
	AttackTime     *int64                        `protobuf:"varint,3,opt,name=attackTime" json:"attackTime,omitempty"`
	UserData       *BallGVGUserDataTemp          `protobuf:"bytes,4,req,name=userData" json:"userData,omitempty"`
	ScoreResult    *BallGVGBattleScoreResultTemp `protobuf:"bytes,5,opt,name=scoreResult" json:"scoreResult,omitempty"`
}

func (x *BallGVGAttackedUserSyncMsg) Reset() {
	*x = BallGVGAttackedUserSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGAttackedUserSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGAttackedUserSyncMsg) ProtoMessage() {}

func (x *BallGVGAttackedUserSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGAttackedUserSyncMsg.ProtoReflect.Descriptor instead.
func (*BallGVGAttackedUserSyncMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{66}
}

func (x *BallGVGAttackedUserSyncMsg) GetAttackUserData() *BallGVGOtherUserTemp {
	if x != nil {
		return x.AttackUserData
	}
	return nil
}

func (x *BallGVGAttackedUserSyncMsg) GetAttack() *BallGVGAttackedTemp {
	if x != nil {
		return x.Attack
	}
	return nil
}

func (x *BallGVGAttackedUserSyncMsg) GetAttackTime() int64 {
	if x != nil && x.AttackTime != nil {
		return *x.AttackTime
	}
	return 0
}

func (x *BallGVGAttackedUserSyncMsg) GetUserData() *BallGVGUserDataTemp {
	if x != nil {
		return x.UserData
	}
	return nil
}

func (x *BallGVGAttackedUserSyncMsg) GetScoreResult() *BallGVGBattleScoreResultTemp {
	if x != nil {
		return x.ScoreResult
	}
	return nil
}

type BallGVGBattleScoreResultTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleScore      *BallGVGBattleScoreTemp `protobuf:"bytes,1,opt,name=battleScore" json:"battleScore,omitempty"`
	TotalBattleScore *BallGVGBattleScoreTemp `protobuf:"bytes,2,opt,name=TotalBattleScore" json:"TotalBattleScore,omitempty"`
}

func (x *BallGVGBattleScoreResultTemp) Reset() {
	*x = BallGVGBattleScoreResultTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGBattleScoreResultTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGBattleScoreResultTemp) ProtoMessage() {}

func (x *BallGVGBattleScoreResultTemp) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGBattleScoreResultTemp.ProtoReflect.Descriptor instead.
func (*BallGVGBattleScoreResultTemp) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{67}
}

func (x *BallGVGBattleScoreResultTemp) GetBattleScore() *BallGVGBattleScoreTemp {
	if x != nil {
		return x.BattleScore
	}
	return nil
}

func (x *BallGVGBattleScoreResultTemp) GetTotalBattleScore() *BallGVGBattleScoreTemp {
	if x != nil {
		return x.TotalBattleScore
	}
	return nil
}

type BallGVGPlaceSeizeSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaceId     *int32                       `protobuf:"varint,1,req,name=placeId" json:"placeId,omitempty"`
	Seize       []*BallGVGPlaceSeizeInfoTemp `protobuf:"bytes,2,rep,name=seize" json:"seize,omitempty"`
	BeginTime   *int64                       `protobuf:"varint,3,req,name=beginTime" json:"beginTime,omitempty"`
	SeizeCampId *int32                       `protobuf:"varint,4,req,name=seizeCampId" json:"seizeCampId,omitempty"`
	SeizeTime   *int64                       `protobuf:"varint,5,req,name=seizeTime" json:"seizeTime,omitempty"`
	CampId      *int32                       `protobuf:"varint,6,req,name=campId" json:"campId,omitempty"`
}

func (x *BallGVGPlaceSeizeSyncMsg) Reset() {
	*x = BallGVGPlaceSeizeSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGPlaceSeizeSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGPlaceSeizeSyncMsg) ProtoMessage() {}

func (x *BallGVGPlaceSeizeSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGPlaceSeizeSyncMsg.ProtoReflect.Descriptor instead.
func (*BallGVGPlaceSeizeSyncMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{68}
}

func (x *BallGVGPlaceSeizeSyncMsg) GetPlaceId() int32 {
	if x != nil && x.PlaceId != nil {
		return *x.PlaceId
	}
	return 0
}

func (x *BallGVGPlaceSeizeSyncMsg) GetSeize() []*BallGVGPlaceSeizeInfoTemp {
	if x != nil {
		return x.Seize
	}
	return nil
}

func (x *BallGVGPlaceSeizeSyncMsg) GetBeginTime() int64 {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return 0
}

func (x *BallGVGPlaceSeizeSyncMsg) GetSeizeCampId() int32 {
	if x != nil && x.SeizeCampId != nil {
		return *x.SeizeCampId
	}
	return 0
}

func (x *BallGVGPlaceSeizeSyncMsg) GetSeizeTime() int64 {
	if x != nil && x.SeizeTime != nil {
		return *x.SeizeTime
	}
	return 0
}

func (x *BallGVGPlaceSeizeSyncMsg) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

type BallGVGEnterPlaceSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *BallGVGOtherUserTemp `protobuf:"bytes,1,req,name=user" json:"user,omitempty"`
}

func (x *BallGVGEnterPlaceSync) Reset() {
	*x = BallGVGEnterPlaceSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGEnterPlaceSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGEnterPlaceSync) ProtoMessage() {}

func (x *BallGVGEnterPlaceSync) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGEnterPlaceSync.ProtoReflect.Descriptor instead.
func (*BallGVGEnterPlaceSync) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{69}
}

func (x *BallGVGEnterPlaceSync) GetUser() *BallGVGOtherUserTemp {
	if x != nil {
		return x.User
	}
	return nil
}

type BallGVGLeavePlaceSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	Type     *int32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
}

func (x *BallGVGLeavePlaceSync) Reset() {
	*x = BallGVGLeavePlaceSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGLeavePlaceSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGLeavePlaceSync) ProtoMessage() {}

func (x *BallGVGLeavePlaceSync) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGLeavePlaceSync.ProtoReflect.Descriptor instead.
func (*BallGVGLeavePlaceSync) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{70}
}

func (x *BallGVGLeavePlaceSync) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *BallGVGLeavePlaceSync) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type BallGVGAbilityRankReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *BallGVGAbilityRankReqMsg) Reset() {
	*x = BallGVGAbilityRankReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGAbilityRankReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGAbilityRankReqMsg) ProtoMessage() {}

func (x *BallGVGAbilityRankReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGAbilityRankReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGAbilityRankReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{71}
}

func (x *BallGVGAbilityRankReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type BallGVGAbilityRankRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     *int32   `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	RankMsg *RankMsg `protobuf:"bytes,2,opt,name=rankMsg" json:"rankMsg,omitempty"`
}

func (x *BallGVGAbilityRankRespMsg) Reset() {
	*x = BallGVGAbilityRankRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGAbilityRankRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGAbilityRankRespMsg) ProtoMessage() {}

func (x *BallGVGAbilityRankRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGAbilityRankRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGAbilityRankRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{72}
}

func (x *BallGVGAbilityRankRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *BallGVGAbilityRankRespMsg) GetRankMsg() *RankMsg {
	if x != nil {
		return x.RankMsg
	}
	return nil
}

type BallGVGEndDataSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndData *BallGVGEndDataTemp `protobuf:"bytes,1,req,name=endData" json:"endData,omitempty"`
}

func (x *BallGVGEndDataSyncMsg) Reset() {
	*x = BallGVGEndDataSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGEndDataSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGEndDataSyncMsg) ProtoMessage() {}

func (x *BallGVGEndDataSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGEndDataSyncMsg.ProtoReflect.Descriptor instead.
func (*BallGVGEndDataSyncMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{73}
}

func (x *BallGVGEndDataSyncMsg) GetEndData() *BallGVGEndDataTemp {
	if x != nil {
		return x.EndData
	}
	return nil
}

type BallGVGRedDotReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *BallGVGRedDotReqMsg) Reset() {
	*x = BallGVGRedDotReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGRedDotReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGRedDotReqMsg) ProtoMessage() {}

func (x *BallGVGRedDotReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGRedDotReqMsg.ProtoReflect.Descriptor instead.
func (*BallGVGRedDotReqMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{74}
}

func (x *BallGVGRedDotReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type BallGVGRedDotRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Data *string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (x *BallGVGRedDotRespMsg) Reset() {
	*x = BallGVGRedDotRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_BallGVG_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallGVGRedDotRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallGVGRedDotRespMsg) ProtoMessage() {}

func (x *BallGVGRedDotRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_BallGVG_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallGVGRedDotRespMsg.ProtoReflect.Descriptor instead.
func (*BallGVGRedDotRespMsg) Descriptor() ([]byte, []int) {
	return file_BallGVG_proto_rawDescGZIP(), []int{75}
}

func (x *BallGVGRedDotRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *BallGVGRedDotRespMsg) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

var File_BallGVG_proto protoreflect.FileDescriptor

var file_BallGVG_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x1a, 0x0a, 0x52, 0x61, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0b, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9b, 0x01, 0x0a, 0x17, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x61, 0x6d, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x6d,
	0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x64,
	0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x4e, 0x75,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x94, 0x02,
	0x0a, 0x13, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c,
	0x6c, 0x47, 0x56, 0x47, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x54, 0x65, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xc3, 0x02, 0x0a, 0x14, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x63,
	0x61, 0x6d, 0x70, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56,
	0x47, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x65, 0x6d,
	0x70, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c,
	0x6c, 0x47, 0x56, 0x47, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x76, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a,
	0x72, 0x65, 0x76, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x15, 0x42,
	0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x54, 0x65, 0x6d, 0x70, 0x12, 0x3f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0x78, 0x0a, 0x15, 0x42, 0x61,
	0x6c, 0x6c, 0x47, 0x56, 0x47, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x65, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x43, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x17, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x70,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x68, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69,
	0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a,
	0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x73, 0x49, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x73, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x53, 0x70, 0x65, 0x65, 0x64, 0x22, 0x4b, 0x0a, 0x13, 0x42, 0x61, 0x6c, 0x6c,
	0x47, 0x56, 0x47, 0x41, 0x74, 0x74, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x0f, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56,
	0x47, 0x43, 0x61, 0x6d, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49,
	0x64, 0x12, 0x47, 0x0a, 0x09, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56,
	0x47, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x52,
	0x09, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x4d, 0x61, 0x72, 0x6b,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6d, 0x0a, 0x13, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56,
	0x47, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x01, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x72,
	0x58, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x72, 0x58, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x69, 0x72, 0x59, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x72,
	0x59, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x14, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56,
	0x47, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c,
	0x47, 0x56, 0x47, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x69, 0x7a, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x19,
	0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x65, 0x69, 0x7a,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75,
	0x6d, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x43, 0x61, 0x6d,
	0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61,
	0x6d, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x70,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x48, 0x0a, 0x18, 0x42, 0x61,
	0x6c, 0x6c, 0x47, 0x56, 0x47, 0x43, 0x61, 0x6d, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x79,
	0x6e, 0x63, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x22, 0xe2, 0x01, 0x0a, 0x16, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x69, 0x7a, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x69,
	0x7a, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x16, 0x42, 0x61,
	0x6c, 0x6c, 0x47, 0x56, 0x47, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x49, 0x64,
	0x12, 0x4e, 0x0a, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56,
	0x47, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x65, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x46, 0x0a, 0x1a, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x43, 0x61, 0x6d, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06,
	0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0xa6, 0x01, 0x0a, 0x1a, 0x42, 0x61, 0x6c,
	0x6c, 0x47, 0x56, 0x47, 0x42, 0x65, 0x73, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x42, 0x0a, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47,
	0x56, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x44, 0x0a, 0x05, 0x73,
	0x65, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x65, 0x69, 0x7a,
	0x65, 0x22, 0xd3, 0x01, 0x0a, 0x1a, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x40, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x16, 0x42, 0x61, 0x6c, 0x6c,
	0x47, 0x56, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x05, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x69, 0x7a, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a,
	0x73, 0x65, 0x69, 0x7a, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x90, 0x03, 0x0a, 0x12, 0x42,
	0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d,
	0x70, 0x12, 0x4c, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c,
	0x47, 0x56, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x52, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x46, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x43,
	0x61, 0x6d, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x61,
	0x6d, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x62, 0x65, 0x73, 0x74, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x42, 0x65, 0x73,
	0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x52, 0x0f, 0x62, 0x65, 0x73, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x60, 0x0a, 0x13, 0x63, 0x61, 0x6d, 0x70, 0x42, 0x65, 0x73, 0x74, 0x50, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x42, 0x65, 0x73, 0x74, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x13,
	0x63, 0x61, 0x6d, 0x70, 0x42, 0x65, 0x73, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x3c, 0x0a,
	0x1a, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x1b, 0x42,
	0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x18, 0x42, 0x61,
	0x6c, 0x6c, 0x47, 0x56, 0x47, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x19, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56,
	0x47, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x3d, 0x0a, 0x1b, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47,
	0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x4e, 0x75, 0x6d, 0x52, 0x65,
	0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x1c, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x41,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x79, 0x52, 0x61, 0x6e, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x3c,
	0x0a, 0x1a, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xaf, 0x03, 0x0a,
	0x1b, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x43,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x43, 0x61,
	0x6d, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x12, 0x46, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47,
	0x43, 0x61, 0x6d, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x65, 0x6d,
	0x70, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x4c, 0x76, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x4c, 0x76, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x78, 0x4c,
	0x76, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x4c, 0x76, 0x22, 0x53,
	0x0a, 0x17, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x18, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x46, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47,
	0x56, 0x47, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x52,
	0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x17, 0x42, 0x61, 0x6c, 0x6c,
	0x47, 0x56, 0x47, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x18, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x22, 0x78, 0x0a, 0x11, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61,
	0x6c, 0x6c, 0x47, 0x56, 0x47, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d,
	0x70, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x12, 0x42,
	0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x22, 0x5d, 0x0a, 0x13, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xc4, 0x02, 0x0a, 0x14, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a,
	0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x65, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x43, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x65, 0x0a, 0x1d, 0x42, 0x61, 0x6c,
	0x6c, 0x47, 0x56, 0x47, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x6a, 0x6f, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x0d, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x58, 0x0a, 0x1e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x4d,
	0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x61, 0x6a,
	0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x16, 0x42, 0x61,
	0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4d, 0x61, 0x72, 0x6b, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x2b,
	0x0a, 0x17, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4d, 0x61, 0x72, 0x6b, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x3c, 0x0a, 0x1a, 0x42,
	0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x1b, 0x42, 0x61, 0x6c,
	0x6c, 0x47, 0x56, 0x47, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x3b, 0x0a, 0x19, 0x42, 0x61,
	0x6c, 0x6c, 0x47, 0x56, 0x47, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x1a, 0x42, 0x61, 0x6c, 0x6c, 0x47,
	0x56, 0x47, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c,
	0x47, 0x56, 0x47, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x22, 0x52, 0x0a, 0x18, 0x42, 0x61, 0x6c,
	0x6c, 0x47, 0x56, 0x47, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x22, 0xbf, 0x01,
	0x0a, 0x19, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x3a, 0x0a,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b,
	0x4d, 0x73, 0x67, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x79, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x0c, 0x6d, 0x79, 0x46, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6d, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x79, 0x52, 0x61, 0x6e,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x22,
	0x59, 0x0a, 0x13, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61,
	0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x54, 0x65,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61,
	0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x4d, 0x73, 0x67,
	0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x22, 0xd3, 0x01, 0x0a, 0x12, 0x42,
	0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x4d, 0x73,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x53, 0x0a,
	0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d,
	0x73, 0x67, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x5b, 0x0a, 0x14, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b,
	0x54, 0x65, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b,
	0x4d, 0x73, 0x67, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x22, 0x83, 0x01,
	0x0a, 0x13, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x61,
	0x6e, 0x6b, 0x4d, 0x73, 0x67, 0x12, 0x3e, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4f, 0x74, 0x68,
	0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x61, 0x6d, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x6d,
	0x70, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x13, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x43, 0x61,
	0x6d, 0x70, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x08, 0x72, 0x61,
	0x6e, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x43, 0x61, 0x6d, 0x70, 0x52, 0x61, 0x6e,
	0x6b, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x22, 0x42,
	0x0a, 0x12, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x43, 0x61, 0x6d, 0x70, 0x52, 0x61, 0x6e,
	0x6b, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x75, 0x0a, 0x1d, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x47, 0x65, 0x74,
	0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x1e, 0x42, 0x61,
	0x6c, 0x6c, 0x47, 0x56, 0x47, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x5f,
	0x0a, 0x14, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x14, 0x75, 0x6e, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x6b, 0x0a, 0x17, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x64, 0x0a, 0x14,
	0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x79, 0x6e,
	0x63, 0x4d, 0x73, 0x67, 0x12, 0x4c, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42,
	0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x59, 0x0a, 0x16, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x65, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x12, 0x3f, 0x0a, 0x06,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x22, 0x8b, 0x02,
	0x0a, 0x13, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53,
	0x68, 0x75, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x75,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x48, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x48, 0x70, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x48, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x48, 0x70, 0x12, 0x4c, 0x0a,
	0x0b, 0x61, 0x74, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4f,
	0x6e, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0b,
	0x61, 0x74, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x16,
	0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4f, 0x6e, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x65, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x75, 0x63, 0x6b, 0x48, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x75, 0x63, 0x6b, 0x48, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x44, 0x6f, 0x64, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x6f, 0x64, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x43, 0x72, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x43, 0x72, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b,
	0x44, 0x61, 0x6d, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61, 0x63,
	0x6b, 0x44, 0x61, 0x6d, 0x67, 0x65, 0x22, 0x65, 0x0a, 0x17, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56,
	0x47, 0x43, 0x61, 0x6d, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73,
	0x67, 0x12, 0x4a, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56,
	0x47, 0x43, 0x61, 0x6d, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x65,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x54, 0x0a,
	0x13, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x79, 0x6e,
	0x63, 0x4d, 0x73, 0x67, 0x12, 0x3d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x9c, 0x01, 0x0a, 0x14, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x3d, 0x0a, 0x06,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x63,
	0x61, 0x6d, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x22, 0x9f, 0x02, 0x0a, 0x11, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x3f, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c,
	0x6c, 0x47, 0x56, 0x47, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65,
	0x6d, 0x70, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x31, 0x12, 0x3f, 0x0a, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61,
	0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x65, 0x6d, 0x70, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61,
	0x6d, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x70,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73,
	0x52, 0x6f, 0x6c, 0x6c, 0x22, 0x92, 0x01, 0x0a, 0x15, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x73, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52,
	0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x14, 0x42, 0x61,
	0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x4d,
	0x73, 0x67, 0x12, 0x3d, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x12, 0x45, 0x0a, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47,
	0x56, 0x47, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x61,
	0x6d, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x4d, 0x0a, 0x12, 0x42, 0x61, 0x6c, 0x6c,
	0x47, 0x56, 0x47, 0x43, 0x61, 0x6d, 0x70, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x12, 0x37,
	0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x43, 0x61, 0x6d, 0x70, 0x54, 0x65, 0x6d,
	0x70, 0x52, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x22, 0xe8, 0x02, 0x0a, 0x1a, 0x42, 0x61, 0x6c, 0x6c,
	0x47, 0x56, 0x47, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x12, 0x50, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61,
	0x6c, 0x6c, 0x47, 0x56, 0x47, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x65, 0x6d, 0x70, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x52,
	0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x1c, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x12, 0x4c, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61,
	0x6c, 0x6c, 0x47, 0x56, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x52, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x56, 0x0a, 0x10, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x10, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x18, 0x42, 0x61,
	0x6c, 0x6c, 0x47, 0x56, 0x47, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x65, 0x69, 0x7a, 0x65, 0x53,
	0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x43, 0x0a, 0x05, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x53, 0x65, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x05,
	0x73, 0x65, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x43, 0x61, 0x6d, 0x70,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x43,
	0x61, 0x6d, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x15, 0x42,
	0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x53, 0x79, 0x6e, 0x63, 0x12, 0x3c, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0x47, 0x0a, 0x15, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x0a, 0x18, 0x42,
	0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x19, 0x42, 0x61, 0x6c, 0x6c, 0x47,
	0x56, 0x47, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x61, 0x6e,
	0x6b, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x4d, 0x73, 0x67, 0x22, 0x59, 0x0a,
	0x15, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x12, 0x40, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c,
	0x6c, 0x47, 0x56, 0x47, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x13, 0x42, 0x61, 0x6c, 0x6c,
	0x47, 0x56, 0x47, 0x52, 0x65, 0x64, 0x44, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22,
	0x3c, 0x0a, 0x14, 0x42, 0x61, 0x6c, 0x6c, 0x47, 0x56, 0x47, 0x52, 0x65, 0x64, 0x44, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x36, 0x5a,
	0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6d, 0x7a, 0x68,
	0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_BallGVG_proto_rawDescOnce sync.Once
	file_BallGVG_proto_rawDescData = file_BallGVG_proto_rawDesc
)

func file_BallGVG_proto_rawDescGZIP() []byte {
	file_BallGVG_proto_rawDescOnce.Do(func() {
		file_BallGVG_proto_rawDescData = protoimpl.X.CompressGZIP(file_BallGVG_proto_rawDescData)
	})
	return file_BallGVG_proto_rawDescData
}

var file_BallGVG_proto_msgTypes = make([]protoimpl.MessageInfo, 76)
var file_BallGVG_proto_goTypes = []any{
	(*BallGVGActivityDataTemp)(nil),        // 0: com.yq.msg.CityMsg.BallGVGActivityDataTemp
	(*BallGVGUserDataTemp)(nil),            // 1: com.yq.msg.CityMsg.BallGVGUserDataTemp
	(*BallGVGOtherUserTemp)(nil),           // 2: com.yq.msg.CityMsg.BallGVGOtherUserTemp
	(*BallGVGUserDetailTemp)(nil),          // 3: com.yq.msg.CityMsg.BallGVGUserDetailTemp
	(*BallGVGSimpleUserTemp)(nil),          // 4: com.yq.msg.CityMsg.BallGVGSimpleUserTemp
	(*BallGVGUserPropertyTemp)(nil),        // 5: com.yq.msg.CityMsg.BallGVGUserPropertyTemp
	(*BallGVGAttrInfoTemp)(nil),            // 6: com.yq.msg.CityMsg.BallGVGAttrInfoTemp
	(*BallGVGCampTemp)(nil),                // 7: com.yq.msg.CityMsg.BallGVGCampTemp
	(*BallGVGPositionTemp)(nil),            // 8: com.yq.msg.CityMsg.BallGVGPositionTemp
	(*BallGVGPlaceDataTemp)(nil),           // 9: com.yq.msg.CityMsg.BallGVGPlaceDataTemp
	(*BallGVGPlaceSeizeInfoTemp)(nil),      // 10: com.yq.msg.CityMsg.BallGVGPlaceSeizeInfoTemp
	(*BallGVGCampScoreTemp)(nil),           // 11: com.yq.msg.CityMsg.BallGVGCampScoreTemp
	(*BallGVGCampScoreSyncTemp)(nil),       // 12: com.yq.msg.CityMsg.BallGVGCampScoreSyncTemp
	(*BallGVGPlaceConfigTemp)(nil),         // 13: com.yq.msg.CityMsg.BallGVGPlaceConfigTemp
	(*BallGVGPlaceSimpleTemp)(nil),         // 14: com.yq.msg.CityMsg.BallGVGPlaceSimpleTemp
	(*BallGVGPlaceCampMemberTemp)(nil),     // 15: com.yq.msg.CityMsg.BallGVGPlaceCampMemberTemp
	(*BallGVGBestPerformanceTemp)(nil),     // 16: com.yq.msg.CityMsg.BallGVGBestPerformanceTemp
	(*BallGVGBattleScoreUserTemp)(nil),     // 17: com.yq.msg.CityMsg.BallGVGBattleScoreUserTemp
	(*BallGVGBattleScoreTemp)(nil),         // 18: com.yq.msg.CityMsg.BallGVGBattleScoreTemp
	(*BallGVGEndDataTemp)(nil),             // 19: com.yq.msg.CityMsg.BallGVGEndDataTemp
	(*BallGVGUnionNameListReqMsg)(nil),     // 20: com.yq.msg.CityMsg.BallGVGUnionNameListReqMsg
	(*BallGVGUnionNameListRespMsg)(nil),    // 21: com.yq.msg.CityMsg.BallGVGUnionNameListRespMsg
	(*BallGVGApplicationReqMsg)(nil),       // 22: com.yq.msg.CityMsg.BallGVGApplicationReqMsg
	(*BallGVGApplicationRespMsg)(nil),      // 23: com.yq.msg.CityMsg.BallGVGApplicationRespMsg
	(*BallGVGAbilityRankNumReqMsg)(nil),    // 24: com.yq.msg.CityMsg.BallGVGAbilityRankNumReqMsg
	(*BallGVGAbilityRankNumRespMsg)(nil),   // 25: com.yq.msg.CityMsg.BallGVGAbilityRankNumRespMsg
	(*BallGVGEnterActivityReqMsg)(nil),     // 26: com.yq.msg.CityMsg.BallGVGEnterActivityReqMsg
	(*BallGVGEnterActivityRespMsg)(nil),    // 27: com.yq.msg.CityMsg.BallGVGEnterActivityRespMsg
	(*BallGVGEnterPlaceReqMsg)(nil),        // 28: com.yq.msg.CityMsg.BallGVGEnterPlaceReqMsg
	(*BallGVGEnterPlaceRespMsg)(nil),       // 29: com.yq.msg.CityMsg.BallGVGEnterPlaceRespMsg
	(*BallGVGLeavePlaceReqMsg)(nil),        // 30: com.yq.msg.CityMsg.BallGVGLeavePlaceReqMsg
	(*BallGVGLeavePlaceRespMsg)(nil),       // 31: com.yq.msg.CityMsg.BallGVGLeavePlaceRespMsg
	(*BallGVGMoveReqMsg)(nil),              // 32: com.yq.msg.CityMsg.BallGVGMoveReqMsg
	(*BallGVGMoveRespMsg)(nil),             // 33: com.yq.msg.CityMsg.BallGVGMoveRespMsg
	(*BallGVGAttackReqMsg)(nil),            // 34: com.yq.msg.CityMsg.BallGVGAttackReqMsg
	(*BallGVGAttackRespMsg)(nil),           // 35: com.yq.msg.CityMsg.BallGVGAttackRespMsg
	(*BallGVGAppointMajorUserReqMsg)(nil),  // 36: com.yq.msg.CityMsg.BallGVGAppointMajorUserReqMsg
	(*BallGVGAppointMajorUserRespMsg)(nil), // 37: com.yq.msg.CityMsg.BallGVGAppointMajorUserRespMsg
	(*BallGVGMarkPlaceReqMsg)(nil),         // 38: com.yq.msg.CityMsg.BallGVGMarkPlaceReqMsg
	(*BallGVGMarkPlaceRespMsg)(nil),        // 39: com.yq.msg.CityMsg.BallGVGMarkPlaceRespMsg
	(*BallGVGLeaveActivityReqMsg)(nil),     // 40: com.yq.msg.CityMsg.BallGVGLeaveActivityReqMsg
	(*BallGVGLeaveActivityRespMsg)(nil),    // 41: com.yq.msg.CityMsg.BallGVGLeaveActivityRespMsg
	(*BallGVGGetPlaceInfoReqMsg)(nil),      // 42: com.yq.msg.CityMsg.BallGVGGetPlaceInfoReqMsg
	(*BallGVGGetPlaceInfoRespMsg)(nil),     // 43: com.yq.msg.CityMsg.BallGVGGetPlaceInfoRespMsg
	(*BallGVGGetUserRankReqMsg)(nil),       // 44: com.yq.msg.CityMsg.BallGVGGetUserRankReqMsg
	(*BallGVGGetUserRankRespMsg)(nil),      // 45: com.yq.msg.CityMsg.BallGVGGetUserRankRespMsg
	(*BallGVGUserRankList)(nil),            // 46: com.yq.msg.CityMsg.BallGVGUserRankList
	(*BallGVGUserRankMsg)(nil),             // 47: com.yq.msg.CityMsg.BallGVGUserRankMsg
	(*BallGVGUnionRankList)(nil),           // 48: com.yq.msg.CityMsg.BallGVGUnionRankList
	(*BallGVGUnionRankMsg)(nil),            // 49: com.yq.msg.CityMsg.BallGVGUnionRankMsg
	(*BallGVGCampRankList)(nil),            // 50: com.yq.msg.CityMsg.BallGVGCampRankList
	(*BallGVGCampRankMsg)(nil),             // 51: com.yq.msg.CityMsg.BallGVGCampRankMsg
	(*BallGVGGetUnionUserListReqMsg)(nil),  // 52: com.yq.msg.CityMsg.BallGVGGetUnionUserListReqMsg
	(*BallGVGGetUnionUserListRespMsg)(nil), // 53: com.yq.msg.CityMsg.BallGVGGetUnionUserListRespMsg
	(*BallGVGUnionMemberScore)(nil),        // 54: com.yq.msg.CityMsg.BallGVGUnionMemberScore
	(*BallGVGConfigSyncMsg)(nil),           // 55: com.yq.msg.CityMsg.BallGVGConfigSyncMsg
	(*BallGVGAttackedSyncMsg)(nil),         // 56: com.yq.msg.CityMsg.BallGVGAttackedSyncMsg
	(*BallGVGAttackedTemp)(nil),            // 57: com.yq.msg.CityMsg.BallGVGAttackedTemp
	(*BallGVGOneAttackedTemp)(nil),         // 58: com.yq.msg.CityMsg.BallGVGOneAttackedTemp
	(*BallGVGCampScoreSyncMsg)(nil),        // 59: com.yq.msg.CityMsg.BallGVGCampScoreSyncMsg
	(*BallGVGPlaceSyncMsg)(nil),            // 60: com.yq.msg.CityMsg.BallGVGPlaceSyncMsg
	(*BallGVGNoticeListMsg)(nil),           // 61: com.yq.msg.CityMsg.BallGVGNoticeListMsg
	(*BallGVGNoticeTemp)(nil),              // 62: com.yq.msg.CityMsg.BallGVGNoticeTemp
	(*BallGVGNoticeUserTemp)(nil),          // 63: com.yq.msg.CityMsg.BallGVGNoticeUserTemp
	(*BallGVGNoticeSyncMsg)(nil),           // 64: com.yq.msg.CityMsg.BallGVGNoticeSyncMsg
	(*BallGVGCampSyncMsg)(nil),             // 65: com.yq.msg.CityMsg.BallGVGCampSyncMsg
	(*BallGVGAttackedUserSyncMsg)(nil),     // 66: com.yq.msg.CityMsg.BallGVGAttackedUserSyncMsg
	(*BallGVGBattleScoreResultTemp)(nil),   // 67: com.yq.msg.CityMsg.BallGVGBattleScoreResultTemp
	(*BallGVGPlaceSeizeSyncMsg)(nil),       // 68: com.yq.msg.CityMsg.BallGVGPlaceSeizeSyncMsg
	(*BallGVGEnterPlaceSync)(nil),          // 69: com.yq.msg.CityMsg.BallGVGEnterPlaceSync
	(*BallGVGLeavePlaceSync)(nil),          // 70: com.yq.msg.CityMsg.BallGVGLeavePlaceSync
	(*BallGVGAbilityRankReqMsg)(nil),       // 71: com.yq.msg.CityMsg.BallGVGAbilityRankReqMsg
	(*BallGVGAbilityRankRespMsg)(nil),      // 72: com.yq.msg.CityMsg.BallGVGAbilityRankRespMsg
	(*BallGVGEndDataSyncMsg)(nil),          // 73: com.yq.msg.CityMsg.BallGVGEndDataSyncMsg
	(*BallGVGRedDotReqMsg)(nil),            // 74: com.yq.msg.CityMsg.BallGVGRedDotReqMsg
	(*BallGVGRedDotRespMsg)(nil),           // 75: com.yq.msg.CityMsg.BallGVGRedDotRespMsg
	(*PlayerCharacterImageMsg)(nil),        // 76: com.yq.msg.CityMsg.PlayerCharacterImageMsg
	(*OtherUnionData)(nil),                 // 77: com.yq.msg.CityMsg.OtherUnionData
	(*PlayerHeadDataMsg)(nil),              // 78: com.yq.msg.CityMsg.PlayerHeadDataMsg
	(*RankMsg)(nil),                        // 79: com.yq.msg.CityMsg.RankMsg
}
var file_BallGVG_proto_depIdxs = []int32{
	5,  // 0: com.yq.msg.CityMsg.BallGVGUserDataTemp.property:type_name -> com.yq.msg.CityMsg.BallGVGUserPropertyTemp
	76, // 1: com.yq.msg.CityMsg.BallGVGOtherUserTemp.playerData:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	5,  // 2: com.yq.msg.CityMsg.BallGVGOtherUserTemp.property:type_name -> com.yq.msg.CityMsg.BallGVGUserPropertyTemp
	8,  // 3: com.yq.msg.CityMsg.BallGVGOtherUserTemp.position:type_name -> com.yq.msg.CityMsg.BallGVGPositionTemp
	76, // 4: com.yq.msg.CityMsg.BallGVGUserDetailTemp.user:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	5,  // 5: com.yq.msg.CityMsg.BallGVGUserDetailTemp.property:type_name -> com.yq.msg.CityMsg.BallGVGUserPropertyTemp
	8,  // 6: com.yq.msg.CityMsg.BallGVGSimpleUserTemp.position:type_name -> com.yq.msg.CityMsg.BallGVGPositionTemp
	3,  // 7: com.yq.msg.CityMsg.BallGVGCampTemp.majorUser:type_name -> com.yq.msg.CityMsg.BallGVGUserDetailTemp
	2,  // 8: com.yq.msg.CityMsg.BallGVGPlaceDataTemp.user:type_name -> com.yq.msg.CityMsg.BallGVGOtherUserTemp
	15, // 9: com.yq.msg.CityMsg.BallGVGPlaceSimpleTemp.campMember:type_name -> com.yq.msg.CityMsg.BallGVGPlaceCampMemberTemp
	17, // 10: com.yq.msg.CityMsg.BallGVGBestPerformanceTemp.kill:type_name -> com.yq.msg.CityMsg.BallGVGBattleScoreUserTemp
	17, // 11: com.yq.msg.CityMsg.BallGVGBestPerformanceTemp.seize:type_name -> com.yq.msg.CityMsg.BallGVGBattleScoreUserTemp
	76, // 12: com.yq.msg.CityMsg.BallGVGBattleScoreUserTemp.user:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	18, // 13: com.yq.msg.CityMsg.BallGVGBattleScoreUserTemp.score:type_name -> com.yq.msg.CityMsg.BallGVGBattleScoreTemp
	18, // 14: com.yq.msg.CityMsg.BallGVGEndDataTemp.battleScore:type_name -> com.yq.msg.CityMsg.BallGVGBattleScoreTemp
	11, // 15: com.yq.msg.CityMsg.BallGVGEndDataTemp.campScore:type_name -> com.yq.msg.CityMsg.BallGVGCampScoreTemp
	16, // 16: com.yq.msg.CityMsg.BallGVGEndDataTemp.bestPerformance:type_name -> com.yq.msg.CityMsg.BallGVGBestPerformanceTemp
	16, // 17: com.yq.msg.CityMsg.BallGVGEndDataTemp.campBestPerformance:type_name -> com.yq.msg.CityMsg.BallGVGBestPerformanceTemp
	1,  // 18: com.yq.msg.CityMsg.BallGVGEnterActivityRespMsg.userData:type_name -> com.yq.msg.CityMsg.BallGVGUserDataTemp
	7,  // 19: com.yq.msg.CityMsg.BallGVGEnterActivityRespMsg.camp:type_name -> com.yq.msg.CityMsg.BallGVGCampTemp
	9,  // 20: com.yq.msg.CityMsg.BallGVGEnterActivityRespMsg.placeData:type_name -> com.yq.msg.CityMsg.BallGVGPlaceDataTemp
	12, // 21: com.yq.msg.CityMsg.BallGVGEnterActivityRespMsg.score:type_name -> com.yq.msg.CityMsg.BallGVGCampScoreSyncTemp
	61, // 22: com.yq.msg.CityMsg.BallGVGEnterActivityRespMsg.noticeList:type_name -> com.yq.msg.CityMsg.BallGVGNoticeListMsg
	9,  // 23: com.yq.msg.CityMsg.BallGVGEnterPlaceRespMsg.placeData:type_name -> com.yq.msg.CityMsg.BallGVGPlaceDataTemp
	8,  // 24: com.yq.msg.CityMsg.BallGVGMoveReqMsg.position:type_name -> com.yq.msg.CityMsg.BallGVGPositionTemp
	57, // 25: com.yq.msg.CityMsg.BallGVGAttackRespMsg.attack:type_name -> com.yq.msg.CityMsg.BallGVGAttackedTemp
	1,  // 26: com.yq.msg.CityMsg.BallGVGAttackRespMsg.userData:type_name -> com.yq.msg.CityMsg.BallGVGUserDataTemp
	67, // 27: com.yq.msg.CityMsg.BallGVGAttackRespMsg.scoreResult:type_name -> com.yq.msg.CityMsg.BallGVGBattleScoreResultTemp
	14, // 28: com.yq.msg.CityMsg.BallGVGGetPlaceInfoRespMsg.place:type_name -> com.yq.msg.CityMsg.BallGVGPlaceSimpleTemp
	47, // 29: com.yq.msg.CityMsg.BallGVGGetUserRankRespMsg.rank:type_name -> com.yq.msg.CityMsg.BallGVGUserRankMsg
	47, // 30: com.yq.msg.CityMsg.BallGVGUserRankList.rankTemp:type_name -> com.yq.msg.CityMsg.BallGVGUserRankMsg
	76, // 31: com.yq.msg.CityMsg.BallGVGUserRankMsg.playerBaseData:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	49, // 32: com.yq.msg.CityMsg.BallGVGUnionRankList.rankTemp:type_name -> com.yq.msg.CityMsg.BallGVGUnionRankMsg
	77, // 33: com.yq.msg.CityMsg.BallGVGUnionRankMsg.baseData:type_name -> com.yq.msg.CityMsg.OtherUnionData
	51, // 34: com.yq.msg.CityMsg.BallGVGCampRankList.rankTemp:type_name -> com.yq.msg.CityMsg.BallGVGCampRankMsg
	54, // 35: com.yq.msg.CityMsg.BallGVGGetUnionUserListRespMsg.unionMemberScoreList:type_name -> com.yq.msg.CityMsg.BallGVGUnionMemberScore
	13, // 36: com.yq.msg.CityMsg.BallGVGConfigSyncMsg.placeConfig:type_name -> com.yq.msg.CityMsg.BallGVGPlaceConfigTemp
	57, // 37: com.yq.msg.CityMsg.BallGVGAttackedSyncMsg.attack:type_name -> com.yq.msg.CityMsg.BallGVGAttackedTemp
	58, // 38: com.yq.msg.CityMsg.BallGVGAttackedTemp.atkTempList:type_name -> com.yq.msg.CityMsg.BallGVGOneAttackedTemp
	12, // 39: com.yq.msg.CityMsg.BallGVGCampScoreSyncMsg.campScore:type_name -> com.yq.msg.CityMsg.BallGVGCampScoreSyncTemp
	4,  // 40: com.yq.msg.CityMsg.BallGVGPlaceSyncMsg.user:type_name -> com.yq.msg.CityMsg.BallGVGSimpleUserTemp
	62, // 41: com.yq.msg.CityMsg.BallGVGNoticeListMsg.notice:type_name -> com.yq.msg.CityMsg.BallGVGNoticeTemp
	62, // 42: com.yq.msg.CityMsg.BallGVGNoticeListMsg.campNotice:type_name -> com.yq.msg.CityMsg.BallGVGNoticeTemp
	63, // 43: com.yq.msg.CityMsg.BallGVGNoticeTemp.user1:type_name -> com.yq.msg.CityMsg.BallGVGNoticeUserTemp
	63, // 44: com.yq.msg.CityMsg.BallGVGNoticeTemp.user2:type_name -> com.yq.msg.CityMsg.BallGVGNoticeUserTemp
	78, // 45: com.yq.msg.CityMsg.BallGVGNoticeUserTemp.headInfo:type_name -> com.yq.msg.CityMsg.PlayerHeadDataMsg
	62, // 46: com.yq.msg.CityMsg.BallGVGNoticeSyncMsg.notice:type_name -> com.yq.msg.CityMsg.BallGVGNoticeTemp
	62, // 47: com.yq.msg.CityMsg.BallGVGNoticeSyncMsg.campNotice:type_name -> com.yq.msg.CityMsg.BallGVGNoticeTemp
	7,  // 48: com.yq.msg.CityMsg.BallGVGCampSyncMsg.camp:type_name -> com.yq.msg.CityMsg.BallGVGCampTemp
	2,  // 49: com.yq.msg.CityMsg.BallGVGAttackedUserSyncMsg.attackUserData:type_name -> com.yq.msg.CityMsg.BallGVGOtherUserTemp
	57, // 50: com.yq.msg.CityMsg.BallGVGAttackedUserSyncMsg.attack:type_name -> com.yq.msg.CityMsg.BallGVGAttackedTemp
	1,  // 51: com.yq.msg.CityMsg.BallGVGAttackedUserSyncMsg.userData:type_name -> com.yq.msg.CityMsg.BallGVGUserDataTemp
	67, // 52: com.yq.msg.CityMsg.BallGVGAttackedUserSyncMsg.scoreResult:type_name -> com.yq.msg.CityMsg.BallGVGBattleScoreResultTemp
	18, // 53: com.yq.msg.CityMsg.BallGVGBattleScoreResultTemp.battleScore:type_name -> com.yq.msg.CityMsg.BallGVGBattleScoreTemp
	18, // 54: com.yq.msg.CityMsg.BallGVGBattleScoreResultTemp.TotalBattleScore:type_name -> com.yq.msg.CityMsg.BallGVGBattleScoreTemp
	10, // 55: com.yq.msg.CityMsg.BallGVGPlaceSeizeSyncMsg.seize:type_name -> com.yq.msg.CityMsg.BallGVGPlaceSeizeInfoTemp
	2,  // 56: com.yq.msg.CityMsg.BallGVGEnterPlaceSync.user:type_name -> com.yq.msg.CityMsg.BallGVGOtherUserTemp
	79, // 57: com.yq.msg.CityMsg.BallGVGAbilityRankRespMsg.rankMsg:type_name -> com.yq.msg.CityMsg.RankMsg
	19, // 58: com.yq.msg.CityMsg.BallGVGEndDataSyncMsg.endData:type_name -> com.yq.msg.CityMsg.BallGVGEndDataTemp
	59, // [59:59] is the sub-list for method output_type
	59, // [59:59] is the sub-list for method input_type
	59, // [59:59] is the sub-list for extension type_name
	59, // [59:59] is the sub-list for extension extendee
	0,  // [0:59] is the sub-list for field type_name
}

func init() { file_BallGVG_proto_init() }
func file_BallGVG_proto_init() {
	if File_BallGVG_proto != nil {
		return
	}
	file_Rank_proto_init()
	file_Union_proto_init()
	file_WatchPlayer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_BallGVG_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGActivityDataTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGUserDataTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGOtherUserTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGUserDetailTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGSimpleUserTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGUserPropertyTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGAttrInfoTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGCampTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGPositionTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGPlaceDataTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGPlaceSeizeInfoTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGCampScoreTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGCampScoreSyncTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGPlaceConfigTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGPlaceSimpleTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGPlaceCampMemberTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGBestPerformanceTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGBattleScoreUserTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGBattleScoreTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGEndDataTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGUnionNameListReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGUnionNameListRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGApplicationReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGApplicationRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGAbilityRankNumReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGAbilityRankNumRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGEnterActivityReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGEnterActivityRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGEnterPlaceReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGEnterPlaceRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGLeavePlaceReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGLeavePlaceRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGMoveReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGMoveRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGAttackReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGAttackRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGAppointMajorUserReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGAppointMajorUserRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGMarkPlaceReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGMarkPlaceRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGLeaveActivityReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGLeaveActivityRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGGetPlaceInfoReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGGetPlaceInfoRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGGetUserRankReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGGetUserRankRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGUserRankList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGUserRankMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGUnionRankList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGUnionRankMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGCampRankList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGCampRankMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGGetUnionUserListReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGGetUnionUserListRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGUnionMemberScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGConfigSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGAttackedSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGAttackedTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGOneAttackedTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGCampScoreSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGPlaceSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGNoticeListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGNoticeTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGNoticeUserTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGNoticeSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGCampSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGAttackedUserSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGBattleScoreResultTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGPlaceSeizeSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGEnterPlaceSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGLeavePlaceSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGAbilityRankReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGAbilityRankRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGEndDataSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGRedDotReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_BallGVG_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*BallGVGRedDotRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_BallGVG_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   76,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_BallGVG_proto_goTypes,
		DependencyIndexes: file_BallGVG_proto_depIdxs,
		MessageInfos:      file_BallGVG_proto_msgTypes,
	}.Build()
	File_BallGVG_proto = out.File
	file_BallGVG_proto_rawDesc = nil
	file_BallGVG_proto_goTypes = nil
	file_BallGVG_proto_depIdxs = nil
}
