// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: Attribute.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DealEquipmentEnum int32

const (
	DealEquipmentEnum_DealEquipmentEnum_Equip              DealEquipmentEnum = 0
	DealEquipmentEnum_DealEquipmentEnum_Resolve            DealEquipmentEnum = 1
	DealEquipmentEnum_DealEquipmentEnum_EquipAndResolveOld DealEquipmentEnum = 2
)

// Enum value maps for DealEquipmentEnum.
var (
	DealEquipmentEnum_name = map[int32]string{
		0: "DealEquipmentEnum_Equip",
		1: "DealEquipmentEnum_Resolve",
		2: "DealEquipmentEnum_EquipAndResolveOld",
	}
	DealEquipmentEnum_value = map[string]int32{
		"DealEquipmentEnum_Equip":              0,
		"DealEquipmentEnum_Resolve":            1,
		"DealEquipmentEnum_EquipAndResolveOld": 2,
	}
)

func (x DealEquipmentEnum) Enum() *DealEquipmentEnum {
	p := new(DealEquipmentEnum)
	*p = x
	return p
}

func (x DealEquipmentEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DealEquipmentEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_Attribute_proto_enumTypes[0].Descriptor()
}

func (DealEquipmentEnum) Type() protoreflect.EnumType {
	return &file_Attribute_proto_enumTypes[0]
}

func (x DealEquipmentEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DealEquipmentEnum) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DealEquipmentEnum(num)
	return nil
}

// Deprecated: Use DealEquipmentEnum.Descriptor instead.
func (DealEquipmentEnum) EnumDescriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{0}
}

type PlayerAttributeDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RealmsId                *int32              `protobuf:"varint,1,req,name=realmsId" json:"realmsId,omitempty"`
	Exp                     *string             `protobuf:"bytes,2,req,name=exp" json:"exp,omitempty"`
	FightValue              *int64              `protobuf:"varint,3,opt,name=fightValue" json:"fightValue,omitempty"`
	PlayerAttributeDataList []*AttributeDataMsg `protobuf:"bytes,4,rep,name=playerAttributeDataList" json:"playerAttributeDataList,omitempty"`
	EquipmentList           []*EquipmentDataMsg `protobuf:"bytes,5,rep,name=equipmentList" json:"equipmentList,omitempty"`
	UseSeparationIdx        *int32              `protobuf:"varint,6,opt,name=useSeparationIdx" json:"useSeparationIdx,omitempty"`
	SoaringState            *int32              `protobuf:"varint,7,opt,name=soaringState" json:"soaringState,omitempty"`
	ResetSoaringTimes       *int32              `protobuf:"varint,8,opt,name=resetSoaringTimes" json:"resetSoaringTimes,omitempty"`
	TodaySoaringTimes       *int32              `protobuf:"varint,9,opt,name=todaySoaringTimes" json:"todaySoaringTimes,omitempty"`
}

func (x *PlayerAttributeDataMsg) Reset() {
	*x = PlayerAttributeDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAttributeDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAttributeDataMsg) ProtoMessage() {}

func (x *PlayerAttributeDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAttributeDataMsg.ProtoReflect.Descriptor instead.
func (*PlayerAttributeDataMsg) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerAttributeDataMsg) GetRealmsId() int32 {
	if x != nil && x.RealmsId != nil {
		return *x.RealmsId
	}
	return 0
}

func (x *PlayerAttributeDataMsg) GetExp() string {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return ""
}

func (x *PlayerAttributeDataMsg) GetFightValue() int64 {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return 0
}

func (x *PlayerAttributeDataMsg) GetPlayerAttributeDataList() []*AttributeDataMsg {
	if x != nil {
		return x.PlayerAttributeDataList
	}
	return nil
}

func (x *PlayerAttributeDataMsg) GetEquipmentList() []*EquipmentDataMsg {
	if x != nil {
		return x.EquipmentList
	}
	return nil
}

func (x *PlayerAttributeDataMsg) GetUseSeparationIdx() int32 {
	if x != nil && x.UseSeparationIdx != nil {
		return *x.UseSeparationIdx
	}
	return 0
}

func (x *PlayerAttributeDataMsg) GetSoaringState() int32 {
	if x != nil && x.SoaringState != nil {
		return *x.SoaringState
	}
	return 0
}

func (x *PlayerAttributeDataMsg) GetResetSoaringTimes() int32 {
	if x != nil && x.ResetSoaringTimes != nil {
		return *x.ResetSoaringTimes
	}
	return 0
}

func (x *PlayerAttributeDataMsg) GetTodaySoaringTimes() int32 {
	if x != nil && x.TodaySoaringTimes != nil {
		return *x.TodaySoaringTimes
	}
	return 0
}

type SeparationDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index                   *int32                   `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Name                    *string                  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	EquipmentList           []*EquipmentDataMsg      `protobuf:"bytes,3,rep,name=equipmentList" json:"equipmentList,omitempty"`
	TalentData              []*TalentDataMsg         `protobuf:"bytes,4,rep,name=talentData" json:"talentData,omitempty"`
	EquipPetId              *int32                   `protobuf:"varint,5,opt,name=equipPetId" json:"equipPetId,omitempty"`
	SpiritBattleTeamMsg     []*SpiritBattleTeamMsg   `protobuf:"bytes,6,rep,name=spiritBattleTeamMsg" json:"spiritBattleTeamMsg,omitempty"`
	SpiritBattleTeamNo      *int32                   `protobuf:"varint,7,opt,name=spiritBattleTeamNo" json:"spiritBattleTeamNo,omitempty"`
	EquipMagicList          []int32                  `protobuf:"varint,8,rep,name=equipMagicList" json:"equipMagicList,omitempty"`
	EquipCloudId            *int32                   `protobuf:"varint,9,opt,name=equipCloudId" json:"equipCloudId,omitempty"`
	FightValue              *int64                   `protobuf:"varint,10,opt,name=fightValue" json:"fightValue,omitempty"`
	PlayerAttributeDataList []*AttributeDataMsg      `protobuf:"bytes,11,rep,name=playerAttributeDataList" json:"playerAttributeDataList,omitempty"`
	EquipCloudSkinId        *int32                   `protobuf:"varint,12,opt,name=equipCloudSkinId" json:"equipCloudSkinId,omitempty"`
	CurRuleProgrammeIdx     *int32                   `protobuf:"varint,13,opt,name=curRuleProgrammeIdx" json:"curRuleProgrammeIdx,omitempty"`
	PupilDetailData         *PupilDetailDataMsg      `protobuf:"bytes,14,opt,name=pupilDetailData" json:"pupilDetailData,omitempty"`
	EquipAppearanceId       *int32                   `protobuf:"varint,15,opt,name=equipAppearanceId" json:"equipAppearanceId,omitempty"`
	EquipUniverseSkillMsg   []*EquipUniverseSkillMsg `protobuf:"bytes,16,rep,name=equipUniverseSkillMsg" json:"equipUniverseSkillMsg,omitempty"`
	UniverseLevel           *int32                   `protobuf:"varint,17,opt,name=universeLevel" json:"universeLevel,omitempty"`
	EquipMagicMsgList       []*MagicDataMsg          `protobuf:"bytes,18,rep,name=equipMagicMsgList" json:"equipMagicMsgList,omitempty"`
}

func (x *SeparationDataMsg) Reset() {
	*x = SeparationDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeparationDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeparationDataMsg) ProtoMessage() {}

func (x *SeparationDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeparationDataMsg.ProtoReflect.Descriptor instead.
func (*SeparationDataMsg) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{1}
}

func (x *SeparationDataMsg) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *SeparationDataMsg) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SeparationDataMsg) GetEquipmentList() []*EquipmentDataMsg {
	if x != nil {
		return x.EquipmentList
	}
	return nil
}

func (x *SeparationDataMsg) GetTalentData() []*TalentDataMsg {
	if x != nil {
		return x.TalentData
	}
	return nil
}

func (x *SeparationDataMsg) GetEquipPetId() int32 {
	if x != nil && x.EquipPetId != nil {
		return *x.EquipPetId
	}
	return 0
}

func (x *SeparationDataMsg) GetSpiritBattleTeamMsg() []*SpiritBattleTeamMsg {
	if x != nil {
		return x.SpiritBattleTeamMsg
	}
	return nil
}

func (x *SeparationDataMsg) GetSpiritBattleTeamNo() int32 {
	if x != nil && x.SpiritBattleTeamNo != nil {
		return *x.SpiritBattleTeamNo
	}
	return 0
}

func (x *SeparationDataMsg) GetEquipMagicList() []int32 {
	if x != nil {
		return x.EquipMagicList
	}
	return nil
}

func (x *SeparationDataMsg) GetEquipCloudId() int32 {
	if x != nil && x.EquipCloudId != nil {
		return *x.EquipCloudId
	}
	return 0
}

func (x *SeparationDataMsg) GetFightValue() int64 {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return 0
}

func (x *SeparationDataMsg) GetPlayerAttributeDataList() []*AttributeDataMsg {
	if x != nil {
		return x.PlayerAttributeDataList
	}
	return nil
}

func (x *SeparationDataMsg) GetEquipCloudSkinId() int32 {
	if x != nil && x.EquipCloudSkinId != nil {
		return *x.EquipCloudSkinId
	}
	return 0
}

func (x *SeparationDataMsg) GetCurRuleProgrammeIdx() int32 {
	if x != nil && x.CurRuleProgrammeIdx != nil {
		return *x.CurRuleProgrammeIdx
	}
	return 0
}

func (x *SeparationDataMsg) GetPupilDetailData() *PupilDetailDataMsg {
	if x != nil {
		return x.PupilDetailData
	}
	return nil
}

func (x *SeparationDataMsg) GetEquipAppearanceId() int32 {
	if x != nil && x.EquipAppearanceId != nil {
		return *x.EquipAppearanceId
	}
	return 0
}

func (x *SeparationDataMsg) GetEquipUniverseSkillMsg() []*EquipUniverseSkillMsg {
	if x != nil {
		return x.EquipUniverseSkillMsg
	}
	return nil
}

func (x *SeparationDataMsg) GetUniverseLevel() int32 {
	if x != nil && x.UniverseLevel != nil {
		return *x.UniverseLevel
	}
	return 0
}

func (x *SeparationDataMsg) GetEquipMagicMsgList() []*MagicDataMsg {
	if x != nil {
		return x.EquipMagicMsgList
	}
	return nil
}

type SoaringReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoaringState  *int32 `protobuf:"varint,1,opt,name=soaringState" json:"soaringState,omitempty"`
	OperationType *int32 `protobuf:"varint,2,opt,name=operationType" json:"operationType,omitempty"`
}

func (x *SoaringReq) Reset() {
	*x = SoaringReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoaringReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoaringReq) ProtoMessage() {}

func (x *SoaringReq) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoaringReq.ProtoReflect.Descriptor instead.
func (*SoaringReq) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{2}
}

func (x *SoaringReq) GetSoaringState() int32 {
	if x != nil && x.SoaringState != nil {
		return *x.SoaringState
	}
	return 0
}

func (x *SoaringReq) GetOperationType() int32 {
	if x != nil && x.OperationType != nil {
		return *x.OperationType
	}
	return 0
}

type SoaringResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	SoaringState *int32 `protobuf:"varint,2,opt,name=soaringState" json:"soaringState,omitempty"`
}

func (x *SoaringResp) Reset() {
	*x = SoaringResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoaringResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoaringResp) ProtoMessage() {}

func (x *SoaringResp) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoaringResp.ProtoReflect.Descriptor instead.
func (*SoaringResp) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{3}
}

func (x *SoaringResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SoaringResp) GetSoaringState() int32 {
	if x != nil && x.SoaringState != nil {
		return *x.SoaringState
	}
	return 0
}

type SetSeparationNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeparationIdx *int32  `protobuf:"varint,1,opt,name=separationIdx" json:"separationIdx,omitempty"`
	Name          *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *SetSeparationNameReq) Reset() {
	*x = SetSeparationNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSeparationNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSeparationNameReq) ProtoMessage() {}

func (x *SetSeparationNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSeparationNameReq.ProtoReflect.Descriptor instead.
func (*SetSeparationNameReq) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{4}
}

func (x *SetSeparationNameReq) GetSeparationIdx() int32 {
	if x != nil && x.SeparationIdx != nil {
		return *x.SeparationIdx
	}
	return 0
}

func (x *SetSeparationNameReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type SetSeparationNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *SetSeparationNameResp) Reset() {
	*x = SetSeparationNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSeparationNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSeparationNameResp) ProtoMessage() {}

func (x *SetSeparationNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSeparationNameResp.ProtoReflect.Descriptor instead.
func (*SetSeparationNameResp) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{5}
}

func (x *SetSeparationNameResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type SwitchSeparationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeparationIdx *int32 `protobuf:"varint,1,opt,name=separationIdx" json:"separationIdx,omitempty"`
}

func (x *SwitchSeparationReq) Reset() {
	*x = SwitchSeparationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchSeparationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchSeparationReq) ProtoMessage() {}

func (x *SwitchSeparationReq) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchSeparationReq.ProtoReflect.Descriptor instead.
func (*SwitchSeparationReq) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{6}
}

func (x *SwitchSeparationReq) GetSeparationIdx() int32 {
	if x != nil && x.SeparationIdx != nil {
		return *x.SeparationIdx
	}
	return 0
}

type SwitchSeparationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32             `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Separation *SeparationDataMsg `protobuf:"bytes,2,opt,name=separation" json:"separation,omitempty"`
}

func (x *SwitchSeparationResp) Reset() {
	*x = SwitchSeparationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchSeparationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchSeparationResp) ProtoMessage() {}

func (x *SwitchSeparationResp) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchSeparationResp.ProtoReflect.Descriptor instead.
func (*SwitchSeparationResp) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{7}
}

func (x *SwitchSeparationResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SwitchSeparationResp) GetSeparation() *SeparationDataMsg {
	if x != nil {
		return x.Separation
	}
	return nil
}

type GetSeparationDataMsgListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSeparationDataMsgListReq) Reset() {
	*x = GetSeparationDataMsgListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeparationDataMsgListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeparationDataMsgListReq) ProtoMessage() {}

func (x *GetSeparationDataMsgListReq) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeparationDataMsgListReq.ProtoReflect.Descriptor instead.
func (*GetSeparationDataMsgListReq) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{8}
}

type GetSeparationDataMsgListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                  *int32               `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	UseSeparationDataMsg []*SeparationDataMsg `protobuf:"bytes,2,rep,name=useSeparationDataMsg" json:"useSeparationDataMsg,omitempty"`
}

func (x *GetSeparationDataMsgListResp) Reset() {
	*x = GetSeparationDataMsgListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeparationDataMsgListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeparationDataMsgListResp) ProtoMessage() {}

func (x *GetSeparationDataMsgListResp) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeparationDataMsgListResp.ProtoReflect.Descriptor instead.
func (*GetSeparationDataMsgListResp) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{9}
}

func (x *GetSeparationDataMsgListResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GetSeparationDataMsgListResp) GetUseSeparationDataMsg() []*SeparationDataMsg {
	if x != nil {
		return x.UseSeparationDataMsg
	}
	return nil
}

type DreamDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DreamLv                *int32                    `protobuf:"varint,1,opt,name=dreamLv" json:"dreamLv,omitempty"`
	UnDealEquipmentDataMsg []*UnDealEquipmentDataMsg `protobuf:"bytes,2,rep,name=unDealEquipmentDataMsg" json:"unDealEquipmentDataMsg,omitempty"`
	DreamLvUpEndTime       *int64                    `protobuf:"varint,3,opt,name=dreamLvUpEndTime" json:"dreamLvUpEndTime,omitempty"`
	FreeSpeedUpCdEndTime   *int64                    `protobuf:"varint,4,opt,name=freeSpeedUpCdEndTime" json:"freeSpeedUpCdEndTime,omitempty"`
	FreeSpeedUpTimes       *int32                    `protobuf:"varint,5,opt,name=freeSpeedUpTimes" json:"freeSpeedUpTimes,omitempty"`
	DailyGoldenPeachCost   *int32                    `protobuf:"varint,6,opt,name=dailyGoldenPeachCost" json:"dailyGoldenPeachCost,omitempty"`
}

func (x *DreamDataMsg) Reset() {
	*x = DreamDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DreamDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DreamDataMsg) ProtoMessage() {}

func (x *DreamDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DreamDataMsg.ProtoReflect.Descriptor instead.
func (*DreamDataMsg) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{10}
}

func (x *DreamDataMsg) GetDreamLv() int32 {
	if x != nil && x.DreamLv != nil {
		return *x.DreamLv
	}
	return 0
}

func (x *DreamDataMsg) GetUnDealEquipmentDataMsg() []*UnDealEquipmentDataMsg {
	if x != nil {
		return x.UnDealEquipmentDataMsg
	}
	return nil
}

func (x *DreamDataMsg) GetDreamLvUpEndTime() int64 {
	if x != nil && x.DreamLvUpEndTime != nil {
		return *x.DreamLvUpEndTime
	}
	return 0
}

func (x *DreamDataMsg) GetFreeSpeedUpCdEndTime() int64 {
	if x != nil && x.FreeSpeedUpCdEndTime != nil {
		return *x.FreeSpeedUpCdEndTime
	}
	return 0
}

func (x *DreamDataMsg) GetFreeSpeedUpTimes() int32 {
	if x != nil && x.FreeSpeedUpTimes != nil {
		return *x.FreeSpeedUpTimes
	}
	return 0
}

func (x *DreamDataMsg) GetDailyGoldenPeachCost() int32 {
	if x != nil && x.DailyGoldenPeachCost != nil {
		return *x.DailyGoldenPeachCost
	}
	return 0
}

type UnDealEquipmentDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnDealEquipmentData     *EquipmentDataMsg   `protobuf:"bytes,1,req,name=unDealEquipmentData" json:"unDealEquipmentData,omitempty"`
	PlayerAttributeDataList []*AttributeDataMsg `protobuf:"bytes,2,rep,name=playerAttributeDataList" json:"playerAttributeDataList,omitempty"`
	FightValue              *int64              `protobuf:"varint,3,req,name=fightValue" json:"fightValue,omitempty"`
}

func (x *UnDealEquipmentDataMsg) Reset() {
	*x = UnDealEquipmentDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnDealEquipmentDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnDealEquipmentDataMsg) ProtoMessage() {}

func (x *UnDealEquipmentDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnDealEquipmentDataMsg.ProtoReflect.Descriptor instead.
func (*UnDealEquipmentDataMsg) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{11}
}

func (x *UnDealEquipmentDataMsg) GetUnDealEquipmentData() *EquipmentDataMsg {
	if x != nil {
		return x.UnDealEquipmentData
	}
	return nil
}

func (x *UnDealEquipmentDataMsg) GetPlayerAttributeDataList() []*AttributeDataMsg {
	if x != nil {
		return x.PlayerAttributeDataList
	}
	return nil
}

func (x *UnDealEquipmentDataMsg) GetFightValue() int64 {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return 0
}

type ReqDealEquipmentMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   *DealEquipmentEnum `protobuf:"varint,1,req,name=type,enum=com.yq.msg.CityMsg.DealEquipmentEnum" json:"type,omitempty"`
	IdList []int64            `protobuf:"varint,2,rep,name=idList" json:"idList,omitempty"`
}

func (x *ReqDealEquipmentMsg) Reset() {
	*x = ReqDealEquipmentMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDealEquipmentMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDealEquipmentMsg) ProtoMessage() {}

func (x *ReqDealEquipmentMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDealEquipmentMsg.ProtoReflect.Descriptor instead.
func (*ReqDealEquipmentMsg) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{12}
}

func (x *ReqDealEquipmentMsg) GetType() DealEquipmentEnum {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return DealEquipmentEnum_DealEquipmentEnum_Equip
}

func (x *ReqDealEquipmentMsg) GetIdList() []int64 {
	if x != nil {
		return x.IdList
	}
	return nil
}

type RspDealEquipmentMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                    *int32                  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Reward                 *string                 `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
	PlayerAttributeDataMsg *PlayerAttributeDataMsg `protobuf:"bytes,3,opt,name=playerAttributeDataMsg" json:"playerAttributeDataMsg,omitempty"`
	DreamDataMsg           *DreamDataMsg           `protobuf:"bytes,4,opt,name=dreamDataMsg" json:"dreamDataMsg,omitempty"`
	Exp                    *int32                  `protobuf:"varint,5,opt,name=exp" json:"exp,omitempty"`
	LiquidAddExp           *int32                  `protobuf:"varint,6,opt,name=liquidAddExp" json:"liquidAddExp,omitempty"`
}

func (x *RspDealEquipmentMsg) Reset() {
	*x = RspDealEquipmentMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspDealEquipmentMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspDealEquipmentMsg) ProtoMessage() {}

func (x *RspDealEquipmentMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspDealEquipmentMsg.ProtoReflect.Descriptor instead.
func (*RspDealEquipmentMsg) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{13}
}

func (x *RspDealEquipmentMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RspDealEquipmentMsg) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *RspDealEquipmentMsg) GetPlayerAttributeDataMsg() *PlayerAttributeDataMsg {
	if x != nil {
		return x.PlayerAttributeDataMsg
	}
	return nil
}

func (x *RspDealEquipmentMsg) GetDreamDataMsg() *DreamDataMsg {
	if x != nil {
		return x.DreamDataMsg
	}
	return nil
}

func (x *RspDealEquipmentMsg) GetExp() int32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *RspDealEquipmentMsg) GetLiquidAddExp() int32 {
	if x != nil && x.LiquidAddExp != nil {
		return *x.LiquidAddExp
	}
	return 0
}

type ReqRealmsLeveUpMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqRealmsLeveUpMsg) Reset() {
	*x = ReqRealmsLeveUpMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqRealmsLeveUpMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqRealmsLeveUpMsg) ProtoMessage() {}

func (x *ReqRealmsLeveUpMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqRealmsLeveUpMsg.ProtoReflect.Descriptor instead.
func (*ReqRealmsLeveUpMsg) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{14}
}

type RspRealmsLeveUpMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                    *int32                  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	IsSuccess              *bool                   `protobuf:"varint,2,opt,name=isSuccess" json:"isSuccess,omitempty"`
	PlayerAttributeDataMsg *PlayerAttributeDataMsg `protobuf:"bytes,3,opt,name=playerAttributeDataMsg" json:"playerAttributeDataMsg,omitempty"`
	PlayerCharaDataMsg     *PlayerCharaDataMsg     `protobuf:"bytes,4,opt,name=playerCharaDataMsg" json:"playerCharaDataMsg,omitempty"`
}

func (x *RspRealmsLeveUpMsg) Reset() {
	*x = RspRealmsLeveUpMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspRealmsLeveUpMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspRealmsLeveUpMsg) ProtoMessage() {}

func (x *RspRealmsLeveUpMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspRealmsLeveUpMsg.ProtoReflect.Descriptor instead.
func (*RspRealmsLeveUpMsg) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{15}
}

func (x *RspRealmsLeveUpMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RspRealmsLeveUpMsg) GetIsSuccess() bool {
	if x != nil && x.IsSuccess != nil {
		return *x.IsSuccess
	}
	return false
}

func (x *RspRealmsLeveUpMsg) GetPlayerAttributeDataMsg() *PlayerAttributeDataMsg {
	if x != nil {
		return x.PlayerAttributeDataMsg
	}
	return nil
}

func (x *RspRealmsLeveUpMsg) GetPlayerCharaDataMsg() *PlayerCharaDataMsg {
	if x != nil {
		return x.PlayerCharaDataMsg
	}
	return nil
}

type GetTribulationSuccessProReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTribulationSuccessProReq) Reset() {
	*x = GetTribulationSuccessProReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTribulationSuccessProReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTribulationSuccessProReq) ProtoMessage() {}

func (x *GetTribulationSuccessProReq) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTribulationSuccessProReq.ProtoReflect.Descriptor instead.
func (*GetTribulationSuccessProReq) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{16}
}

type GetTribulationSuccessProResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret         *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Probability *int32 `protobuf:"varint,2,opt,name=probability" json:"probability,omitempty"`
}

func (x *GetTribulationSuccessProResp) Reset() {
	*x = GetTribulationSuccessProResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTribulationSuccessProResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTribulationSuccessProResp) ProtoMessage() {}

func (x *GetTribulationSuccessProResp) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTribulationSuccessProResp.ProtoReflect.Descriptor instead.
func (*GetTribulationSuccessProResp) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{17}
}

func (x *GetTribulationSuccessProResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GetTribulationSuccessProResp) GetProbability() int32 {
	if x != nil && x.Probability != nil {
		return *x.Probability
	}
	return 0
}

type ReqDreamMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auto  *bool   `protobuf:"varint,1,opt,name=auto" json:"auto,omitempty"`
	Attr  []int32 `protobuf:"varint,2,rep,name=attr" json:"attr,omitempty"`
	Times *int32  `protobuf:"varint,3,opt,name=times" json:"times,omitempty"`
}

func (x *ReqDreamMsg) Reset() {
	*x = ReqDreamMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDreamMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDreamMsg) ProtoMessage() {}

func (x *ReqDreamMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDreamMsg.ProtoReflect.Descriptor instead.
func (*ReqDreamMsg) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{18}
}

func (x *ReqDreamMsg) GetAuto() bool {
	if x != nil && x.Auto != nil {
		return *x.Auto
	}
	return false
}

func (x *ReqDreamMsg) GetAttr() []int32 {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *ReqDreamMsg) GetTimes() int32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

type RspDreamMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                    *int32                  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	DropReward             []*DropReward           `protobuf:"bytes,2,rep,name=dropReward" json:"dropReward,omitempty"`
	PlayerAttributeDataMsg *PlayerAttributeDataMsg `protobuf:"bytes,3,opt,name=playerAttributeDataMsg" json:"playerAttributeDataMsg,omitempty"`
	DreamItemCostTotalNum  *int64                  `protobuf:"varint,4,opt,name=dreamItemCostTotalNum" json:"dreamItemCostTotalNum,omitempty"`
}

func (x *RspDreamMsg) Reset() {
	*x = RspDreamMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspDreamMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspDreamMsg) ProtoMessage() {}

func (x *RspDreamMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspDreamMsg.ProtoReflect.Descriptor instead.
func (*RspDreamMsg) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{19}
}

func (x *RspDreamMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RspDreamMsg) GetDropReward() []*DropReward {
	if x != nil {
		return x.DropReward
	}
	return nil
}

func (x *RspDreamMsg) GetPlayerAttributeDataMsg() *PlayerAttributeDataMsg {
	if x != nil {
		return x.PlayerAttributeDataMsg
	}
	return nil
}

func (x *RspDreamMsg) GetDreamItemCostTotalNum() int64 {
	if x != nil && x.DreamItemCostTotalNum != nil {
		return *x.DreamItemCostTotalNum
	}
	return 0
}

type DropReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reward    *string                 `protobuf:"bytes,1,opt,name=reward" json:"reward,omitempty"`
	Equipment *UnDealEquipmentDataMsg `protobuf:"bytes,2,opt,name=equipment" json:"equipment,omitempty"`
}

func (x *DropReward) Reset() {
	*x = DropReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropReward) ProtoMessage() {}

func (x *DropReward) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropReward.ProtoReflect.Descriptor instead.
func (*DropReward) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{20}
}

func (x *DropReward) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *DropReward) GetEquipment() *UnDealEquipmentDataMsg {
	if x != nil {
		return x.Equipment
	}
	return nil
}

type DreamLvUpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DreamLvUpReq) Reset() {
	*x = DreamLvUpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DreamLvUpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DreamLvUpReq) ProtoMessage() {}

func (x *DreamLvUpReq) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DreamLvUpReq.ProtoReflect.Descriptor instead.
func (*DreamLvUpReq) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{21}
}

type DreamLvUpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32        `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	DreamDataMsg *DreamDataMsg `protobuf:"bytes,2,opt,name=dreamDataMsg" json:"dreamDataMsg,omitempty"`
}

func (x *DreamLvUpResp) Reset() {
	*x = DreamLvUpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DreamLvUpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DreamLvUpResp) ProtoMessage() {}

func (x *DreamLvUpResp) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DreamLvUpResp.ProtoReflect.Descriptor instead.
func (*DreamLvUpResp) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{22}
}

func (x *DreamLvUpResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *DreamLvUpResp) GetDreamDataMsg() *DreamDataMsg {
	if x != nil {
		return x.DreamDataMsg
	}
	return nil
}

type DreamLvUpSpeedUpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpeedUpType *int32 `protobuf:"varint,1,req,name=speedUpType" json:"speedUpType,omitempty"`
	UseTimes    *int32 `protobuf:"varint,2,opt,name=useTimes" json:"useTimes,omitempty"`
	IsUseADTime *bool  `protobuf:"varint,3,opt,name=isUseADTime" json:"isUseADTime,omitempty"`
}

func (x *DreamLvUpSpeedUpReq) Reset() {
	*x = DreamLvUpSpeedUpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DreamLvUpSpeedUpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DreamLvUpSpeedUpReq) ProtoMessage() {}

func (x *DreamLvUpSpeedUpReq) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DreamLvUpSpeedUpReq.ProtoReflect.Descriptor instead.
func (*DreamLvUpSpeedUpReq) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{23}
}

func (x *DreamLvUpSpeedUpReq) GetSpeedUpType() int32 {
	if x != nil && x.SpeedUpType != nil {
		return *x.SpeedUpType
	}
	return 0
}

func (x *DreamLvUpSpeedUpReq) GetUseTimes() int32 {
	if x != nil && x.UseTimes != nil {
		return *x.UseTimes
	}
	return 0
}

func (x *DreamLvUpSpeedUpReq) GetIsUseADTime() bool {
	if x != nil && x.IsUseADTime != nil {
		return *x.IsUseADTime
	}
	return false
}

type DreamLvUpSpeedUpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32        `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	DreamDataMsg *DreamDataMsg `protobuf:"bytes,2,opt,name=dreamDataMsg" json:"dreamDataMsg,omitempty"`
	Reward       *string       `protobuf:"bytes,3,opt,name=reward" json:"reward,omitempty"`
}

func (x *DreamLvUpSpeedUpResp) Reset() {
	*x = DreamLvUpSpeedUpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DreamLvUpSpeedUpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DreamLvUpSpeedUpResp) ProtoMessage() {}

func (x *DreamLvUpSpeedUpResp) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DreamLvUpSpeedUpResp.ProtoReflect.Descriptor instead.
func (*DreamLvUpSpeedUpResp) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{24}
}

func (x *DreamLvUpSpeedUpResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *DreamLvUpSpeedUpResp) GetDreamDataMsg() *DreamDataMsg {
	if x != nil {
		return x.DreamDataMsg
	}
	return nil
}

func (x *DreamLvUpSpeedUpResp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type GetUnDealEquipmentMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUnDealEquipmentMsgReq) Reset() {
	*x = GetUnDealEquipmentMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnDealEquipmentMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnDealEquipmentMsgReq) ProtoMessage() {}

func (x *GetUnDealEquipmentMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnDealEquipmentMsgReq.ProtoReflect.Descriptor instead.
func (*GetUnDealEquipmentMsgReq) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{25}
}

type GetUnDealEquipmentMsgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                     *int32                    `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	UndDealEquipmentDataMsg []*UnDealEquipmentDataMsg `protobuf:"bytes,2,rep,name=undDealEquipmentDataMsg" json:"undDealEquipmentDataMsg,omitempty"`
}

func (x *GetUnDealEquipmentMsgResp) Reset() {
	*x = GetUnDealEquipmentMsgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Attribute_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnDealEquipmentMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnDealEquipmentMsgResp) ProtoMessage() {}

func (x *GetUnDealEquipmentMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_Attribute_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnDealEquipmentMsgResp.ProtoReflect.Descriptor instead.
func (*GetUnDealEquipmentMsgResp) Descriptor() ([]byte, []int) {
	return file_Attribute_proto_rawDescGZIP(), []int{26}
}

func (x *GetUnDealEquipmentMsgResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GetUnDealEquipmentMsgResp) GetUndDealEquipmentDataMsg() []*UnDealEquipmentDataMsg {
	if x != nil {
		return x.UndDealEquipmentDataMsg
	}
	return nil
}

var File_Attribute_proto protoreflect.FileDescriptor

var file_Attribute_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x03, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x78, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x5e, 0x0a,
	0x17, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x52, 0x17, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a,
	0x0d, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0d, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x75, 0x73, 0x65,
	0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x78, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x75, 0x73, 0x65, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x6f, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x53, 0x6f, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x72, 0x65, 0x73, 0x65, 0x74, 0x53, 0x6f, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x6f, 0x64, 0x61, 0x79,
	0x53, 0x6f, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x6f, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0xf8, 0x07, 0x0a, 0x11, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x73, 0x67, 0x52, 0x0d, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x41, 0x0a, 0x0a, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x50, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x71, 0x75, 0x69, 0x70, 0x50,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x13, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x13, 0x73, 0x70, 0x69, 0x72,
	0x69, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x12,
	0x2e, 0x0a, 0x12, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x70, 0x69,
	0x72, 0x69, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x12,
	0x26, 0x0a, 0x0e, 0x65, 0x71, 0x75, 0x69, 0x70, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x71, 0x75, 0x69, 0x70, 0x4d, 0x61,
	0x67, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65,
	0x71, 0x75, 0x69, 0x70, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66,
	0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x5e, 0x0a, 0x17, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x73, 0x67, 0x52, 0x17, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x65,
	0x71, 0x75, 0x69, 0x70, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x71, 0x75, 0x69, 0x70, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x53, 0x6b, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x52, 0x75,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x49, 0x64, 0x78, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x75, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x6d, 0x65, 0x49, 0x64, 0x78, 0x12, 0x50, 0x0a, 0x0f, 0x70, 0x75, 0x70,
	0x69, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0f, 0x70, 0x75, 0x70, 0x69,
	0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x11, 0x65,
	0x71, 0x75, 0x69, 0x70, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x65, 0x71, 0x75, 0x69, 0x70, 0x41, 0x70, 0x70,
	0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x5f, 0x0a, 0x15, 0x65, 0x71, 0x75,
	0x69, 0x70, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4d,
	0x73, 0x67, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x4d, 0x73, 0x67, 0x52, 0x15, 0x65, 0x71, 0x75, 0x69, 0x70, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x4e, 0x0a, 0x11, 0x65, 0x71, 0x75, 0x69, 0x70, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4d, 0x73,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x11, 0x65,
	0x71, 0x75, 0x69, 0x70, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x56, 0x0a, 0x0a, 0x53, 0x6f, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x6f, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x6f, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x43, 0x0a, 0x0b, 0x53, 0x6f, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x73, 0x6f, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x50, 0x0a,
	0x14, 0x53, 0x65, 0x74, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65,
	0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x29, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x3b, 0x0a, 0x13, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x78, 0x22, 0x6f, 0x0a, 0x14, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x45, 0x0a, 0x0a, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x70, 0x61, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x73, 0x65,
	0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x8b, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x59, 0x0a, 0x14, 0x75, 0x73,
	0x65, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65,
	0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52,
	0x14, 0x75, 0x73, 0x65, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x73, 0x67, 0x22, 0xcc, 0x02, 0x0a, 0x0c, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x4c,
	0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x76,
	0x12, 0x62, 0x0a, 0x16, 0x75, 0x6e, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x16, 0x75, 0x6e,
	0x44, 0x65, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x76, 0x55,
	0x70, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x64, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x76, 0x55, 0x70, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x32, 0x0a, 0x14, 0x66, 0x72, 0x65, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x55, 0x70, 0x43,
	0x64, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14,
	0x66, 0x72, 0x65, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x55, 0x70, 0x43, 0x64, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x72, 0x65, 0x65, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x55, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x66, 0x72, 0x65, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x55, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x32, 0x0a, 0x14, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x50,
	0x65, 0x61, 0x63, 0x68, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14,
	0x64, 0x61, 0x69, 0x6c, 0x79, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x50, 0x65, 0x61, 0x63, 0x68,
	0x43, 0x6f, 0x73, 0x74, 0x22, 0xf0, 0x01, 0x0a, 0x16, 0x55, 0x6e, 0x44, 0x65, 0x61, 0x6c, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12,
	0x56, 0x0a, 0x13, 0x75, 0x6e, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x73, 0x67, 0x52, 0x13, 0x75, 0x6e, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5e, 0x0a, 0x17, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x17,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x67,
	0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x68, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x44, 0x65,
	0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x39,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x69, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x9f, 0x02, 0x0a, 0x13, 0x52, 0x73, 0x70, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x62, 0x0a, 0x16, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52,
	0x16, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x44, 0x0a, 0x0c, 0x64, 0x72, 0x65, 0x61, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52,
	0x0c, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x78, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12,
	0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x41, 0x64, 0x64, 0x45, 0x78, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x41, 0x64, 0x64,
	0x45, 0x78, 0x70, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x73,
	0x4c, 0x65, 0x76, 0x65, 0x55, 0x70, 0x4d, 0x73, 0x67, 0x22, 0x80, 0x02, 0x0a, 0x12, 0x52, 0x73,
	0x70, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x55, 0x70, 0x4d, 0x73, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x62, 0x0a, 0x16, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x16, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x12, 0x56, 0x0a, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x22, 0x1d, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x62, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x22, 0x52, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x69, 0x62, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22,
	0x4b, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x22, 0xf9, 0x01, 0x0a,
	0x0b, 0x52, 0x73, 0x70, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x3e,
	0x0a, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x62,
	0x0a, 0x16, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x16, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x73, 0x67, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x73, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x15, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x73, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x22, 0x6e, 0x0a, 0x0a, 0x44, 0x72, 0x6f, 0x70,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x48,
	0x0a, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x65,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x44, 0x72, 0x65, 0x61,
	0x6d, 0x4c, 0x76, 0x55, 0x70, 0x52, 0x65, 0x71, 0x22, 0x67, 0x0a, 0x0d, 0x44, 0x72, 0x65, 0x61,
	0x6d, 0x4c, 0x76, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x44, 0x0a, 0x0c, 0x64,
	0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x73, 0x67, 0x52, 0x0c, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73,
	0x67, 0x22, 0x75, 0x0a, 0x13, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x76, 0x55, 0x70, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x55, 0x70, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x55, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x55, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x55, 0x73, 0x65, 0x41,
	0x44, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x55,
	0x73, 0x65, 0x41, 0x44, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x14, 0x44, 0x72, 0x65,
	0x61, 0x6d, 0x4c, 0x76, 0x55, 0x70, 0x53, 0x70, 0x65, 0x65, 0x64, 0x55, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x12, 0x44, 0x0a, 0x0c, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x44,
	0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0c, 0x64, 0x72, 0x65,
	0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x22, 0x93, 0x01,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x64, 0x0a,
	0x17, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x17, 0x75, 0x6e, 0x64, 0x44,
	0x65, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x73, 0x67, 0x2a, 0x79, 0x0a, 0x11, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x65, 0x61, 0x6c,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x5f, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x5f, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x44, 0x65, 0x61, 0x6c, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x5f, 0x45, 0x71, 0x75, 0x69, 0x70, 0x41,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x4f, 0x6c, 0x64, 0x10, 0x02, 0x42, 0x36,
	0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6d, 0x7a,
	0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_Attribute_proto_rawDescOnce sync.Once
	file_Attribute_proto_rawDescData = file_Attribute_proto_rawDesc
)

func file_Attribute_proto_rawDescGZIP() []byte {
	file_Attribute_proto_rawDescOnce.Do(func() {
		file_Attribute_proto_rawDescData = protoimpl.X.CompressGZIP(file_Attribute_proto_rawDescData)
	})
	return file_Attribute_proto_rawDescData
}

var file_Attribute_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Attribute_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_Attribute_proto_goTypes = []any{
	(DealEquipmentEnum)(0),               // 0: com.yq.msg.CityMsg.DealEquipmentEnum
	(*PlayerAttributeDataMsg)(nil),       // 1: com.yq.msg.CityMsg.PlayerAttributeDataMsg
	(*SeparationDataMsg)(nil),            // 2: com.yq.msg.CityMsg.SeparationDataMsg
	(*SoaringReq)(nil),                   // 3: com.yq.msg.CityMsg.SoaringReq
	(*SoaringResp)(nil),                  // 4: com.yq.msg.CityMsg.SoaringResp
	(*SetSeparationNameReq)(nil),         // 5: com.yq.msg.CityMsg.SetSeparationNameReq
	(*SetSeparationNameResp)(nil),        // 6: com.yq.msg.CityMsg.SetSeparationNameResp
	(*SwitchSeparationReq)(nil),          // 7: com.yq.msg.CityMsg.SwitchSeparationReq
	(*SwitchSeparationResp)(nil),         // 8: com.yq.msg.CityMsg.SwitchSeparationResp
	(*GetSeparationDataMsgListReq)(nil),  // 9: com.yq.msg.CityMsg.GetSeparationDataMsgListReq
	(*GetSeparationDataMsgListResp)(nil), // 10: com.yq.msg.CityMsg.GetSeparationDataMsgListResp
	(*DreamDataMsg)(nil),                 // 11: com.yq.msg.CityMsg.DreamDataMsg
	(*UnDealEquipmentDataMsg)(nil),       // 12: com.yq.msg.CityMsg.UnDealEquipmentDataMsg
	(*ReqDealEquipmentMsg)(nil),          // 13: com.yq.msg.CityMsg.ReqDealEquipmentMsg
	(*RspDealEquipmentMsg)(nil),          // 14: com.yq.msg.CityMsg.RspDealEquipmentMsg
	(*ReqRealmsLeveUpMsg)(nil),           // 15: com.yq.msg.CityMsg.ReqRealmsLeveUpMsg
	(*RspRealmsLeveUpMsg)(nil),           // 16: com.yq.msg.CityMsg.RspRealmsLeveUpMsg
	(*GetTribulationSuccessProReq)(nil),  // 17: com.yq.msg.CityMsg.GetTribulationSuccessProReq
	(*GetTribulationSuccessProResp)(nil), // 18: com.yq.msg.CityMsg.GetTribulationSuccessProResp
	(*ReqDreamMsg)(nil),                  // 19: com.yq.msg.CityMsg.ReqDreamMsg
	(*RspDreamMsg)(nil),                  // 20: com.yq.msg.CityMsg.RspDreamMsg
	(*DropReward)(nil),                   // 21: com.yq.msg.CityMsg.DropReward
	(*DreamLvUpReq)(nil),                 // 22: com.yq.msg.CityMsg.DreamLvUpReq
	(*DreamLvUpResp)(nil),                // 23: com.yq.msg.CityMsg.DreamLvUpResp
	(*DreamLvUpSpeedUpReq)(nil),          // 24: com.yq.msg.CityMsg.DreamLvUpSpeedUpReq
	(*DreamLvUpSpeedUpResp)(nil),         // 25: com.yq.msg.CityMsg.DreamLvUpSpeedUpResp
	(*GetUnDealEquipmentMsgReq)(nil),     // 26: com.yq.msg.CityMsg.GetUnDealEquipmentMsgReq
	(*GetUnDealEquipmentMsgResp)(nil),    // 27: com.yq.msg.CityMsg.GetUnDealEquipmentMsgResp
	(*AttributeDataMsg)(nil),             // 28: com.yq.msg.CityMsg.AttributeDataMsg
	(*EquipmentDataMsg)(nil),             // 29: com.yq.msg.CityMsg.EquipmentDataMsg
	(*TalentDataMsg)(nil),                // 30: com.yq.msg.CityMsg.TalentDataMsg
	(*SpiritBattleTeamMsg)(nil),          // 31: com.yq.msg.CityMsg.SpiritBattleTeamMsg
	(*PupilDetailDataMsg)(nil),           // 32: com.yq.msg.CityMsg.PupilDetailDataMsg
	(*EquipUniverseSkillMsg)(nil),        // 33: com.yq.msg.CityMsg.EquipUniverseSkillMsg
	(*MagicDataMsg)(nil),                 // 34: com.yq.msg.CityMsg.MagicDataMsg
	(*PlayerCharaDataMsg)(nil),           // 35: com.yq.msg.CityMsg.PlayerCharaDataMsg
}
var file_Attribute_proto_depIdxs = []int32{
	28, // 0: com.yq.msg.CityMsg.PlayerAttributeDataMsg.playerAttributeDataList:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	29, // 1: com.yq.msg.CityMsg.PlayerAttributeDataMsg.equipmentList:type_name -> com.yq.msg.CityMsg.EquipmentDataMsg
	29, // 2: com.yq.msg.CityMsg.SeparationDataMsg.equipmentList:type_name -> com.yq.msg.CityMsg.EquipmentDataMsg
	30, // 3: com.yq.msg.CityMsg.SeparationDataMsg.talentData:type_name -> com.yq.msg.CityMsg.TalentDataMsg
	31, // 4: com.yq.msg.CityMsg.SeparationDataMsg.spiritBattleTeamMsg:type_name -> com.yq.msg.CityMsg.SpiritBattleTeamMsg
	28, // 5: com.yq.msg.CityMsg.SeparationDataMsg.playerAttributeDataList:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	32, // 6: com.yq.msg.CityMsg.SeparationDataMsg.pupilDetailData:type_name -> com.yq.msg.CityMsg.PupilDetailDataMsg
	33, // 7: com.yq.msg.CityMsg.SeparationDataMsg.equipUniverseSkillMsg:type_name -> com.yq.msg.CityMsg.EquipUniverseSkillMsg
	34, // 8: com.yq.msg.CityMsg.SeparationDataMsg.equipMagicMsgList:type_name -> com.yq.msg.CityMsg.MagicDataMsg
	2,  // 9: com.yq.msg.CityMsg.SwitchSeparationResp.separation:type_name -> com.yq.msg.CityMsg.SeparationDataMsg
	2,  // 10: com.yq.msg.CityMsg.GetSeparationDataMsgListResp.useSeparationDataMsg:type_name -> com.yq.msg.CityMsg.SeparationDataMsg
	12, // 11: com.yq.msg.CityMsg.DreamDataMsg.unDealEquipmentDataMsg:type_name -> com.yq.msg.CityMsg.UnDealEquipmentDataMsg
	29, // 12: com.yq.msg.CityMsg.UnDealEquipmentDataMsg.unDealEquipmentData:type_name -> com.yq.msg.CityMsg.EquipmentDataMsg
	28, // 13: com.yq.msg.CityMsg.UnDealEquipmentDataMsg.playerAttributeDataList:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	0,  // 14: com.yq.msg.CityMsg.ReqDealEquipmentMsg.type:type_name -> com.yq.msg.CityMsg.DealEquipmentEnum
	1,  // 15: com.yq.msg.CityMsg.RspDealEquipmentMsg.playerAttributeDataMsg:type_name -> com.yq.msg.CityMsg.PlayerAttributeDataMsg
	11, // 16: com.yq.msg.CityMsg.RspDealEquipmentMsg.dreamDataMsg:type_name -> com.yq.msg.CityMsg.DreamDataMsg
	1,  // 17: com.yq.msg.CityMsg.RspRealmsLeveUpMsg.playerAttributeDataMsg:type_name -> com.yq.msg.CityMsg.PlayerAttributeDataMsg
	35, // 18: com.yq.msg.CityMsg.RspRealmsLeveUpMsg.playerCharaDataMsg:type_name -> com.yq.msg.CityMsg.PlayerCharaDataMsg
	21, // 19: com.yq.msg.CityMsg.RspDreamMsg.dropReward:type_name -> com.yq.msg.CityMsg.DropReward
	1,  // 20: com.yq.msg.CityMsg.RspDreamMsg.playerAttributeDataMsg:type_name -> com.yq.msg.CityMsg.PlayerAttributeDataMsg
	12, // 21: com.yq.msg.CityMsg.DropReward.equipment:type_name -> com.yq.msg.CityMsg.UnDealEquipmentDataMsg
	11, // 22: com.yq.msg.CityMsg.DreamLvUpResp.dreamDataMsg:type_name -> com.yq.msg.CityMsg.DreamDataMsg
	11, // 23: com.yq.msg.CityMsg.DreamLvUpSpeedUpResp.dreamDataMsg:type_name -> com.yq.msg.CityMsg.DreamDataMsg
	12, // 24: com.yq.msg.CityMsg.GetUnDealEquipmentMsgResp.undDealEquipmentDataMsg:type_name -> com.yq.msg.CityMsg.UnDealEquipmentDataMsg
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_Attribute_proto_init() }
func file_Attribute_proto_init() {
	if File_Attribute_proto != nil {
		return
	}
	file_Common_proto_init()
	file_PlayerChara_proto_init()
	file_Spirit_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Attribute_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerAttributeDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SeparationDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SoaringReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SoaringResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SetSeparationNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SetSeparationNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SwitchSeparationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SwitchSeparationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetSeparationDataMsgListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetSeparationDataMsgListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DreamDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UnDealEquipmentDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ReqDealEquipmentMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*RspDealEquipmentMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ReqRealmsLeveUpMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*RspRealmsLeveUpMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetTribulationSuccessProReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetTribulationSuccessProResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ReqDreamMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*RspDreamMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*DropReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*DreamLvUpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*DreamLvUpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*DreamLvUpSpeedUpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*DreamLvUpSpeedUpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*GetUnDealEquipmentMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Attribute_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetUnDealEquipmentMsgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Attribute_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Attribute_proto_goTypes,
		DependencyIndexes: file_Attribute_proto_depIdxs,
		EnumInfos:         file_Attribute_proto_enumTypes,
		MessageInfos:      file_Attribute_proto_msgTypes,
	}.Build()
	File_Attribute_proto = out.File
	file_Attribute_proto_rawDesc = nil
	file_Attribute_proto_goTypes = nil
	file_Attribute_proto_depIdxs = nil
}
