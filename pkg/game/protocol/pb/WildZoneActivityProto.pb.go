// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: WildZoneActivityProto.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ManHuangTeamEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId         *int64                     `protobuf:"varint,1,opt,name=teamId" json:"teamId,omitempty"`
	TeamName       *string                    `protobuf:"bytes,2,opt,name=teamName" json:"teamName,omitempty"`
	LeaderId       *int64                     `protobuf:"varint,3,opt,name=leaderId" json:"leaderId,omitempty"`
	LeaderServerId *int64                     `protobuf:"varint,4,opt,name=leaderServerId" json:"leaderServerId,omitempty"`
	LeaderName     *string                    `protobuf:"bytes,5,opt,name=leaderName" json:"leaderName,omitempty"`
	Members        []*ManHuangMemberEntity    `protobuf:"bytes,6,rep,name=members" json:"members,omitempty"`
	FightValue     *int64                     `protobuf:"varint,7,opt,name=fightValue" json:"fightValue,omitempty"`
	CreateTime     *int64                     `protobuf:"varint,8,opt,name=createTime" json:"createTime,omitempty"`
	ApplyList      []*ManHuangApplyUserEntity `protobuf:"bytes,9,rep,name=applyList" json:"applyList,omitempty"`
	Rank           *int32                     `protobuf:"varint,10,opt,name=rank" json:"rank,omitempty"`
	IceSoul        *int32                     `protobuf:"varint,11,opt,name=iceSoul" json:"iceSoul,omitempty"`
}

func (x *ManHuangTeamEntity) Reset() {
	*x = ManHuangTeamEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangTeamEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangTeamEntity) ProtoMessage() {}

func (x *ManHuangTeamEntity) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangTeamEntity.ProtoReflect.Descriptor instead.
func (*ManHuangTeamEntity) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{0}
}

func (x *ManHuangTeamEntity) GetTeamId() int64 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

func (x *ManHuangTeamEntity) GetTeamName() string {
	if x != nil && x.TeamName != nil {
		return *x.TeamName
	}
	return ""
}

func (x *ManHuangTeamEntity) GetLeaderId() int64 {
	if x != nil && x.LeaderId != nil {
		return *x.LeaderId
	}
	return 0
}

func (x *ManHuangTeamEntity) GetLeaderServerId() int64 {
	if x != nil && x.LeaderServerId != nil {
		return *x.LeaderServerId
	}
	return 0
}

func (x *ManHuangTeamEntity) GetLeaderName() string {
	if x != nil && x.LeaderName != nil {
		return *x.LeaderName
	}
	return ""
}

func (x *ManHuangTeamEntity) GetMembers() []*ManHuangMemberEntity {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ManHuangTeamEntity) GetFightValue() int64 {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return 0
}

func (x *ManHuangTeamEntity) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *ManHuangTeamEntity) GetApplyList() []*ManHuangApplyUserEntity {
	if x != nil {
		return x.ApplyList
	}
	return nil
}

func (x *ManHuangTeamEntity) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *ManHuangTeamEntity) GetIceSoul() int32 {
	if x != nil && x.IceSoul != nil {
		return *x.IceSoul
	}
	return 0
}

type ManHuangUserDataEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId              *int64                        `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	TeamId              *int64                        `protobuf:"varint,2,opt,name=teamId" json:"teamId,omitempty"`
	PlayerInfo          *PlayerCharacterImageMsg      `protobuf:"bytes,3,opt,name=playerInfo" json:"playerInfo,omitempty"`
	FightValue          *int64                        `protobuf:"varint,4,opt,name=fightValue" json:"fightValue,omitempty"`
	RegionId            *int32                        `protobuf:"varint,5,opt,name=regionId" json:"regionId,omitempty"`
	UnlockRegionId      []int32                       `protobuf:"varint,6,rep,name=unlockRegionId" json:"unlockRegionId,omitempty"`
	Energy              *int32                        `protobuf:"varint,7,opt,name=energy" json:"energy,omitempty"`
	Integral            *int64                        `protobuf:"varint,8,opt,name=integral" json:"integral,omitempty"`
	Rank                *int64                        `protobuf:"varint,9,opt,name=rank" json:"rank,omitempty"`
	TeamInfo            *ManHuangTeamEntity           `protobuf:"bytes,10,opt,name=teamInfo" json:"teamInfo,omitempty"`
	MallInfo            []*ManHuangUserMallInfo       `protobuf:"bytes,11,rep,name=mallInfo" json:"mallInfo,omitempty"`
	LastLeaveTeam       *int64                        `protobuf:"varint,12,opt,name=lastLeaveTeam" json:"lastLeaveTeam,omitempty"`
	LastCreateTeam      *int64                        `protobuf:"varint,13,opt,name=lastCreateTeam" json:"lastCreateTeam,omitempty"`
	ApplyJoinTeamIdList []int64                       `protobuf:"varint,14,rep,name=applyJoinTeamIdList" json:"applyJoinTeamIdList,omitempty"`
	IsEnter             *bool                         `protobuf:"varint,15,opt,name=isEnter" json:"isEnter,omitempty"`
	EnergyLastTime      *int64                        `protobuf:"varint,16,opt,name=energyLastTime" json:"energyLastTime,omitempty"`
	TotalBlood          *int64                        `protobuf:"varint,17,opt,name=totalBlood" json:"totalBlood,omitempty"`
	Blood               *int64                        `protobuf:"varint,18,opt,name=blood" json:"blood,omitempty"`
	TeamMemberNotify    *ManHuangTeamMemberNotify     `protobuf:"bytes,19,opt,name=teamMemberNotify" json:"teamMemberNotify,omitempty"`
	EnemyNotify         []*ManHuangEnemyNotify        `protobuf:"bytes,20,rep,name=enemyNotify" json:"enemyNotify,omitempty"`
	MonsterBall         []*ManHuangUserItemInfoTemp   `protobuf:"bytes,21,rep,name=monsterBall" json:"monsterBall,omitempty"`
	Grass               []*ManHuangUserItemInfoTemp   `protobuf:"bytes,22,rep,name=grass" json:"grass,omitempty"`
	Box                 []*ManHuangUserItemInfoTemp   `protobuf:"bytes,23,rep,name=box" json:"box,omitempty"`
	EventDone           []*ManHuangUserItemInfoTemp   `protobuf:"bytes,24,rep,name=eventDone" json:"eventDone,omitempty"`
	EventDoingInfo      *ManHuangEventDoingInfoEntity `protobuf:"bytes,25,opt,name=eventDoingInfo" json:"eventDoingInfo,omitempty"`
	SignInfo            *ManHuangEventDoingInfoEntity `protobuf:"bytes,26,opt,name=signInfo" json:"signInfo,omitempty"`
	IceSoul             *int32                        `protobuf:"varint,27,opt,name=iceSoul" json:"iceSoul,omitempty"`
	WinInfo             *ManHuangUserWinInfo          `protobuf:"bytes,28,opt,name=winInfo" json:"winInfo,omitempty"`
}

func (x *ManHuangUserDataEntity) Reset() {
	*x = ManHuangUserDataEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangUserDataEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangUserDataEntity) ProtoMessage() {}

func (x *ManHuangUserDataEntity) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangUserDataEntity.ProtoReflect.Descriptor instead.
func (*ManHuangUserDataEntity) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{1}
}

func (x *ManHuangUserDataEntity) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ManHuangUserDataEntity) GetTeamId() int64 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

func (x *ManHuangUserDataEntity) GetPlayerInfo() *PlayerCharacterImageMsg {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *ManHuangUserDataEntity) GetFightValue() int64 {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return 0
}

func (x *ManHuangUserDataEntity) GetRegionId() int32 {
	if x != nil && x.RegionId != nil {
		return *x.RegionId
	}
	return 0
}

func (x *ManHuangUserDataEntity) GetUnlockRegionId() []int32 {
	if x != nil {
		return x.UnlockRegionId
	}
	return nil
}

func (x *ManHuangUserDataEntity) GetEnergy() int32 {
	if x != nil && x.Energy != nil {
		return *x.Energy
	}
	return 0
}

func (x *ManHuangUserDataEntity) GetIntegral() int64 {
	if x != nil && x.Integral != nil {
		return *x.Integral
	}
	return 0
}

func (x *ManHuangUserDataEntity) GetRank() int64 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *ManHuangUserDataEntity) GetTeamInfo() *ManHuangTeamEntity {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

func (x *ManHuangUserDataEntity) GetMallInfo() []*ManHuangUserMallInfo {
	if x != nil {
		return x.MallInfo
	}
	return nil
}

func (x *ManHuangUserDataEntity) GetLastLeaveTeam() int64 {
	if x != nil && x.LastLeaveTeam != nil {
		return *x.LastLeaveTeam
	}
	return 0
}

func (x *ManHuangUserDataEntity) GetLastCreateTeam() int64 {
	if x != nil && x.LastCreateTeam != nil {
		return *x.LastCreateTeam
	}
	return 0
}

func (x *ManHuangUserDataEntity) GetApplyJoinTeamIdList() []int64 {
	if x != nil {
		return x.ApplyJoinTeamIdList
	}
	return nil
}

func (x *ManHuangUserDataEntity) GetIsEnter() bool {
	if x != nil && x.IsEnter != nil {
		return *x.IsEnter
	}
	return false
}

func (x *ManHuangUserDataEntity) GetEnergyLastTime() int64 {
	if x != nil && x.EnergyLastTime != nil {
		return *x.EnergyLastTime
	}
	return 0
}

func (x *ManHuangUserDataEntity) GetTotalBlood() int64 {
	if x != nil && x.TotalBlood != nil {
		return *x.TotalBlood
	}
	return 0
}

func (x *ManHuangUserDataEntity) GetBlood() int64 {
	if x != nil && x.Blood != nil {
		return *x.Blood
	}
	return 0
}

func (x *ManHuangUserDataEntity) GetTeamMemberNotify() *ManHuangTeamMemberNotify {
	if x != nil {
		return x.TeamMemberNotify
	}
	return nil
}

func (x *ManHuangUserDataEntity) GetEnemyNotify() []*ManHuangEnemyNotify {
	if x != nil {
		return x.EnemyNotify
	}
	return nil
}

func (x *ManHuangUserDataEntity) GetMonsterBall() []*ManHuangUserItemInfoTemp {
	if x != nil {
		return x.MonsterBall
	}
	return nil
}

func (x *ManHuangUserDataEntity) GetGrass() []*ManHuangUserItemInfoTemp {
	if x != nil {
		return x.Grass
	}
	return nil
}

func (x *ManHuangUserDataEntity) GetBox() []*ManHuangUserItemInfoTemp {
	if x != nil {
		return x.Box
	}
	return nil
}

func (x *ManHuangUserDataEntity) GetEventDone() []*ManHuangUserItemInfoTemp {
	if x != nil {
		return x.EventDone
	}
	return nil
}

func (x *ManHuangUserDataEntity) GetEventDoingInfo() *ManHuangEventDoingInfoEntity {
	if x != nil {
		return x.EventDoingInfo
	}
	return nil
}

func (x *ManHuangUserDataEntity) GetSignInfo() *ManHuangEventDoingInfoEntity {
	if x != nil {
		return x.SignInfo
	}
	return nil
}

func (x *ManHuangUserDataEntity) GetIceSoul() int32 {
	if x != nil && x.IceSoul != nil {
		return *x.IceSoul
	}
	return 0
}

func (x *ManHuangUserDataEntity) GetWinInfo() *ManHuangUserWinInfo {
	if x != nil {
		return x.WinInfo
	}
	return nil
}

// *连胜信息,第三层才有
type ManHuangUserWinInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinCount *int32 `protobuf:"varint,1,req,name=winCount" json:"winCount,omitempty"`
	LoseNum  *int64 `protobuf:"varint,2,req,name=loseNum" json:"loseNum,omitempty"`
}

func (x *ManHuangUserWinInfo) Reset() {
	*x = ManHuangUserWinInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangUserWinInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangUserWinInfo) ProtoMessage() {}

func (x *ManHuangUserWinInfo) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangUserWinInfo.ProtoReflect.Descriptor instead.
func (*ManHuangUserWinInfo) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{2}
}

func (x *ManHuangUserWinInfo) GetWinCount() int32 {
	if x != nil && x.WinCount != nil {
		return *x.WinCount
	}
	return 0
}

func (x *ManHuangUserWinInfo) GetLoseNum() int64 {
	if x != nil && x.LoseNum != nil {
		return *x.LoseNum
	}
	return 0
}

type ManHuangUserMallInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MallId      *int32 `protobuf:"varint,1,opt,name=mallId" json:"mallId,omitempty"`
	TouchTime   *int64 `protobuf:"varint,2,opt,name=touchTime" json:"touchTime,omitempty"`
	CanBuyTimes *int32 `protobuf:"varint,3,opt,name=canBuyTimes" json:"canBuyTimes,omitempty"`
}

func (x *ManHuangUserMallInfo) Reset() {
	*x = ManHuangUserMallInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangUserMallInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangUserMallInfo) ProtoMessage() {}

func (x *ManHuangUserMallInfo) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangUserMallInfo.ProtoReflect.Descriptor instead.
func (*ManHuangUserMallInfo) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{3}
}

func (x *ManHuangUserMallInfo) GetMallId() int32 {
	if x != nil && x.MallId != nil {
		return *x.MallId
	}
	return 0
}

func (x *ManHuangUserMallInfo) GetTouchTime() int64 {
	if x != nil && x.TouchTime != nil {
		return *x.TouchTime
	}
	return 0
}

func (x *ManHuangUserMallInfo) GetCanBuyTimes() int32 {
	if x != nil && x.CanBuyTimes != nil {
		return *x.CanBuyTimes
	}
	return 0
}

type ManHuangMemberEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *int64                   `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	MemberInfo *PlayerCharacterImageMsg `protobuf:"bytes,2,opt,name=memberInfo" json:"memberInfo,omitempty"`
	RegionId   *int32                   `protobuf:"varint,3,opt,name=regionId" json:"regionId,omitempty"`
	Integral   *int64                   `protobuf:"varint,4,opt,name=integral" json:"integral,omitempty"`
	Rank       *int64                   `protobuf:"varint,5,opt,name=rank" json:"rank,omitempty"`
	FightValue *int64                   `protobuf:"varint,6,opt,name=fightValue" json:"fightValue,omitempty"`
	IceSoul    *int32                   `protobuf:"varint,7,opt,name=iceSoul" json:"iceSoul,omitempty"`
}

func (x *ManHuangMemberEntity) Reset() {
	*x = ManHuangMemberEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangMemberEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangMemberEntity) ProtoMessage() {}

func (x *ManHuangMemberEntity) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangMemberEntity.ProtoReflect.Descriptor instead.
func (*ManHuangMemberEntity) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{4}
}

func (x *ManHuangMemberEntity) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ManHuangMemberEntity) GetMemberInfo() *PlayerCharacterImageMsg {
	if x != nil {
		return x.MemberInfo
	}
	return nil
}

func (x *ManHuangMemberEntity) GetRegionId() int32 {
	if x != nil && x.RegionId != nil {
		return *x.RegionId
	}
	return 0
}

func (x *ManHuangMemberEntity) GetIntegral() int64 {
	if x != nil && x.Integral != nil {
		return *x.Integral
	}
	return 0
}

func (x *ManHuangMemberEntity) GetRank() int64 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *ManHuangMemberEntity) GetFightValue() int64 {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return 0
}

func (x *ManHuangMemberEntity) GetIceSoul() int32 {
	if x != nil && x.IceSoul != nil {
		return *x.IceSoul
	}
	return 0
}

type ManHuangApplyUserEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *int64             `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	PlayerInfo *PlayerBaseDataMsg `protobuf:"bytes,2,opt,name=playerInfo" json:"playerInfo,omitempty"`
	ApplyTime  *int64             `protobuf:"varint,3,opt,name=applyTime" json:"applyTime,omitempty"`
	FightValue *int64             `protobuf:"varint,4,opt,name=fightValue" json:"fightValue,omitempty"`
}

func (x *ManHuangApplyUserEntity) Reset() {
	*x = ManHuangApplyUserEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangApplyUserEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangApplyUserEntity) ProtoMessage() {}

func (x *ManHuangApplyUserEntity) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangApplyUserEntity.ProtoReflect.Descriptor instead.
func (*ManHuangApplyUserEntity) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{5}
}

func (x *ManHuangApplyUserEntity) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ManHuangApplyUserEntity) GetPlayerInfo() *PlayerBaseDataMsg {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *ManHuangApplyUserEntity) GetApplyTime() int64 {
	if x != nil && x.ApplyTime != nil {
		return *x.ApplyTime
	}
	return 0
}

func (x *ManHuangApplyUserEntity) GetFightValue() int64 {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return 0
}

type ManHuangUserItemInfoTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId *int32 `protobuf:"varint,1,req,name=itemId" json:"itemId,omitempty"`
	Num    *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
}

func (x *ManHuangUserItemInfoTemp) Reset() {
	*x = ManHuangUserItemInfoTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangUserItemInfoTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangUserItemInfoTemp) ProtoMessage() {}

func (x *ManHuangUserItemInfoTemp) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangUserItemInfoTemp.ProtoReflect.Descriptor instead.
func (*ManHuangUserItemInfoTemp) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{6}
}

func (x *ManHuangUserItemInfoTemp) GetItemId() int32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *ManHuangUserItemInfoTemp) GetNum() int32 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

type ManHuangEnterPanelReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId   *int32                   `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PlayerDetail *PlayerCharacterImageMsg `protobuf:"bytes,2,opt,name=playerDetail" json:"playerDetail,omitempty"`
}

func (x *ManHuangEnterPanelReqMsg) Reset() {
	*x = ManHuangEnterPanelReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangEnterPanelReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangEnterPanelReqMsg) ProtoMessage() {}

func (x *ManHuangEnterPanelReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangEnterPanelReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangEnterPanelReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{7}
}

func (x *ManHuangEnterPanelReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangEnterPanelReqMsg) GetPlayerDetail() *PlayerCharacterImageMsg {
	if x != nil {
		return x.PlayerDetail
	}
	return nil
}

type ManHuangEnterPanelRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32                  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	UserData *ManHuangUserDataEntity `protobuf:"bytes,2,opt,name=userData" json:"userData,omitempty"`
}

func (x *ManHuangEnterPanelRespMsg) Reset() {
	*x = ManHuangEnterPanelRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangEnterPanelRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangEnterPanelRespMsg) ProtoMessage() {}

func (x *ManHuangEnterPanelRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangEnterPanelRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangEnterPanelRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{8}
}

func (x *ManHuangEnterPanelRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangEnterPanelRespMsg) GetUserData() *ManHuangUserDataEntity {
	if x != nil {
		return x.UserData
	}
	return nil
}

type ManHuangLeavePanelReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *ManHuangLeavePanelReqMsg) Reset() {
	*x = ManHuangLeavePanelReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangLeavePanelReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangLeavePanelReqMsg) ProtoMessage() {}

func (x *ManHuangLeavePanelReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangLeavePanelReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangLeavePanelReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{9}
}

func (x *ManHuangLeavePanelReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type ManHuangLeavePanelRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *ManHuangLeavePanelRespMsg) Reset() {
	*x = ManHuangLeavePanelRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangLeavePanelRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangLeavePanelRespMsg) ProtoMessage() {}

func (x *ManHuangLeavePanelRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangLeavePanelRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangLeavePanelRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{10}
}

func (x *ManHuangLeavePanelRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type ManHuangCreateTeamReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId     *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	TeamName       *string `protobuf:"bytes,2,req,name=teamName" json:"teamName,omitempty"`
	FirstCreateFlg *bool   `protobuf:"varint,3,req,name=firstCreateFlg" json:"firstCreateFlg,omitempty"`
}

func (x *ManHuangCreateTeamReqMsg) Reset() {
	*x = ManHuangCreateTeamReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangCreateTeamReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangCreateTeamReqMsg) ProtoMessage() {}

func (x *ManHuangCreateTeamReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangCreateTeamReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangCreateTeamReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{11}
}

func (x *ManHuangCreateTeamReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangCreateTeamReqMsg) GetTeamName() string {
	if x != nil && x.TeamName != nil {
		return *x.TeamName
	}
	return ""
}

func (x *ManHuangCreateTeamReqMsg) GetFirstCreateFlg() bool {
	if x != nil && x.FirstCreateFlg != nil {
		return *x.FirstCreateFlg
	}
	return false
}

type ManHuangCreateTeamRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret            *int32              `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	TeamInfo       *ManHuangTeamEntity `protobuf:"bytes,2,opt,name=teamInfo" json:"teamInfo,omitempty"`
	ActivityId     *int32              `protobuf:"varint,3,opt,name=activityId" json:"activityId,omitempty"`
	FirstCreateFlg *bool               `protobuf:"varint,4,opt,name=firstCreateFlg" json:"firstCreateFlg,omitempty"`
}

func (x *ManHuangCreateTeamRespMsg) Reset() {
	*x = ManHuangCreateTeamRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangCreateTeamRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangCreateTeamRespMsg) ProtoMessage() {}

func (x *ManHuangCreateTeamRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangCreateTeamRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangCreateTeamRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{12}
}

func (x *ManHuangCreateTeamRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangCreateTeamRespMsg) GetTeamInfo() *ManHuangTeamEntity {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

func (x *ManHuangCreateTeamRespMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangCreateTeamRespMsg) GetFirstCreateFlg() bool {
	if x != nil && x.FirstCreateFlg != nil {
		return *x.FirstCreateFlg
	}
	return false
}

type ManHuangGetTeamListReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Type       *int32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Page       *int32 `protobuf:"varint,3,req,name=page" json:"page,omitempty"`
}

func (x *ManHuangGetTeamListReqMsg) Reset() {
	*x = ManHuangGetTeamListReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangGetTeamListReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangGetTeamListReqMsg) ProtoMessage() {}

func (x *ManHuangGetTeamListReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangGetTeamListReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangGetTeamListReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{13}
}

func (x *ManHuangGetTeamListReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangGetTeamListReqMsg) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ManHuangGetTeamListReqMsg) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

type ManHuangGetTeamListRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32                `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	TeamList []*ManHuangTeamEntity `protobuf:"bytes,2,rep,name=teamList" json:"teamList,omitempty"`
}

func (x *ManHuangGetTeamListRespMsg) Reset() {
	*x = ManHuangGetTeamListRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangGetTeamListRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangGetTeamListRespMsg) ProtoMessage() {}

func (x *ManHuangGetTeamListRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangGetTeamListRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangGetTeamListRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{14}
}

func (x *ManHuangGetTeamListRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangGetTeamListRespMsg) GetTeamList() []*ManHuangTeamEntity {
	if x != nil {
		return x.TeamList
	}
	return nil
}

type ManHuangGetTeamInfoReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	TeamId     *int64 `protobuf:"varint,2,req,name=teamId" json:"teamId,omitempty"`
}

func (x *ManHuangGetTeamInfoReqMsg) Reset() {
	*x = ManHuangGetTeamInfoReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangGetTeamInfoReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangGetTeamInfoReqMsg) ProtoMessage() {}

func (x *ManHuangGetTeamInfoReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangGetTeamInfoReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangGetTeamInfoReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{15}
}

func (x *ManHuangGetTeamInfoReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangGetTeamInfoReqMsg) GetTeamId() int64 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

type ManHuangGetTeamInfoRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32              `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	TeamInfo *ManHuangTeamEntity `protobuf:"bytes,2,opt,name=teamInfo" json:"teamInfo,omitempty"`
}

func (x *ManHuangGetTeamInfoRespMsg) Reset() {
	*x = ManHuangGetTeamInfoRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangGetTeamInfoRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangGetTeamInfoRespMsg) ProtoMessage() {}

func (x *ManHuangGetTeamInfoRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangGetTeamInfoRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangGetTeamInfoRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{16}
}

func (x *ManHuangGetTeamInfoRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangGetTeamInfoRespMsg) GetTeamInfo() *ManHuangTeamEntity {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

type ManHuangJoinTeamReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	TeamId     *int64 `protobuf:"varint,2,req,name=teamId" json:"teamId,omitempty"`
}

func (x *ManHuangJoinTeamReqMsg) Reset() {
	*x = ManHuangJoinTeamReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangJoinTeamReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangJoinTeamReqMsg) ProtoMessage() {}

func (x *ManHuangJoinTeamReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangJoinTeamReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangJoinTeamReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{17}
}

func (x *ManHuangJoinTeamReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangJoinTeamReqMsg) GetTeamId() int64 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

type ManHuangJoinTeamRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *ManHuangJoinTeamRespMsg) Reset() {
	*x = ManHuangJoinTeamRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangJoinTeamRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangJoinTeamRespMsg) ProtoMessage() {}

func (x *ManHuangJoinTeamRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangJoinTeamRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangJoinTeamRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{18}
}

func (x *ManHuangJoinTeamRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type ManHuangCancelTeamApplyReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	TeamId     *int64 `protobuf:"varint,2,req,name=teamId" json:"teamId,omitempty"`
}

func (x *ManHuangCancelTeamApplyReqMsg) Reset() {
	*x = ManHuangCancelTeamApplyReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangCancelTeamApplyReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangCancelTeamApplyReqMsg) ProtoMessage() {}

func (x *ManHuangCancelTeamApplyReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangCancelTeamApplyReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangCancelTeamApplyReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{19}
}

func (x *ManHuangCancelTeamApplyReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangCancelTeamApplyReqMsg) GetTeamId() int64 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

type ManHuangCancelTeamApplyRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *ManHuangCancelTeamApplyRespMsg) Reset() {
	*x = ManHuangCancelTeamApplyRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangCancelTeamApplyRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangCancelTeamApplyRespMsg) ProtoMessage() {}

func (x *ManHuangCancelTeamApplyRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangCancelTeamApplyRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangCancelTeamApplyRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{20}
}

func (x *ManHuangCancelTeamApplyRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type ManHuangApplyJoinTeamAgreeReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PlayerId   *int64 `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
}

func (x *ManHuangApplyJoinTeamAgreeReqMsg) Reset() {
	*x = ManHuangApplyJoinTeamAgreeReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangApplyJoinTeamAgreeReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangApplyJoinTeamAgreeReqMsg) ProtoMessage() {}

func (x *ManHuangApplyJoinTeamAgreeReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangApplyJoinTeamAgreeReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangApplyJoinTeamAgreeReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{21}
}

func (x *ManHuangApplyJoinTeamAgreeReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangApplyJoinTeamAgreeReqMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type ManHuangApplyJoinTeamAgreeRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32              `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	TeamInfo *ManHuangTeamEntity `protobuf:"bytes,2,opt,name=teamInfo" json:"teamInfo,omitempty"`
}

func (x *ManHuangApplyJoinTeamAgreeRespMsg) Reset() {
	*x = ManHuangApplyJoinTeamAgreeRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangApplyJoinTeamAgreeRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangApplyJoinTeamAgreeRespMsg) ProtoMessage() {}

func (x *ManHuangApplyJoinTeamAgreeRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangApplyJoinTeamAgreeRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangApplyJoinTeamAgreeRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{22}
}

func (x *ManHuangApplyJoinTeamAgreeRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangApplyJoinTeamAgreeRespMsg) GetTeamInfo() *ManHuangTeamEntity {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

type ManHuangApplyJoinTeamRefusedReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *ManHuangApplyJoinTeamRefusedReqMsg) Reset() {
	*x = ManHuangApplyJoinTeamRefusedReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangApplyJoinTeamRefusedReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangApplyJoinTeamRefusedReqMsg) ProtoMessage() {}

func (x *ManHuangApplyJoinTeamRefusedReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangApplyJoinTeamRefusedReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangApplyJoinTeamRefusedReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{23}
}

func (x *ManHuangApplyJoinTeamRefusedReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type ManHuangApplyJoinTeamRefusedRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32              `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	TeamInfo *ManHuangTeamEntity `protobuf:"bytes,2,opt,name=teamInfo" json:"teamInfo,omitempty"`
}

func (x *ManHuangApplyJoinTeamRefusedRespMsg) Reset() {
	*x = ManHuangApplyJoinTeamRefusedRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangApplyJoinTeamRefusedRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangApplyJoinTeamRefusedRespMsg) ProtoMessage() {}

func (x *ManHuangApplyJoinTeamRefusedRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangApplyJoinTeamRefusedRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangApplyJoinTeamRefusedRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{24}
}

func (x *ManHuangApplyJoinTeamRefusedRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangApplyJoinTeamRefusedRespMsg) GetTeamInfo() *ManHuangTeamEntity {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

type ManHuangQuitTeamReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *ManHuangQuitTeamReqMsg) Reset() {
	*x = ManHuangQuitTeamReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangQuitTeamReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangQuitTeamReqMsg) ProtoMessage() {}

func (x *ManHuangQuitTeamReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangQuitTeamReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangQuitTeamReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{25}
}

func (x *ManHuangQuitTeamReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type ManHuangQuitTeamRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *ManHuangQuitTeamRespMsg) Reset() {
	*x = ManHuangQuitTeamRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangQuitTeamRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangQuitTeamRespMsg) ProtoMessage() {}

func (x *ManHuangQuitTeamRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangQuitTeamRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangQuitTeamRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{26}
}

func (x *ManHuangQuitTeamRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type ManHuangKickOutTeamReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PlayerId   *int64 `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
}

func (x *ManHuangKickOutTeamReqMsg) Reset() {
	*x = ManHuangKickOutTeamReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangKickOutTeamReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangKickOutTeamReqMsg) ProtoMessage() {}

func (x *ManHuangKickOutTeamReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangKickOutTeamReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangKickOutTeamReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{27}
}

func (x *ManHuangKickOutTeamReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangKickOutTeamReqMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type ManHuangKickOutTeamRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *ManHuangKickOutTeamRespMsg) Reset() {
	*x = ManHuangKickOutTeamRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangKickOutTeamRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangKickOutTeamRespMsg) ProtoMessage() {}

func (x *ManHuangKickOutTeamRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangKickOutTeamRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangKickOutTeamRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{28}
}

func (x *ManHuangKickOutTeamRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type ManHuangEnemyNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnemyName     *string                   `protobuf:"bytes,1,opt,name=enemyName" json:"enemyName,omitempty"`
	EnemyServerId *int64                    `protobuf:"varint,2,opt,name=enemyServerId" json:"enemyServerId,omitempty"`
	Damage        *int64                    `protobuf:"varint,3,opt,name=damage" json:"damage,omitempty"`
	MonsterBall   *ManHuangUserItemInfoTemp `protobuf:"bytes,4,opt,name=monsterBall" json:"monsterBall,omitempty"`
	RegionId      *int32                    `protobuf:"varint,5,opt,name=regionId" json:"regionId,omitempty"`
	AttackType    *int32                    `protobuf:"varint,6,opt,name=attackType" json:"attackType,omitempty"`
	IceSoul       *int32                    `protobuf:"varint,7,opt,name=iceSoul" json:"iceSoul,omitempty"`
}

func (x *ManHuangEnemyNotify) Reset() {
	*x = ManHuangEnemyNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangEnemyNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangEnemyNotify) ProtoMessage() {}

func (x *ManHuangEnemyNotify) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangEnemyNotify.ProtoReflect.Descriptor instead.
func (*ManHuangEnemyNotify) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{29}
}

func (x *ManHuangEnemyNotify) GetEnemyName() string {
	if x != nil && x.EnemyName != nil {
		return *x.EnemyName
	}
	return ""
}

func (x *ManHuangEnemyNotify) GetEnemyServerId() int64 {
	if x != nil && x.EnemyServerId != nil {
		return *x.EnemyServerId
	}
	return 0
}

func (x *ManHuangEnemyNotify) GetDamage() int64 {
	if x != nil && x.Damage != nil {
		return *x.Damage
	}
	return 0
}

func (x *ManHuangEnemyNotify) GetMonsterBall() *ManHuangUserItemInfoTemp {
	if x != nil {
		return x.MonsterBall
	}
	return nil
}

func (x *ManHuangEnemyNotify) GetRegionId() int32 {
	if x != nil && x.RegionId != nil {
		return *x.RegionId
	}
	return 0
}

func (x *ManHuangEnemyNotify) GetAttackType() int32 {
	if x != nil && x.AttackType != nil {
		return *x.AttackType
	}
	return 0
}

func (x *ManHuangEnemyNotify) GetIceSoul() int32 {
	if x != nil && x.IceSoul != nil {
		return *x.IceSoul
	}
	return 0
}

type ManHuangTeamLeaderNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *int32                   `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	UserData *ManHuangApplyUserEntity `protobuf:"bytes,2,req,name=userData" json:"userData,omitempty"`
}

func (x *ManHuangTeamLeaderNotify) Reset() {
	*x = ManHuangTeamLeaderNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangTeamLeaderNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangTeamLeaderNotify) ProtoMessage() {}

func (x *ManHuangTeamLeaderNotify) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangTeamLeaderNotify.ProtoReflect.Descriptor instead.
func (*ManHuangTeamLeaderNotify) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{30}
}

func (x *ManHuangTeamLeaderNotify) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ManHuangTeamLeaderNotify) GetUserData() *ManHuangApplyUserEntity {
	if x != nil {
		return x.UserData
	}
	return nil
}

type ManHuangTeamMemberNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *int32              `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	TeamInfo *ManHuangTeamEntity `protobuf:"bytes,2,opt,name=teamInfo" json:"teamInfo,omitempty"`
}

func (x *ManHuangTeamMemberNotify) Reset() {
	*x = ManHuangTeamMemberNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangTeamMemberNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangTeamMemberNotify) ProtoMessage() {}

func (x *ManHuangTeamMemberNotify) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangTeamMemberNotify.ProtoReflect.Descriptor instead.
func (*ManHuangTeamMemberNotify) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{31}
}

func (x *ManHuangTeamMemberNotify) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ManHuangTeamMemberNotify) GetTeamInfo() *ManHuangTeamEntity {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

type ManHuangNpcTargetEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonsterId        *int32              `protobuf:"varint,1,opt,name=monsterId" json:"monsterId,omitempty"`
	TotalBlood       *int64              `protobuf:"varint,2,opt,name=totalBlood" json:"totalBlood,omitempty"`
	Blood            *int64              `protobuf:"varint,3,opt,name=blood" json:"blood,omitempty"`
	AttributeDataMsg []*AttributeDataMsg `protobuf:"bytes,4,rep,name=attributeDataMsg" json:"attributeDataMsg,omitempty"`
}

func (x *ManHuangNpcTargetEntity) Reset() {
	*x = ManHuangNpcTargetEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangNpcTargetEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangNpcTargetEntity) ProtoMessage() {}

func (x *ManHuangNpcTargetEntity) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangNpcTargetEntity.ProtoReflect.Descriptor instead.
func (*ManHuangNpcTargetEntity) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{32}
}

func (x *ManHuangNpcTargetEntity) GetMonsterId() int32 {
	if x != nil && x.MonsterId != nil {
		return *x.MonsterId
	}
	return 0
}

func (x *ManHuangNpcTargetEntity) GetTotalBlood() int64 {
	if x != nil && x.TotalBlood != nil {
		return *x.TotalBlood
	}
	return 0
}

func (x *ManHuangNpcTargetEntity) GetBlood() int64 {
	if x != nil && x.Blood != nil {
		return *x.Blood
	}
	return 0
}

func (x *ManHuangNpcTargetEntity) GetAttributeDataMsg() []*AttributeDataMsg {
	if x != nil {
		return x.AttributeDataMsg
	}
	return nil
}

type ManHuangEventInfoTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	EventType *int32  `protobuf:"varint,2,req,name=eventType" json:"eventType,omitempty"`
	TargetId  *string `protobuf:"bytes,3,req,name=targetId" json:"targetId,omitempty"`
	Score     *int32  `protobuf:"varint,4,req,name=score" json:"score,omitempty"`
	Reward    *string `protobuf:"bytes,5,req,name=reward" json:"reward,omitempty"`
	Param     *string `protobuf:"bytes,6,req,name=param" json:"param,omitempty"`
}

func (x *ManHuangEventInfoTemp) Reset() {
	*x = ManHuangEventInfoTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangEventInfoTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangEventInfoTemp) ProtoMessage() {}

func (x *ManHuangEventInfoTemp) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangEventInfoTemp.ProtoReflect.Descriptor instead.
func (*ManHuangEventInfoTemp) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{33}
}

func (x *ManHuangEventInfoTemp) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ManHuangEventInfoTemp) GetEventType() int32 {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return 0
}

func (x *ManHuangEventInfoTemp) GetTargetId() string {
	if x != nil && x.TargetId != nil {
		return *x.TargetId
	}
	return ""
}

func (x *ManHuangEventInfoTemp) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *ManHuangEventInfoTemp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *ManHuangEventInfoTemp) GetParam() string {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return ""
}

type ManHuangRegionInfoTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Energy           *int32  `protobuf:"varint,3,req,name=energy" json:"energy,omitempty"`
	ConsumeCondition *string `protobuf:"bytes,4,req,name=consumeCondition" json:"consumeCondition,omitempty"`
	ScoreBase        *int32  `protobuf:"varint,5,req,name=scoreBase" json:"scoreBase,omitempty"`
	EventWeight      *string `protobuf:"bytes,6,req,name=eventWeight" json:"eventWeight,omitempty"`
}

func (x *ManHuangRegionInfoTemp) Reset() {
	*x = ManHuangRegionInfoTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangRegionInfoTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangRegionInfoTemp) ProtoMessage() {}

func (x *ManHuangRegionInfoTemp) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangRegionInfoTemp.ProtoReflect.Descriptor instead.
func (*ManHuangRegionInfoTemp) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{34}
}

func (x *ManHuangRegionInfoTemp) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ManHuangRegionInfoTemp) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ManHuangRegionInfoTemp) GetEnergy() int32 {
	if x != nil && x.Energy != nil {
		return *x.Energy
	}
	return 0
}

func (x *ManHuangRegionInfoTemp) GetConsumeCondition() string {
	if x != nil && x.ConsumeCondition != nil {
		return *x.ConsumeCondition
	}
	return ""
}

func (x *ManHuangRegionInfoTemp) GetScoreBase() int32 {
	if x != nil && x.ScoreBase != nil {
		return *x.ScoreBase
	}
	return 0
}

func (x *ManHuangRegionInfoTemp) GetEventWeight() string {
	if x != nil && x.EventWeight != nil {
		return *x.EventWeight
	}
	return ""
}

type ManHuangBuffInfoTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name   *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Type   *int32  `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
	Effect *int32  `protobuf:"varint,4,req,name=effect" json:"effect,omitempty"`
	Level  *int32  `protobuf:"varint,5,req,name=level" json:"level,omitempty"`
	ItemId *int32  `protobuf:"varint,6,req,name=itemId" json:"itemId,omitempty"`
}

func (x *ManHuangBuffInfoTemp) Reset() {
	*x = ManHuangBuffInfoTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangBuffInfoTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangBuffInfoTemp) ProtoMessage() {}

func (x *ManHuangBuffInfoTemp) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangBuffInfoTemp.ProtoReflect.Descriptor instead.
func (*ManHuangBuffInfoTemp) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{35}
}

func (x *ManHuangBuffInfoTemp) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ManHuangBuffInfoTemp) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ManHuangBuffInfoTemp) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ManHuangBuffInfoTemp) GetEffect() int32 {
	if x != nil && x.Effect != nil {
		return *x.Effect
	}
	return 0
}

func (x *ManHuangBuffInfoTemp) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *ManHuangBuffInfoTemp) GetItemId() int32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

type ManHuangConfigSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region []*ManHuangRegionInfoTemp `protobuf:"bytes,1,rep,name=region" json:"region,omitempty"`
	Event  []*ManHuangEventInfoTemp  `protobuf:"bytes,2,rep,name=event" json:"event,omitempty"`
	Buff   []*ManHuangBuffInfoTemp   `protobuf:"bytes,3,rep,name=buff" json:"buff,omitempty"`
}

func (x *ManHuangConfigSyncMsg) Reset() {
	*x = ManHuangConfigSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangConfigSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangConfigSyncMsg) ProtoMessage() {}

func (x *ManHuangConfigSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangConfigSyncMsg.ProtoReflect.Descriptor instead.
func (*ManHuangConfigSyncMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{36}
}

func (x *ManHuangConfigSyncMsg) GetRegion() []*ManHuangRegionInfoTemp {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *ManHuangConfigSyncMsg) GetEvent() []*ManHuangEventInfoTemp {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *ManHuangConfigSyncMsg) GetBuff() []*ManHuangBuffInfoTemp {
	if x != nil {
		return x.Buff
	}
	return nil
}

type ManHuangEnterRegionReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Region      *int32 `protobuf:"varint,2,req,name=region" json:"region,omitempty"`
	ConsumeType *int32 `protobuf:"varint,3,opt,name=consumeType" json:"consumeType,omitempty"`
}

func (x *ManHuangEnterRegionReqMsg) Reset() {
	*x = ManHuangEnterRegionReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangEnterRegionReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangEnterRegionReqMsg) ProtoMessage() {}

func (x *ManHuangEnterRegionReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangEnterRegionReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangEnterRegionReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{37}
}

func (x *ManHuangEnterRegionReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangEnterRegionReqMsg) GetRegion() int32 {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return 0
}

func (x *ManHuangEnterRegionReqMsg) GetConsumeType() int32 {
	if x != nil && x.ConsumeType != nil {
		return *x.ConsumeType
	}
	return 0
}

type ManHuangEnterRegionRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	IceSoul *int32 `protobuf:"varint,2,opt,name=iceSoul" json:"iceSoul,omitempty"`
}

func (x *ManHuangEnterRegionRespMsg) Reset() {
	*x = ManHuangEnterRegionRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangEnterRegionRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangEnterRegionRespMsg) ProtoMessage() {}

func (x *ManHuangEnterRegionRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangEnterRegionRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangEnterRegionRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{38}
}

func (x *ManHuangEnterRegionRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangEnterRegionRespMsg) GetIceSoul() int32 {
	if x != nil && x.IceSoul != nil {
		return *x.IceSoul
	}
	return 0
}

type ManHuangEventDoingInfoEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId          *int32                   `protobuf:"varint,1,opt,name=eventId" json:"eventId,omitempty"`
	TargetNpc        *ManHuangNpcTargetEntity `protobuf:"bytes,2,opt,name=targetNpc" json:"targetNpc,omitempty"`
	TargetPlayer     *ManHuangUserDataEntity  `protobuf:"bytes,3,opt,name=targetPlayer" json:"targetPlayer,omitempty"`
	LastAttackTime   *int64                   `protobuf:"varint,4,opt,name=lastAttackTime" json:"lastAttackTime,omitempty"`
	AttackStatus     *bool                    `protobuf:"varint,5,opt,name=attackStatus" json:"attackStatus,omitempty"`
	SignStatus       *bool                    `protobuf:"varint,6,opt,name=signStatus" json:"signStatus,omitempty"`
	AttributeDataMsg []*AttributeDataMsg      `protobuf:"bytes,7,rep,name=attributeDataMsg" json:"attributeDataMsg,omitempty"`
}

func (x *ManHuangEventDoingInfoEntity) Reset() {
	*x = ManHuangEventDoingInfoEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangEventDoingInfoEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangEventDoingInfoEntity) ProtoMessage() {}

func (x *ManHuangEventDoingInfoEntity) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangEventDoingInfoEntity.ProtoReflect.Descriptor instead.
func (*ManHuangEventDoingInfoEntity) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{39}
}

func (x *ManHuangEventDoingInfoEntity) GetEventId() int32 {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return 0
}

func (x *ManHuangEventDoingInfoEntity) GetTargetNpc() *ManHuangNpcTargetEntity {
	if x != nil {
		return x.TargetNpc
	}
	return nil
}

func (x *ManHuangEventDoingInfoEntity) GetTargetPlayer() *ManHuangUserDataEntity {
	if x != nil {
		return x.TargetPlayer
	}
	return nil
}

func (x *ManHuangEventDoingInfoEntity) GetLastAttackTime() int64 {
	if x != nil && x.LastAttackTime != nil {
		return *x.LastAttackTime
	}
	return 0
}

func (x *ManHuangEventDoingInfoEntity) GetAttackStatus() bool {
	if x != nil && x.AttackStatus != nil {
		return *x.AttackStatus
	}
	return false
}

func (x *ManHuangEventDoingInfoEntity) GetSignStatus() bool {
	if x != nil && x.SignStatus != nil {
		return *x.SignStatus
	}
	return false
}

func (x *ManHuangEventDoingInfoEntity) GetAttributeDataMsg() []*AttributeDataMsg {
	if x != nil {
		return x.AttributeDataMsg
	}
	return nil
}

type ManHuangExploreReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *ManHuangExploreReqMsg) Reset() {
	*x = ManHuangExploreReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangExploreReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangExploreReqMsg) ProtoMessage() {}

func (x *ManHuangExploreReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangExploreReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangExploreReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{40}
}

func (x *ManHuangExploreReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type ManHuangExploreRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret            *int32                        `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	EventDoingInfo *ManHuangEventDoingInfoEntity `protobuf:"bytes,2,opt,name=eventDoingInfo" json:"eventDoingInfo,omitempty"`
}

func (x *ManHuangExploreRespMsg) Reset() {
	*x = ManHuangExploreRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangExploreRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangExploreRespMsg) ProtoMessage() {}

func (x *ManHuangExploreRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangExploreRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangExploreRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{41}
}

func (x *ManHuangExploreRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangExploreRespMsg) GetEventDoingInfo() *ManHuangEventDoingInfoEntity {
	if x != nil {
		return x.EventDoingInfo
	}
	return nil
}

type ManHuangEventHandleReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	EventId    *int32 `protobuf:"varint,2,opt,name=eventId" json:"eventId,omitempty"`
}

func (x *ManHuangEventHandleReqMsg) Reset() {
	*x = ManHuangEventHandleReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangEventHandleReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangEventHandleReqMsg) ProtoMessage() {}

func (x *ManHuangEventHandleReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangEventHandleReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangEventHandleReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{42}
}

func (x *ManHuangEventHandleReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangEventHandleReqMsg) GetEventId() int32 {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return 0
}

type ManHuangEventHandleRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32                    `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Damage       *int64                    `protobuf:"varint,2,opt,name=damage" json:"damage,omitempty"`
	Blood        *int64                    `protobuf:"varint,3,opt,name=blood" json:"blood,omitempty"`
	Rewards      []*AwardInfo              `protobuf:"bytes,4,rep,name=rewards" json:"rewards,omitempty"`
	Integral     *int64                    `protobuf:"varint,5,opt,name=integral" json:"integral,omitempty"`
	Grass        []int32                   `protobuf:"varint,6,rep,name=grass" json:"grass,omitempty"`
	MonsterBall  *ManHuangUserItemInfoTemp `protobuf:"bytes,7,opt,name=monsterBall" json:"monsterBall,omitempty"`
	MallInfo     *ManHuangUserMallInfo     `protobuf:"bytes,8,opt,name=mallInfo" json:"mallInfo,omitempty"`
	BattleRecord *BattleRecordMsg          `protobuf:"bytes,9,opt,name=battleRecord" json:"battleRecord,omitempty"`
	IceSoul      *int32                    `protobuf:"varint,10,opt,name=iceSoul" json:"iceSoul,omitempty"`
	MallInfoList []*ManHuangUserMallInfo   `protobuf:"bytes,11,rep,name=mallInfoList" json:"mallInfoList,omitempty"`
}

func (x *ManHuangEventHandleRespMsg) Reset() {
	*x = ManHuangEventHandleRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangEventHandleRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangEventHandleRespMsg) ProtoMessage() {}

func (x *ManHuangEventHandleRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangEventHandleRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangEventHandleRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{43}
}

func (x *ManHuangEventHandleRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangEventHandleRespMsg) GetDamage() int64 {
	if x != nil && x.Damage != nil {
		return *x.Damage
	}
	return 0
}

func (x *ManHuangEventHandleRespMsg) GetBlood() int64 {
	if x != nil && x.Blood != nil {
		return *x.Blood
	}
	return 0
}

func (x *ManHuangEventHandleRespMsg) GetRewards() []*AwardInfo {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ManHuangEventHandleRespMsg) GetIntegral() int64 {
	if x != nil && x.Integral != nil {
		return *x.Integral
	}
	return 0
}

func (x *ManHuangEventHandleRespMsg) GetGrass() []int32 {
	if x != nil {
		return x.Grass
	}
	return nil
}

func (x *ManHuangEventHandleRespMsg) GetMonsterBall() *ManHuangUserItemInfoTemp {
	if x != nil {
		return x.MonsterBall
	}
	return nil
}

func (x *ManHuangEventHandleRespMsg) GetMallInfo() *ManHuangUserMallInfo {
	if x != nil {
		return x.MallInfo
	}
	return nil
}

func (x *ManHuangEventHandleRespMsg) GetBattleRecord() *BattleRecordMsg {
	if x != nil {
		return x.BattleRecord
	}
	return nil
}

func (x *ManHuangEventHandleRespMsg) GetIceSoul() int32 {
	if x != nil && x.IceSoul != nil {
		return *x.IceSoul
	}
	return 0
}

func (x *ManHuangEventHandleRespMsg) GetMallInfoList() []*ManHuangUserMallInfo {
	if x != nil {
		return x.MallInfoList
	}
	return nil
}

type ManHuangEventActionReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Action     *int32 `protobuf:"varint,2,req,name=action" json:"action,omitempty"`
}

func (x *ManHuangEventActionReqMsg) Reset() {
	*x = ManHuangEventActionReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangEventActionReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangEventActionReqMsg) ProtoMessage() {}

func (x *ManHuangEventActionReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangEventActionReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangEventActionReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{44}
}

func (x *ManHuangEventActionReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangEventActionReqMsg) GetAction() int32 {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return 0
}

type ManHuangEventActionRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *ManHuangEventActionRespMsg) Reset() {
	*x = ManHuangEventActionRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangEventActionRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangEventActionRespMsg) ProtoMessage() {}

func (x *ManHuangEventActionRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangEventActionRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangEventActionRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{45}
}

func (x *ManHuangEventActionRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type ManHuangRecoverEnergyReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32      `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	UserProp   *UsePropReq `protobuf:"bytes,2,opt,name=userProp" json:"userProp,omitempty"`
}

func (x *ManHuangRecoverEnergyReqMsg) Reset() {
	*x = ManHuangRecoverEnergyReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangRecoverEnergyReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangRecoverEnergyReqMsg) ProtoMessage() {}

func (x *ManHuangRecoverEnergyReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangRecoverEnergyReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangRecoverEnergyReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{46}
}

func (x *ManHuangRecoverEnergyReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangRecoverEnergyReqMsg) GetUserProp() *UsePropReq {
	if x != nil {
		return x.UserProp
	}
	return nil
}

type ManHuangRecoverEnergyRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32                  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	UserData *ManHuangUserDataEntity `protobuf:"bytes,2,opt,name=userData" json:"userData,omitempty"`
}

func (x *ManHuangRecoverEnergyRespMsg) Reset() {
	*x = ManHuangRecoverEnergyRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangRecoverEnergyRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangRecoverEnergyRespMsg) ProtoMessage() {}

func (x *ManHuangRecoverEnergyRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangRecoverEnergyRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangRecoverEnergyRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{47}
}

func (x *ManHuangRecoverEnergyRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangRecoverEnergyRespMsg) GetUserData() *ManHuangUserDataEntity {
	if x != nil {
		return x.UserData
	}
	return nil
}

type ManHuangOpenBoxReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32      `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	BoxId      *int32      `protobuf:"varint,2,req,name=boxId" json:"boxId,omitempty"`
	UserProp   *UsePropReq `protobuf:"bytes,3,opt,name=userProp" json:"userProp,omitempty"`
}

func (x *ManHuangOpenBoxReqMsg) Reset() {
	*x = ManHuangOpenBoxReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangOpenBoxReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangOpenBoxReqMsg) ProtoMessage() {}

func (x *ManHuangOpenBoxReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangOpenBoxReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangOpenBoxReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{48}
}

func (x *ManHuangOpenBoxReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangOpenBoxReqMsg) GetBoxId() int32 {
	if x != nil && x.BoxId != nil {
		return *x.BoxId
	}
	return 0
}

func (x *ManHuangOpenBoxReqMsg) GetUserProp() *UsePropReq {
	if x != nil {
		return x.UserProp
	}
	return nil
}

type ManHuangOpenBoxRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32       `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Rewards    []*AwardInfo `protobuf:"bytes,2,rep,name=rewards" json:"rewards,omitempty"`
	ActivityId *int32       `protobuf:"varint,3,opt,name=activityId" json:"activityId,omitempty"`
	BoxId      *int32       `protobuf:"varint,4,opt,name=boxId" json:"boxId,omitempty"`
}

func (x *ManHuangOpenBoxRespMsg) Reset() {
	*x = ManHuangOpenBoxRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangOpenBoxRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangOpenBoxRespMsg) ProtoMessage() {}

func (x *ManHuangOpenBoxRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangOpenBoxRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangOpenBoxRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{49}
}

func (x *ManHuangOpenBoxRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangOpenBoxRespMsg) GetRewards() []*AwardInfo {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ManHuangOpenBoxRespMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangOpenBoxRespMsg) GetBoxId() int32 {
	if x != nil && x.BoxId != nil {
		return *x.BoxId
	}
	return 0
}

type ManHuangEventInfoNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	UserId      *int64 `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Damage      *int64 `protobuf:"varint,3,opt,name=damage" json:"damage,omitempty"`
	RemainBlood *int64 `protobuf:"varint,4,opt,name=remainBlood" json:"remainBlood,omitempty"`
}

func (x *ManHuangEventInfoNotify) Reset() {
	*x = ManHuangEventInfoNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangEventInfoNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangEventInfoNotify) ProtoMessage() {}

func (x *ManHuangEventInfoNotify) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangEventInfoNotify.ProtoReflect.Descriptor instead.
func (*ManHuangEventInfoNotify) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{50}
}

func (x *ManHuangEventInfoNotify) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ManHuangEventInfoNotify) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ManHuangEventInfoNotify) GetDamage() int64 {
	if x != nil && x.Damage != nil {
		return *x.Damage
	}
	return 0
}

func (x *ManHuangEventInfoNotify) GetRemainBlood() int64 {
	if x != nil && x.RemainBlood != nil {
		return *x.RemainBlood
	}
	return 0
}

type ManHuangGetUserDataReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PlayerId   *int64 `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
}

func (x *ManHuangGetUserDataReqMsg) Reset() {
	*x = ManHuangGetUserDataReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangGetUserDataReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangGetUserDataReqMsg) ProtoMessage() {}

func (x *ManHuangGetUserDataReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangGetUserDataReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangGetUserDataReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{51}
}

func (x *ManHuangGetUserDataReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangGetUserDataReqMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type ManHuangGetUserDataRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32                  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	UserData *ManHuangUserDataEntity `protobuf:"bytes,2,opt,name=userData" json:"userData,omitempty"`
}

func (x *ManHuangGetUserDataRespMsg) Reset() {
	*x = ManHuangGetUserDataRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangGetUserDataRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangGetUserDataRespMsg) ProtoMessage() {}

func (x *ManHuangGetUserDataRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangGetUserDataRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangGetUserDataRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{52}
}

func (x *ManHuangGetUserDataRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangGetUserDataRespMsg) GetUserData() *ManHuangUserDataEntity {
	if x != nil {
		return x.UserData
	}
	return nil
}

type ManHuangLogHelpItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *int64                    `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	EventId            *int32                    `protobuf:"varint,2,req,name=eventId" json:"eventId,omitempty"`
	Type               *int32                    `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
	DiscoverPlayerId   *int64                    `protobuf:"varint,4,opt,name=discoverPlayerId" json:"discoverPlayerId,omitempty"`
	DiscoverPlayerName *string                   `protobuf:"bytes,5,opt,name=discoverPlayerName" json:"discoverPlayerName,omitempty"`
	DiscoverRegionId   *int32                    `protobuf:"varint,6,opt,name=discoverRegionId" json:"discoverRegionId,omitempty"`
	TargetNpc          *ManHuangNpcTargetEntity  `protobuf:"bytes,7,opt,name=targetNpc" json:"targetNpc,omitempty"`
	TargetPlayer       *ManHuangUserDataEntity   `protobuf:"bytes,8,opt,name=targetPlayer" json:"targetPlayer,omitempty"`
	LastAttackTime     *int64                    `protobuf:"varint,9,opt,name=lastAttackTime" json:"lastAttackTime,omitempty"`
	RewardFlag         *bool                     `protobuf:"varint,10,opt,name=rewardFlag" json:"rewardFlag,omitempty"`
	RecordTime         *int64                    `protobuf:"varint,11,opt,name=recordTime" json:"recordTime,omitempty"`
	Rewards            []*AwardInfo              `protobuf:"bytes,12,rep,name=rewards" json:"rewards,omitempty"`
	MonsterBall        *ManHuangUserItemInfoTemp `protobuf:"bytes,13,opt,name=monsterBall" json:"monsterBall,omitempty"`
	HelpUsers          []string                  `protobuf:"bytes,14,rep,name=helpUsers" json:"helpUsers,omitempty"`
	IceSoul            *int32                    `protobuf:"varint,15,opt,name=iceSoul" json:"iceSoul,omitempty"`
}

func (x *ManHuangLogHelpItem) Reset() {
	*x = ManHuangLogHelpItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangLogHelpItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangLogHelpItem) ProtoMessage() {}

func (x *ManHuangLogHelpItem) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangLogHelpItem.ProtoReflect.Descriptor instead.
func (*ManHuangLogHelpItem) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{53}
}

func (x *ManHuangLogHelpItem) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ManHuangLogHelpItem) GetEventId() int32 {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return 0
}

func (x *ManHuangLogHelpItem) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ManHuangLogHelpItem) GetDiscoverPlayerId() int64 {
	if x != nil && x.DiscoverPlayerId != nil {
		return *x.DiscoverPlayerId
	}
	return 0
}

func (x *ManHuangLogHelpItem) GetDiscoverPlayerName() string {
	if x != nil && x.DiscoverPlayerName != nil {
		return *x.DiscoverPlayerName
	}
	return ""
}

func (x *ManHuangLogHelpItem) GetDiscoverRegionId() int32 {
	if x != nil && x.DiscoverRegionId != nil {
		return *x.DiscoverRegionId
	}
	return 0
}

func (x *ManHuangLogHelpItem) GetTargetNpc() *ManHuangNpcTargetEntity {
	if x != nil {
		return x.TargetNpc
	}
	return nil
}

func (x *ManHuangLogHelpItem) GetTargetPlayer() *ManHuangUserDataEntity {
	if x != nil {
		return x.TargetPlayer
	}
	return nil
}

func (x *ManHuangLogHelpItem) GetLastAttackTime() int64 {
	if x != nil && x.LastAttackTime != nil {
		return *x.LastAttackTime
	}
	return 0
}

func (x *ManHuangLogHelpItem) GetRewardFlag() bool {
	if x != nil && x.RewardFlag != nil {
		return *x.RewardFlag
	}
	return false
}

func (x *ManHuangLogHelpItem) GetRecordTime() int64 {
	if x != nil && x.RecordTime != nil {
		return *x.RecordTime
	}
	return 0
}

func (x *ManHuangLogHelpItem) GetRewards() []*AwardInfo {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ManHuangLogHelpItem) GetMonsterBall() *ManHuangUserItemInfoTemp {
	if x != nil {
		return x.MonsterBall
	}
	return nil
}

func (x *ManHuangLogHelpItem) GetHelpUsers() []string {
	if x != nil {
		return x.HelpUsers
	}
	return nil
}

func (x *ManHuangLogHelpItem) GetIceSoul() int32 {
	if x != nil && x.IceSoul != nil {
		return *x.IceSoul
	}
	return 0
}

type ManHuangLogHelpReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *ManHuangLogHelpReqMsg) Reset() {
	*x = ManHuangLogHelpReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangLogHelpReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangLogHelpReqMsg) ProtoMessage() {}

func (x *ManHuangLogHelpReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangLogHelpReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangLogHelpReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{54}
}

func (x *ManHuangLogHelpReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type ManHuangLogHelpRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       *int32                 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	HelpItem  []*ManHuangLogHelpItem `protobuf:"bytes,2,rep,name=helpItem" json:"helpItem,omitempty"`
	HelpCount *int32                 `protobuf:"varint,3,opt,name=helpCount" json:"helpCount,omitempty"`
}

func (x *ManHuangLogHelpRespMsg) Reset() {
	*x = ManHuangLogHelpRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangLogHelpRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangLogHelpRespMsg) ProtoMessage() {}

func (x *ManHuangLogHelpRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangLogHelpRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangLogHelpRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{55}
}

func (x *ManHuangLogHelpRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangLogHelpRespMsg) GetHelpItem() []*ManHuangLogHelpItem {
	if x != nil {
		return x.HelpItem
	}
	return nil
}

func (x *ManHuangLogHelpRespMsg) GetHelpCount() int32 {
	if x != nil && x.HelpCount != nil {
		return *x.HelpCount
	}
	return 0
}

type ManHuangHelpActionAttReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Id         *int64 `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	PlayerId   *int64 `protobuf:"varint,3,req,name=playerId" json:"playerId,omitempty"`
}

func (x *ManHuangHelpActionAttReqMsg) Reset() {
	*x = ManHuangHelpActionAttReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangHelpActionAttReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangHelpActionAttReqMsg) ProtoMessage() {}

func (x *ManHuangHelpActionAttReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangHelpActionAttReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangHelpActionAttReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{56}
}

func (x *ManHuangHelpActionAttReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangHelpActionAttReqMsg) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ManHuangHelpActionAttReqMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type ManHuangHelpActionAttRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret            *int32                    `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	IsKill         *bool                     `protobuf:"varint,2,opt,name=isKill" json:"isKill,omitempty"`
	Blood          *int64                    `protobuf:"varint,3,opt,name=blood" json:"blood,omitempty"`
	Damage         *int64                    `protobuf:"varint,4,opt,name=damage" json:"damage,omitempty"`
	Integral       *int64                    `protobuf:"varint,5,opt,name=integral" json:"integral,omitempty"`
	Rewards        []*AwardInfo              `protobuf:"bytes,6,rep,name=rewards" json:"rewards,omitempty"`
	MonsterBall    *ManHuangUserItemInfoTemp `protobuf:"bytes,7,opt,name=monsterBall" json:"monsterBall,omitempty"`
	LastAttackTime *int64                    `protobuf:"varint,8,opt,name=lastAttackTime" json:"lastAttackTime,omitempty"`
	Grass          []int32                   `protobuf:"varint,9,rep,name=grass" json:"grass,omitempty"`
	IceSoul        *int32                    `protobuf:"varint,10,opt,name=iceSoul" json:"iceSoul,omitempty"`
	BattleRecord   *BattleRecordMsg          `protobuf:"bytes,11,opt,name=battleRecord" json:"battleRecord,omitempty"`
}

func (x *ManHuangHelpActionAttRespMsg) Reset() {
	*x = ManHuangHelpActionAttRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangHelpActionAttRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangHelpActionAttRespMsg) ProtoMessage() {}

func (x *ManHuangHelpActionAttRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangHelpActionAttRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangHelpActionAttRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{57}
}

func (x *ManHuangHelpActionAttRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangHelpActionAttRespMsg) GetIsKill() bool {
	if x != nil && x.IsKill != nil {
		return *x.IsKill
	}
	return false
}

func (x *ManHuangHelpActionAttRespMsg) GetBlood() int64 {
	if x != nil && x.Blood != nil {
		return *x.Blood
	}
	return 0
}

func (x *ManHuangHelpActionAttRespMsg) GetDamage() int64 {
	if x != nil && x.Damage != nil {
		return *x.Damage
	}
	return 0
}

func (x *ManHuangHelpActionAttRespMsg) GetIntegral() int64 {
	if x != nil && x.Integral != nil {
		return *x.Integral
	}
	return 0
}

func (x *ManHuangHelpActionAttRespMsg) GetRewards() []*AwardInfo {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ManHuangHelpActionAttRespMsg) GetMonsterBall() *ManHuangUserItemInfoTemp {
	if x != nil {
		return x.MonsterBall
	}
	return nil
}

func (x *ManHuangHelpActionAttRespMsg) GetLastAttackTime() int64 {
	if x != nil && x.LastAttackTime != nil {
		return *x.LastAttackTime
	}
	return 0
}

func (x *ManHuangHelpActionAttRespMsg) GetGrass() []int32 {
	if x != nil {
		return x.Grass
	}
	return nil
}

func (x *ManHuangHelpActionAttRespMsg) GetIceSoul() int32 {
	if x != nil && x.IceSoul != nil {
		return *x.IceSoul
	}
	return 0
}

func (x *ManHuangHelpActionAttRespMsg) GetBattleRecord() *BattleRecordMsg {
	if x != nil {
		return x.BattleRecord
	}
	return nil
}

type ManHuangHelpActionRewardReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Id         *int64 `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
}

func (x *ManHuangHelpActionRewardReqMsg) Reset() {
	*x = ManHuangHelpActionRewardReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangHelpActionRewardReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangHelpActionRewardReqMsg) ProtoMessage() {}

func (x *ManHuangHelpActionRewardReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangHelpActionRewardReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangHelpActionRewardReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{58}
}

func (x *ManHuangHelpActionRewardReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangHelpActionRewardReqMsg) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type ManHuangHelpActionRewardRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret         *int32                    `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Rewards     []*AwardInfo              `protobuf:"bytes,2,rep,name=rewards" json:"rewards,omitempty"`
	MonsterBall *ManHuangUserItemInfoTemp `protobuf:"bytes,3,opt,name=monsterBall" json:"monsterBall,omitempty"`
}

func (x *ManHuangHelpActionRewardRespMsg) Reset() {
	*x = ManHuangHelpActionRewardRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangHelpActionRewardRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangHelpActionRewardRespMsg) ProtoMessage() {}

func (x *ManHuangHelpActionRewardRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangHelpActionRewardRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangHelpActionRewardRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{59}
}

func (x *ManHuangHelpActionRewardRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangHelpActionRewardRespMsg) GetRewards() []*AwardInfo {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ManHuangHelpActionRewardRespMsg) GetMonsterBall() *ManHuangUserItemInfoTemp {
	if x != nil {
		return x.MonsterBall
	}
	return nil
}

type ManHuangLogBattlegroundItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           *int32                    `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	PlayerInfo     *PlayerBaseDataMsg        `protobuf:"bytes,2,opt,name=playerInfo" json:"playerInfo,omitempty"`
	AttackType     *int32                    `protobuf:"varint,3,opt,name=attackType" json:"attackType,omitempty"`
	HelpPlayerInfo *PlayerBaseDataMsg        `protobuf:"bytes,4,opt,name=helpPlayerInfo" json:"helpPlayerInfo,omitempty"`
	EnemyPlayer    *PlayerBaseDataMsg        `protobuf:"bytes,5,opt,name=enemyPlayer" json:"enemyPlayer,omitempty"`
	MonsterId      *int32                    `protobuf:"varint,6,opt,name=monsterId" json:"monsterId,omitempty"`
	MonsterBall    *ManHuangUserItemInfoTemp `protobuf:"bytes,7,opt,name=monsterBall" json:"monsterBall,omitempty"`
	PeriGrassId    *int32                    `protobuf:"varint,8,opt,name=periGrassId" json:"periGrassId,omitempty"`
	Rewards        []*AwardInfo              `protobuf:"bytes,9,rep,name=rewards" json:"rewards,omitempty"`
	CreateTime     *int64                    `protobuf:"varint,10,opt,name=createTime" json:"createTime,omitempty"`
	IceSoul        *int32                    `protobuf:"varint,11,opt,name=iceSoul" json:"iceSoul,omitempty"`
	WinCount       *int32                    `protobuf:"varint,12,opt,name=winCount" json:"winCount,omitempty"`
	TargetWinCount *int32                    `protobuf:"varint,13,opt,name=targetWinCount" json:"targetWinCount,omitempty"`
	Score          *int32                    `protobuf:"varint,14,opt,name=score" json:"score,omitempty"`
}

func (x *ManHuangLogBattlegroundItem) Reset() {
	*x = ManHuangLogBattlegroundItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangLogBattlegroundItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangLogBattlegroundItem) ProtoMessage() {}

func (x *ManHuangLogBattlegroundItem) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangLogBattlegroundItem.ProtoReflect.Descriptor instead.
func (*ManHuangLogBattlegroundItem) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{60}
}

func (x *ManHuangLogBattlegroundItem) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ManHuangLogBattlegroundItem) GetPlayerInfo() *PlayerBaseDataMsg {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *ManHuangLogBattlegroundItem) GetAttackType() int32 {
	if x != nil && x.AttackType != nil {
		return *x.AttackType
	}
	return 0
}

func (x *ManHuangLogBattlegroundItem) GetHelpPlayerInfo() *PlayerBaseDataMsg {
	if x != nil {
		return x.HelpPlayerInfo
	}
	return nil
}

func (x *ManHuangLogBattlegroundItem) GetEnemyPlayer() *PlayerBaseDataMsg {
	if x != nil {
		return x.EnemyPlayer
	}
	return nil
}

func (x *ManHuangLogBattlegroundItem) GetMonsterId() int32 {
	if x != nil && x.MonsterId != nil {
		return *x.MonsterId
	}
	return 0
}

func (x *ManHuangLogBattlegroundItem) GetMonsterBall() *ManHuangUserItemInfoTemp {
	if x != nil {
		return x.MonsterBall
	}
	return nil
}

func (x *ManHuangLogBattlegroundItem) GetPeriGrassId() int32 {
	if x != nil && x.PeriGrassId != nil {
		return *x.PeriGrassId
	}
	return 0
}

func (x *ManHuangLogBattlegroundItem) GetRewards() []*AwardInfo {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ManHuangLogBattlegroundItem) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *ManHuangLogBattlegroundItem) GetIceSoul() int32 {
	if x != nil && x.IceSoul != nil {
		return *x.IceSoul
	}
	return 0
}

func (x *ManHuangLogBattlegroundItem) GetWinCount() int32 {
	if x != nil && x.WinCount != nil {
		return *x.WinCount
	}
	return 0
}

func (x *ManHuangLogBattlegroundItem) GetTargetWinCount() int32 {
	if x != nil && x.TargetWinCount != nil {
		return *x.TargetWinCount
	}
	return 0
}

func (x *ManHuangLogBattlegroundItem) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

type ManHuangLogBattlegroundReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *ManHuangLogBattlegroundReqMsg) Reset() {
	*x = ManHuangLogBattlegroundReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangLogBattlegroundReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangLogBattlegroundReqMsg) ProtoMessage() {}

func (x *ManHuangLogBattlegroundReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangLogBattlegroundReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangLogBattlegroundReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{61}
}

func (x *ManHuangLogBattlegroundReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type ManHuangLogBattlegroundRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  *int32                         `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Item []*ManHuangLogBattlegroundItem `protobuf:"bytes,2,rep,name=item" json:"item,omitempty"`
}

func (x *ManHuangLogBattlegroundRespMsg) Reset() {
	*x = ManHuangLogBattlegroundRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangLogBattlegroundRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangLogBattlegroundRespMsg) ProtoMessage() {}

func (x *ManHuangLogBattlegroundRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangLogBattlegroundRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangLogBattlegroundRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{62}
}

func (x *ManHuangLogBattlegroundRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangLogBattlegroundRespMsg) GetItem() []*ManHuangLogBattlegroundItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type ManHuangLogDefendItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttackType  *int32                    `protobuf:"varint,1,opt,name=attackType" json:"attackType,omitempty"`
	EnemyPlayer *PlayerBaseDataMsg        `protobuf:"bytes,2,opt,name=enemyPlayer" json:"enemyPlayer,omitempty"`
	Damage      *int64                    `protobuf:"varint,3,opt,name=damage" json:"damage,omitempty"`
	DieFlag     *bool                     `protobuf:"varint,4,opt,name=dieFlag" json:"dieFlag,omitempty"`
	MonsterBall *ManHuangUserItemInfoTemp `protobuf:"bytes,5,opt,name=monsterBall" json:"monsterBall,omitempty"`
	IceSoul     *int32                    `protobuf:"varint,6,opt,name=iceSoul" json:"iceSoul,omitempty"`
}

func (x *ManHuangLogDefendItem) Reset() {
	*x = ManHuangLogDefendItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangLogDefendItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangLogDefendItem) ProtoMessage() {}

func (x *ManHuangLogDefendItem) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangLogDefendItem.ProtoReflect.Descriptor instead.
func (*ManHuangLogDefendItem) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{63}
}

func (x *ManHuangLogDefendItem) GetAttackType() int32 {
	if x != nil && x.AttackType != nil {
		return *x.AttackType
	}
	return 0
}

func (x *ManHuangLogDefendItem) GetEnemyPlayer() *PlayerBaseDataMsg {
	if x != nil {
		return x.EnemyPlayer
	}
	return nil
}

func (x *ManHuangLogDefendItem) GetDamage() int64 {
	if x != nil && x.Damage != nil {
		return *x.Damage
	}
	return 0
}

func (x *ManHuangLogDefendItem) GetDieFlag() bool {
	if x != nil && x.DieFlag != nil {
		return *x.DieFlag
	}
	return false
}

func (x *ManHuangLogDefendItem) GetMonsterBall() *ManHuangUserItemInfoTemp {
	if x != nil {
		return x.MonsterBall
	}
	return nil
}

func (x *ManHuangLogDefendItem) GetIceSoul() int32 {
	if x != nil && x.IceSoul != nil {
		return *x.IceSoul
	}
	return 0
}

type ManHuangLogPersonItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             *int32                       `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	BattlegroundItem *ManHuangLogBattlegroundItem `protobuf:"bytes,2,opt,name=BattlegroundItem" json:"BattlegroundItem,omitempty"`
	DefendItem       *ManHuangLogDefendItem       `protobuf:"bytes,3,opt,name=defendItem" json:"defendItem,omitempty"`
	CreateTime       *int64                       `protobuf:"varint,4,opt,name=createTime" json:"createTime,omitempty"`
}

func (x *ManHuangLogPersonItem) Reset() {
	*x = ManHuangLogPersonItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangLogPersonItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangLogPersonItem) ProtoMessage() {}

func (x *ManHuangLogPersonItem) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangLogPersonItem.ProtoReflect.Descriptor instead.
func (*ManHuangLogPersonItem) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{64}
}

func (x *ManHuangLogPersonItem) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ManHuangLogPersonItem) GetBattlegroundItem() *ManHuangLogBattlegroundItem {
	if x != nil {
		return x.BattlegroundItem
	}
	return nil
}

func (x *ManHuangLogPersonItem) GetDefendItem() *ManHuangLogDefendItem {
	if x != nil {
		return x.DefendItem
	}
	return nil
}

func (x *ManHuangLogPersonItem) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

type ManHuangLogPersonReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *ManHuangLogPersonReqMsg) Reset() {
	*x = ManHuangLogPersonReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangLogPersonReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangLogPersonReqMsg) ProtoMessage() {}

func (x *ManHuangLogPersonReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangLogPersonReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangLogPersonReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{65}
}

func (x *ManHuangLogPersonReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type ManHuangLogPersonRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  *int32                   `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Item []*ManHuangLogPersonItem `protobuf:"bytes,2,rep,name=item" json:"item,omitempty"`
}

func (x *ManHuangLogPersonRespMsg) Reset() {
	*x = ManHuangLogPersonRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangLogPersonRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangLogPersonRespMsg) ProtoMessage() {}

func (x *ManHuangLogPersonRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangLogPersonRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangLogPersonRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{66}
}

func (x *ManHuangLogPersonRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangLogPersonRespMsg) GetItem() []*ManHuangLogPersonItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type ManHuangRankPersonItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerBaseData *PlayerCharacterImageMsg `protobuf:"bytes,1,req,name=playerBaseData" json:"playerBaseData,omitempty"`
	Integral       *int64                   `protobuf:"varint,2,opt,name=integral" json:"integral,omitempty"`
}

func (x *ManHuangRankPersonItem) Reset() {
	*x = ManHuangRankPersonItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangRankPersonItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangRankPersonItem) ProtoMessage() {}

func (x *ManHuangRankPersonItem) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangRankPersonItem.ProtoReflect.Descriptor instead.
func (*ManHuangRankPersonItem) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{67}
}

func (x *ManHuangRankPersonItem) GetPlayerBaseData() *PlayerCharacterImageMsg {
	if x != nil {
		return x.PlayerBaseData
	}
	return nil
}

func (x *ManHuangRankPersonItem) GetIntegral() int64 {
	if x != nil && x.Integral != nil {
		return *x.Integral
	}
	return 0
}

type ManHuangRankTeamItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *int64                   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	PlayerBaseData *PlayerCharacterImageMsg `protobuf:"bytes,2,req,name=playerBaseData" json:"playerBaseData,omitempty"`
	IceSoul        *int32                   `protobuf:"varint,3,req,name=iceSoul" json:"iceSoul,omitempty"`
	TeamInfo       *ManHuangTeamEntity      `protobuf:"bytes,4,opt,name=teamInfo" json:"teamInfo,omitempty"`
}

func (x *ManHuangRankTeamItem) Reset() {
	*x = ManHuangRankTeamItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangRankTeamItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangRankTeamItem) ProtoMessage() {}

func (x *ManHuangRankTeamItem) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangRankTeamItem.ProtoReflect.Descriptor instead.
func (*ManHuangRankTeamItem) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{68}
}

func (x *ManHuangRankTeamItem) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ManHuangRankTeamItem) GetPlayerBaseData() *PlayerCharacterImageMsg {
	if x != nil {
		return x.PlayerBaseData
	}
	return nil
}

func (x *ManHuangRankTeamItem) GetIceSoul() int32 {
	if x != nil && x.IceSoul != nil {
		return *x.IceSoul
	}
	return 0
}

func (x *ManHuangRankTeamItem) GetTeamInfo() *ManHuangTeamEntity {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

type ManHuangRankPersonReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *ManHuangRankPersonReqMsg) Reset() {
	*x = ManHuangRankPersonReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangRankPersonReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangRankPersonReqMsg) ProtoMessage() {}

func (x *ManHuangRankPersonReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangRankPersonReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangRankPersonReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{69}
}

func (x *ManHuangRankPersonReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type ManHuangRankPersonRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32                    `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	PersonItem []*ManHuangRankPersonItem `protobuf:"bytes,2,rep,name=personItem" json:"personItem,omitempty"`
	UserData   *ManHuangUserDataEntity   `protobuf:"bytes,3,opt,name=userData" json:"userData,omitempty"`
}

func (x *ManHuangRankPersonRespMsg) Reset() {
	*x = ManHuangRankPersonRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangRankPersonRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangRankPersonRespMsg) ProtoMessage() {}

func (x *ManHuangRankPersonRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangRankPersonRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangRankPersonRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{70}
}

func (x *ManHuangRankPersonRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangRankPersonRespMsg) GetPersonItem() []*ManHuangRankPersonItem {
	if x != nil {
		return x.PersonItem
	}
	return nil
}

func (x *ManHuangRankPersonRespMsg) GetUserData() *ManHuangUserDataEntity {
	if x != nil {
		return x.UserData
	}
	return nil
}

type ManHuangRankTeamReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *ManHuangRankTeamReqMsg) Reset() {
	*x = ManHuangRankTeamReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangRankTeamReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangRankTeamReqMsg) ProtoMessage() {}

func (x *ManHuangRankTeamReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangRankTeamReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangRankTeamReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{71}
}

func (x *ManHuangRankTeamReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type ManHuangRankTeamRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32                  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	TeamItem []*ManHuangRankTeamItem `protobuf:"bytes,2,rep,name=teamItem" json:"teamItem,omitempty"`
	MyTeam   *ManHuangTeamEntity     `protobuf:"bytes,3,opt,name=myTeam" json:"myTeam,omitempty"`
}

func (x *ManHuangRankTeamRespMsg) Reset() {
	*x = ManHuangRankTeamRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangRankTeamRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangRankTeamRespMsg) ProtoMessage() {}

func (x *ManHuangRankTeamRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangRankTeamRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangRankTeamRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{72}
}

func (x *ManHuangRankTeamRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ManHuangRankTeamRespMsg) GetTeamItem() []*ManHuangRankTeamItem {
	if x != nil {
		return x.TeamItem
	}
	return nil
}

func (x *ManHuangRankTeamRespMsg) GetMyTeam() *ManHuangTeamEntity {
	if x != nil {
		return x.MyTeam
	}
	return nil
}

type ManHuangMarqueeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Marquee []*ManHuangMarqueeInfo `protobuf:"bytes,1,rep,name=marquee" json:"marquee,omitempty"`
}

func (x *ManHuangMarqueeNotify) Reset() {
	*x = ManHuangMarqueeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangMarqueeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangMarqueeNotify) ProtoMessage() {}

func (x *ManHuangMarqueeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangMarqueeNotify.ProtoReflect.Descriptor instead.
func (*ManHuangMarqueeNotify) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{73}
}

func (x *ManHuangMarqueeNotify) GetMarquee() []*ManHuangMarqueeInfo {
	if x != nil {
		return x.Marquee
	}
	return nil
}

type ManHuangMarqueeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttackerServerId *int64  `protobuf:"varint,1,req,name=attackerServerId" json:"attackerServerId,omitempty"`
	AttackerName     *string `protobuf:"bytes,2,req,name=attackerName" json:"attackerName,omitempty"`
	WinCount         *int32  `protobuf:"varint,3,req,name=winCount" json:"winCount,omitempty"`
	TargetServerId   *int64  `protobuf:"varint,4,req,name=targetServerId" json:"targetServerId,omitempty"`
	TargetName       *string `protobuf:"bytes,5,req,name=targetName" json:"targetName,omitempty"`
	IceSoul          *int32  `protobuf:"varint,6,req,name=iceSoul" json:"iceSoul,omitempty"`
	TargetWinCount   *int32  `protobuf:"varint,7,opt,name=targetWinCount" json:"targetWinCount,omitempty"`
}

func (x *ManHuangMarqueeInfo) Reset() {
	*x = ManHuangMarqueeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangMarqueeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangMarqueeInfo) ProtoMessage() {}

func (x *ManHuangMarqueeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangMarqueeInfo.ProtoReflect.Descriptor instead.
func (*ManHuangMarqueeInfo) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{74}
}

func (x *ManHuangMarqueeInfo) GetAttackerServerId() int64 {
	if x != nil && x.AttackerServerId != nil {
		return *x.AttackerServerId
	}
	return 0
}

func (x *ManHuangMarqueeInfo) GetAttackerName() string {
	if x != nil && x.AttackerName != nil {
		return *x.AttackerName
	}
	return ""
}

func (x *ManHuangMarqueeInfo) GetWinCount() int32 {
	if x != nil && x.WinCount != nil {
		return *x.WinCount
	}
	return 0
}

func (x *ManHuangMarqueeInfo) GetTargetServerId() int64 {
	if x != nil && x.TargetServerId != nil {
		return *x.TargetServerId
	}
	return 0
}

func (x *ManHuangMarqueeInfo) GetTargetName() string {
	if x != nil && x.TargetName != nil {
		return *x.TargetName
	}
	return ""
}

func (x *ManHuangMarqueeInfo) GetIceSoul() int32 {
	if x != nil && x.IceSoul != nil {
		return *x.IceSoul
	}
	return 0
}

func (x *ManHuangMarqueeInfo) GetTargetWinCount() int32 {
	if x != nil && x.TargetWinCount != nil {
		return *x.TargetWinCount
	}
	return 0
}

type ManHuangGameToCrossSyncEventAttAveItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId          *int32              `protobuf:"varint,1,req,name=eventId" json:"eventId,omitempty"`
	AttributeDataMsg []*AttributeDataMsg `protobuf:"bytes,4,rep,name=attributeDataMsg" json:"attributeDataMsg,omitempty"`
}

func (x *ManHuangGameToCrossSyncEventAttAveItem) Reset() {
	*x = ManHuangGameToCrossSyncEventAttAveItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangGameToCrossSyncEventAttAveItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangGameToCrossSyncEventAttAveItem) ProtoMessage() {}

func (x *ManHuangGameToCrossSyncEventAttAveItem) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangGameToCrossSyncEventAttAveItem.ProtoReflect.Descriptor instead.
func (*ManHuangGameToCrossSyncEventAttAveItem) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{75}
}

func (x *ManHuangGameToCrossSyncEventAttAveItem) GetEventId() int32 {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return 0
}

func (x *ManHuangGameToCrossSyncEventAttAveItem) GetAttributeDataMsg() []*AttributeDataMsg {
	if x != nil {
		return x.AttributeDataMsg
	}
	return nil
}

type ManHuangGameToCrossSyncAllAttributeDataReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId      *int32                                    `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	ServerId        *int64                                    `protobuf:"varint,2,req,name=serverId" json:"serverId,omitempty"`
	EventAttAveItem []*ManHuangGameToCrossSyncEventAttAveItem `protobuf:"bytes,3,rep,name=eventAttAveItem" json:"eventAttAveItem,omitempty"`
}

func (x *ManHuangGameToCrossSyncAllAttributeDataReqMsg) Reset() {
	*x = ManHuangGameToCrossSyncAllAttributeDataReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangGameToCrossSyncAllAttributeDataReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangGameToCrossSyncAllAttributeDataReqMsg) ProtoMessage() {}

func (x *ManHuangGameToCrossSyncAllAttributeDataReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangGameToCrossSyncAllAttributeDataReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangGameToCrossSyncAllAttributeDataReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{76}
}

func (x *ManHuangGameToCrossSyncAllAttributeDataReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangGameToCrossSyncAllAttributeDataReqMsg) GetServerId() int64 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

func (x *ManHuangGameToCrossSyncAllAttributeDataReqMsg) GetEventAttAveItem() []*ManHuangGameToCrossSyncEventAttAveItem {
	if x != nil {
		return x.EventAttAveItem
	}
	return nil
}

type ManHuangGameToCrossSyncAllAttributeDataRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *ManHuangGameToCrossSyncAllAttributeDataRespMsg) Reset() {
	*x = ManHuangGameToCrossSyncAllAttributeDataRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangGameToCrossSyncAllAttributeDataRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangGameToCrossSyncAllAttributeDataRespMsg) ProtoMessage() {}

func (x *ManHuangGameToCrossSyncAllAttributeDataRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangGameToCrossSyncAllAttributeDataRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangGameToCrossSyncAllAttributeDataRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{77}
}

func (x *ManHuangGameToCrossSyncAllAttributeDataRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type ManHuangCrossToGameSyncAllAttributeDataReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *ManHuangCrossToGameSyncAllAttributeDataReqMsg) Reset() {
	*x = ManHuangCrossToGameSyncAllAttributeDataReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangCrossToGameSyncAllAttributeDataReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangCrossToGameSyncAllAttributeDataReqMsg) ProtoMessage() {}

func (x *ManHuangCrossToGameSyncAllAttributeDataReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangCrossToGameSyncAllAttributeDataReqMsg.ProtoReflect.Descriptor instead.
func (*ManHuangCrossToGameSyncAllAttributeDataReqMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{78}
}

func (x *ManHuangCrossToGameSyncAllAttributeDataReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type ManHuangCrossToGameSyncAllAttributeDataRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *ManHuangCrossToGameSyncAllAttributeDataRespMsg) Reset() {
	*x = ManHuangCrossToGameSyncAllAttributeDataRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangCrossToGameSyncAllAttributeDataRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangCrossToGameSyncAllAttributeDataRespMsg) ProtoMessage() {}

func (x *ManHuangCrossToGameSyncAllAttributeDataRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangCrossToGameSyncAllAttributeDataRespMsg.ProtoReflect.Descriptor instead.
func (*ManHuangCrossToGameSyncAllAttributeDataRespMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{79}
}

func (x *ManHuangCrossToGameSyncAllAttributeDataRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type ManHuangCrossToGameRankReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId           *int32                                 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	PlayerRankRewardList []*ManHuangCrossToGamePersonRankReward `protobuf:"bytes,2,rep,name=playerRankRewardList" json:"playerRankRewardList,omitempty"`
	TeamRankRewardList   []*ManHuangCrossToGameTeamRankReward   `protobuf:"bytes,3,rep,name=teamRankRewardList" json:"teamRankRewardList,omitempty"`
	ServerList           []int64                                `protobuf:"varint,4,rep,name=serverList" json:"serverList,omitempty"`
}

func (x *ManHuangCrossToGameRankReward) Reset() {
	*x = ManHuangCrossToGameRankReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangCrossToGameRankReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangCrossToGameRankReward) ProtoMessage() {}

func (x *ManHuangCrossToGameRankReward) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangCrossToGameRankReward.ProtoReflect.Descriptor instead.
func (*ManHuangCrossToGameRankReward) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{80}
}

func (x *ManHuangCrossToGameRankReward) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ManHuangCrossToGameRankReward) GetPlayerRankRewardList() []*ManHuangCrossToGamePersonRankReward {
	if x != nil {
		return x.PlayerRankRewardList
	}
	return nil
}

func (x *ManHuangCrossToGameRankReward) GetTeamRankRewardList() []*ManHuangCrossToGameTeamRankReward {
	if x != nil {
		return x.TeamRankRewardList
	}
	return nil
}

func (x *ManHuangCrossToGameRankReward) GetServerList() []int64 {
	if x != nil {
		return x.ServerList
	}
	return nil
}

type ManHuangCrossToGamePersonRankReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *int64  `protobuf:"varint,1,opt,name=playerId" json:"playerId,omitempty"`
	Rank     *int32  `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	Reward   *string `protobuf:"bytes,3,opt,name=reward" json:"reward,omitempty"`
}

func (x *ManHuangCrossToGamePersonRankReward) Reset() {
	*x = ManHuangCrossToGamePersonRankReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangCrossToGamePersonRankReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangCrossToGamePersonRankReward) ProtoMessage() {}

func (x *ManHuangCrossToGamePersonRankReward) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangCrossToGamePersonRankReward.ProtoReflect.Descriptor instead.
func (*ManHuangCrossToGamePersonRankReward) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{81}
}

func (x *ManHuangCrossToGamePersonRankReward) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *ManHuangCrossToGamePersonRankReward) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *ManHuangCrossToGamePersonRankReward) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type ManHuangCrossToGameTeamRankReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *int64  `protobuf:"varint,1,opt,name=playerId" json:"playerId,omitempty"`
	TeamId   *int64  `protobuf:"varint,2,opt,name=teamId" json:"teamId,omitempty"`
	TeamName *string `protobuf:"bytes,3,opt,name=teamName" json:"teamName,omitempty"`
	Rank     *int32  `protobuf:"varint,4,opt,name=rank" json:"rank,omitempty"`
	Reward   *string `protobuf:"bytes,5,opt,name=reward" json:"reward,omitempty"`
}

func (x *ManHuangCrossToGameTeamRankReward) Reset() {
	*x = ManHuangCrossToGameTeamRankReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManHuangCrossToGameTeamRankReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManHuangCrossToGameTeamRankReward) ProtoMessage() {}

func (x *ManHuangCrossToGameTeamRankReward) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManHuangCrossToGameTeamRankReward.ProtoReflect.Descriptor instead.
func (*ManHuangCrossToGameTeamRankReward) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{82}
}

func (x *ManHuangCrossToGameTeamRankReward) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *ManHuangCrossToGameTeamRankReward) GetTeamId() int64 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

func (x *ManHuangCrossToGameTeamRankReward) GetTeamName() string {
	if x != nil && x.TeamName != nil {
		return *x.TeamName
	}
	return ""
}

func (x *ManHuangCrossToGameTeamRankReward) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *ManHuangCrossToGameTeamRankReward) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type WildZoneCrossToGameSyncMallBuyNumMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId     *int32                           `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PlayerId       *int64                           `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
	MallBuyNumList []*WildZoneCrossToGameMallBuyNum `protobuf:"bytes,3,rep,name=mallBuyNumList" json:"mallBuyNumList,omitempty"`
}

func (x *WildZoneCrossToGameSyncMallBuyNumMsg) Reset() {
	*x = WildZoneCrossToGameSyncMallBuyNumMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WildZoneCrossToGameSyncMallBuyNumMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WildZoneCrossToGameSyncMallBuyNumMsg) ProtoMessage() {}

func (x *WildZoneCrossToGameSyncMallBuyNumMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WildZoneCrossToGameSyncMallBuyNumMsg.ProtoReflect.Descriptor instead.
func (*WildZoneCrossToGameSyncMallBuyNumMsg) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{83}
}

func (x *WildZoneCrossToGameSyncMallBuyNumMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *WildZoneCrossToGameSyncMallBuyNumMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *WildZoneCrossToGameSyncMallBuyNumMsg) GetMallBuyNumList() []*WildZoneCrossToGameMallBuyNum {
	if x != nil {
		return x.MallBuyNumList
	}
	return nil
}

type WildZoneCrossToGameMallBuyNum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MallId *int32 `protobuf:"varint,1,opt,name=mallId" json:"mallId,omitempty"`
	BuyNum *int32 `protobuf:"varint,2,opt,name=buyNum" json:"buyNum,omitempty"`
}

func (x *WildZoneCrossToGameMallBuyNum) Reset() {
	*x = WildZoneCrossToGameMallBuyNum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WildZoneCrossToGameMallBuyNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WildZoneCrossToGameMallBuyNum) ProtoMessage() {}

func (x *WildZoneCrossToGameMallBuyNum) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WildZoneCrossToGameMallBuyNum.ProtoReflect.Descriptor instead.
func (*WildZoneCrossToGameMallBuyNum) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{84}
}

func (x *WildZoneCrossToGameMallBuyNum) GetMallId() int32 {
	if x != nil && x.MallId != nil {
		return *x.MallId
	}
	return 0
}

func (x *WildZoneCrossToGameMallBuyNum) GetBuyNum() int32 {
	if x != nil && x.BuyNum != nil {
		return *x.BuyNum
	}
	return 0
}

type WildZoneGameToCrossAddWildZoneEnergy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	PlayerId   *int64 `protobuf:"varint,2,opt,name=playerId" json:"playerId,omitempty"`
	AddEnergy  *int32 `protobuf:"varint,3,opt,name=addEnergy" json:"addEnergy,omitempty"`
}

func (x *WildZoneGameToCrossAddWildZoneEnergy) Reset() {
	*x = WildZoneGameToCrossAddWildZoneEnergy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WildZoneActivityProto_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WildZoneGameToCrossAddWildZoneEnergy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WildZoneGameToCrossAddWildZoneEnergy) ProtoMessage() {}

func (x *WildZoneGameToCrossAddWildZoneEnergy) ProtoReflect() protoreflect.Message {
	mi := &file_WildZoneActivityProto_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WildZoneGameToCrossAddWildZoneEnergy.ProtoReflect.Descriptor instead.
func (*WildZoneGameToCrossAddWildZoneEnergy) Descriptor() ([]byte, []int) {
	return file_WildZoneActivityProto_proto_rawDescGZIP(), []int{85}
}

func (x *WildZoneGameToCrossAddWildZoneEnergy) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *WildZoneGameToCrossAddWildZoneEnergy) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *WildZoneGameToCrossAddWildZoneEnergy) GetAddEnergy() int32 {
	if x != nil && x.AddEnergy != nil {
		return *x.AddEnergy
	}
	return 0
}

var File_WildZoneActivityProto_proto protoreflect.FileDescriptor

var file_WildZoneActivityProto_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x57, 0x69, 0x6c, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x1a, 0x09, 0x42, 0x61, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x03, 0x0a, 0x12,
	0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x49,
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x22, 0x8d, 0x0b, 0x0a, 0x16, 0x4d, 0x61, 0x6e, 0x48,
	0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x4d, 0x73, 0x67, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x75,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0e, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x42, 0x0a, 0x08, 0x74,
	0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x44, 0x0a, 0x08, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d, 0x61, 0x6c,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61,
	0x73, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x6c,
	0x61, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4a, 0x6f, 0x69, 0x6e,
	0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x26, 0x0a, 0x0e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c,
	0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x6f, 0x64,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x12, 0x58, 0x0a,
	0x10, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x10, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x49, 0x0a, 0x0b, 0x65, 0x6e, 0x65, 0x6d, 0x79,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x65, 0x6d, 0x79, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x0b, 0x65, 0x6e, 0x65, 0x6d, 0x79, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x4e, 0x0a, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c,
	0x6c, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61,
	0x6c, 0x6c, 0x12, 0x42, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x73, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x52,
	0x05, 0x67, 0x72, 0x61, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x03, 0x62, 0x6f, 0x78, 0x18, 0x17, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e,
	0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d,
	0x70, 0x52, 0x03, 0x62, 0x6f, 0x78, 0x12, 0x4a, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x6f, 0x6e, 0x65, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d,
	0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x6f,
	0x6e, 0x65, 0x12, 0x58, 0x0a, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x44, 0x6f, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4c, 0x0a, 0x08,
	0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x44, 0x6f, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63,
	0x65, 0x53, 0x6f, 0x75, 0x6c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x63, 0x65,
	0x53, 0x6f, 0x75, 0x6c, 0x12, 0x41, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75,
	0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x77, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x13, 0x4d, 0x61, 0x6e, 0x48, 0x75,
	0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x08, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f,
	0x73, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x6f, 0x73,
	0x65, 0x4e, 0x75, 0x6d, 0x22, 0x6e, 0x0a, 0x14, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61,
	0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x42, 0x75, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x42, 0x75, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x22, 0x81, 0x02, 0x0a, 0x14, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e,
	0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1e,
	0x0a, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x22, 0xb6, 0x01, 0x0a, 0x17, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x44, 0x0a, 0x18, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x8b, 0x01, 0x0a, 0x18, 0x4d, 0x61, 0x6e, 0x48,
	0x75, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x75, 0x0a, 0x19, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e,
	0x67, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x4d,
	0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x46, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48,
	0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x18,
	0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x19, 0x4d, 0x61, 0x6e, 0x48,
	0x75, 0x61, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x7e, 0x0a, 0x18, 0x4d, 0x61, 0x6e, 0x48, 0x75,
	0x61, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c,
	0x67, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x67, 0x22, 0xb9, 0x01, 0x0a, 0x19, 0x4d, 0x61, 0x6e, 0x48,
	0x75, 0x61, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d,
	0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x6c, 0x67, 0x22, 0x63, 0x0a, 0x19, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x72, 0x0a, 0x1a, 0x4d, 0x61, 0x6e, 0x48,
	0x75, 0x61, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x19,
	0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x22, 0x72, 0x0a, 0x1a, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x42, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e,
	0x67, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x74, 0x65, 0x61,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x50, 0x0a, 0x16, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e,
	0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x17, 0x4d, 0x61, 0x6e, 0x48, 0x75,
	0x61, 0x6e, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x4d,
	0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x22, 0x57, 0x0a, 0x1d, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x32, 0x0a,
	0x1e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54,
	0x65, 0x61, 0x6d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x22, 0x5e, 0x0a, 0x20, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52,
	0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x79, 0x0a, 0x21, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a, 0x22,
	0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4a, 0x6f, 0x69,
	0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x52, 0x65, 0x71, 0x4d,
	0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x22, 0x7b, 0x0a, 0x23, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x73,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x08, 0x74,
	0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x38, 0x0a, 0x16, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x51, 0x75, 0x69, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x17, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x51, 0x75, 0x69, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x57, 0x0a, 0x19, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61,
	0x6e, 0x67, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x2e, 0x0a, 0x1a, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4b, 0x69, 0x63, 0x6b, 0x4f,
	0x75, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22,
	0x97, 0x02, 0x0a, 0x13, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x65, 0x6d,
	0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x65, 0x6d, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x65, 0x6d,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x65, 0x6d, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x6e,
	0x65, 0x6d, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61,
	0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61,
	0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42,
	0x61, 0x6c, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x22, 0x77, 0x0a, 0x18, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x72, 0x0a, 0x18, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x54, 0x65,
	0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61,
	0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xbf, 0x01, 0x0a, 0x17, 0x4d, 0x61, 0x6e, 0x48, 0x75,
	0x61, 0x6e, 0x67, 0x4e, 0x70, 0x63, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x6f, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x12, 0x50, 0x0a, 0x10, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x10, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x22, 0xa5, 0x01, 0x0a, 0x15, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65,
	0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x22, 0xc0, 0x01, 0x0a, 0x16, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x14, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67,
	0x42, 0x75, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x06, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xda, 0x01, 0x0a, 0x15, 0x4d,
	0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x79, 0x6e,
	0x63, 0x4d, 0x73, 0x67, 0x12, 0x42, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61,
	0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d, 0x70,
	0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65,
	0x6d, 0x70, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x62, 0x75, 0x66,
	0x66, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x42, 0x75, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d,
	0x70, 0x52, 0x04, 0x62, 0x75, 0x66, 0x66, 0x22, 0x75, 0x0a, 0x19, 0x4d, 0x61, 0x6e, 0x48, 0x75,
	0x61, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x48,
	0x0a, 0x1a, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x22, 0x91, 0x03, 0x0a, 0x1c, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x70, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48,
	0x75, 0x61, 0x6e, 0x67, 0x4e, 0x70, 0x63, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x70, 0x63, 0x12, 0x4e,
	0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61,
	0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x26,
	0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69,
	0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x73, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x50, 0x0a, 0x10, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x10, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x22, 0x37, 0x0a, 0x15,
	0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61,
	0x6e, 0x67, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x58, 0x0a, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x44, 0x6f, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x19,
	0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x8e, 0x04, 0x0a, 0x1a, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x4d,
	0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6c, 0x6f,
	0x6f, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x73, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x61, 0x73, 0x73, 0x12, 0x4e, 0x0a,
	0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d, 0x70,
	0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x6c, 0x12, 0x44, 0x0a,
	0x08, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d, 0x61, 0x6c, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x0c,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69,
	0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x12, 0x4c, 0x0a, 0x0c, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61,
	0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x19, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x4d, 0x73,
	0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x1a, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x79, 0x0a, 0x1b, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x55, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x70, 0x22, 0x78, 0x0a, 0x1c, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x46, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61,
	0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x89,
	0x01, 0x0a, 0x15, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x42,
	0x6f, 0x78, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x78, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x3a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x22, 0x99, 0x01, 0x0a, 0x16, 0x4d,
	0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x6f, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x17, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61,
	0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x42,
	0x6c, 0x6f, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x22, 0x57, 0x0a, 0x19, 0x4d, 0x61, 0x6e, 0x48, 0x75,
	0x61, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x76, 0x0a, 0x1a, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x46, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x9f, 0x05, 0x0a, 0x13, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x4e, 0x70, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d,
	0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4e, 0x70, 0x63, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x70,
	0x63, 0x12, 0x4e, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x4e, 0x0a, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61,
	0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x22, 0x37, 0x0a, 0x15, 0x4d, 0x61,
	0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x71,
	0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x16, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67,
	0x4c, 0x6f, 0x67, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x43, 0x0a, 0x08, 0x68, 0x65, 0x6c, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67,
	0x4c, 0x6f, 0x67, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x68, 0x65, 0x6c,
	0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x69, 0x0a, 0x1b, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x48,
	0x65, 0x6c, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x52, 0x65, 0x71, 0x4d,
	0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0xbc,
	0x03, 0x0a, 0x1c, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x48, 0x65, 0x6c, 0x70, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f,
	0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x4e, 0x0a, 0x0b,
	0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d, 0x70, 0x52,
	0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x6c, 0x12, 0x26, 0x0a, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x73, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63,
	0x65, 0x53, 0x6f, 0x75, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x63, 0x65,
	0x53, 0x6f, 0x75, 0x6c, 0x12, 0x47, 0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52,
	0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x50, 0x0a,
	0x1e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x48, 0x65, 0x6c, 0x70, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xbc, 0x01, 0x0a, 0x1f, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x48, 0x65, 0x6c, 0x70,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x4e,
	0x0a, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e,
	0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d,
	0x70, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x6c, 0x22, 0x8d,
	0x05, 0x0a, 0x1b, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x68, 0x65, 0x6c,
	0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x0b, 0x65, 0x6e, 0x65, 0x6d,
	0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x52, 0x0b, 0x65, 0x6e, 0x65, 0x6d, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x4e, 0x0a, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61,
	0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65,
	0x6d, 0x70, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x47, 0x72, 0x61, 0x73, 0x73, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x47, 0x72, 0x61, 0x73, 0x73, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63,
	0x65, 0x53, 0x6f, 0x75, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x63, 0x65,
	0x53, 0x6f, 0x75, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x57, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x3f,
	0x0a, 0x1d, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22,
	0x77, 0x0a, 0x1e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x12, 0x43, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c,
	0x6f, 0x67, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x9c, 0x02, 0x0a, 0x15, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x65, 0x6e, 0x65, 0x6d, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0b,
	0x65, 0x6e, 0x65, 0x6d, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x4e, 0x0a,
	0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x65, 0x6d, 0x70,
	0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x22, 0xf3, 0x01, 0x0a, 0x15, 0x4d, 0x61, 0x6e, 0x48,
	0x75, 0x61, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x6f, 0x67,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x10, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x49, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48,
	0x75, 0x61, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x39, 0x0a,
	0x17, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x18, 0x4d, 0x61, 0x6e, 0x48,
	0x75, 0x61, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61,
	0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61,
	0x6e, 0x67, 0x52, 0x61, 0x6e, 0x6b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x53, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x22, 0xd9, 0x01, 0x0a, 0x14, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x52, 0x61,
	0x6e, 0x6b, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x53, 0x0a, 0x0e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x52,
	0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x07, 0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x12, 0x42, 0x0a, 0x08, 0x74, 0x65, 0x61,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3a, 0x0a,
	0x18, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x52, 0x61, 0x6e, 0x6b, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x19, 0x4d, 0x61,
	0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x52, 0x61, 0x6e, 0x6b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x4a, 0x0a, 0x0a, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x52, 0x61, 0x6e, 0x6b, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x46, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x38, 0x0a,
	0x16, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x17, 0x4d, 0x61, 0x6e, 0x48,
	0x75, 0x61, 0x6e, 0x67, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x74, 0x65,
	0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e,
	0x48, 0x75, 0x61, 0x6e, 0x67, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3e, 0x0a, 0x06, 0x6d,
	0x79, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x06, 0x6d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x5a, 0x0a, 0x15, 0x4d,
	0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x41, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75,
	0x61, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x6d, 0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x22, 0x8b, 0x02, 0x0a, 0x13, 0x4d, 0x61, 0x6e, 0x48,
	0x75, 0x61, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x71, 0x75, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2a, 0x0a, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x18, 0x06,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x69, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x6c, 0x12, 0x26, 0x0a,
	0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x57, 0x69, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x26, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61,
	0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x53, 0x79, 0x6e,
	0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x41, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x10, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x10, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x22, 0xd1, 0x01, 0x0a,
	0x2d, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x43,
	0x72, 0x6f, 0x73, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x64, 0x0a, 0x0f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x41, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e,
	0x67, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x53, 0x79, 0x6e, 0x63,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x41, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x41, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x22, 0x42, 0x0a, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65,
	0x54, 0x6f, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x6c, 0x6c, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x4d,
	0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x22, 0x4f, 0x0a, 0x2d, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67,
	0x43, 0x72, 0x6f, 0x73, 0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x41,
	0x6c, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e,
	0x67, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x79, 0x6e, 0x63,
	0x41, 0x6c, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0xb3, 0x02, 0x0a, 0x1d, 0x4d, 0x61,
	0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x6b, 0x0a, 0x14, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d,
	0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x54, 0x6f, 0x47, 0x61,
	0x6d, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x14, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x65, 0x0a, 0x12, 0x74, 0x65, 0x61, 0x6d,
	0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61,
	0x6e, 0x67, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x12, 0x74, 0x65, 0x61,
	0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x6d, 0x0a, 0x23, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x9f,
	0x01, 0x0a, 0x21, 0x4d, 0x61, 0x6e, 0x48, 0x75, 0x61, 0x6e, 0x67, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x22, 0xbd, 0x01, 0x0a, 0x24, 0x57, 0x69, 0x6c, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x43, 0x72, 0x6f,
	0x73, 0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x61, 0x6c, 0x6c,
	0x42, 0x75, 0x79, 0x4e, 0x75, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x0e, 0x6d, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x79,
	0x4e, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x57, 0x69, 0x6c, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x79, 0x4e, 0x75, 0x6d,
	0x52, 0x0e, 0x6d, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x79, 0x4e, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x4f, 0x0a, 0x1d, 0x57, 0x69, 0x6c, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x54, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x61, 0x6c, 0x6c, 0x42, 0x75, 0x79, 0x4e, 0x75,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x79,
	0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x75, 0x79, 0x4e, 0x75,
	0x6d, 0x22, 0x80, 0x01, 0x0a, 0x24, 0x57, 0x69, 0x6c, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x47, 0x61,
	0x6d, 0x65, 0x54, 0x6f, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x41, 0x64, 0x64, 0x57, 0x69, 0x6c, 0x64,
	0x5a, 0x6f, 0x6e, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x45, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x64, 0x64, 0x45, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x69, 0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78, 0x64, 0x64,
	0x71, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_WildZoneActivityProto_proto_rawDescOnce sync.Once
	file_WildZoneActivityProto_proto_rawDescData = file_WildZoneActivityProto_proto_rawDesc
)

func file_WildZoneActivityProto_proto_rawDescGZIP() []byte {
	file_WildZoneActivityProto_proto_rawDescOnce.Do(func() {
		file_WildZoneActivityProto_proto_rawDescData = protoimpl.X.CompressGZIP(file_WildZoneActivityProto_proto_rawDescData)
	})
	return file_WildZoneActivityProto_proto_rawDescData
}

var file_WildZoneActivityProto_proto_msgTypes = make([]protoimpl.MessageInfo, 86)
var file_WildZoneActivityProto_proto_goTypes = []any{
	(*ManHuangTeamEntity)(nil),                             // 0: com.yq.msg.CityMsg.ManHuangTeamEntity
	(*ManHuangUserDataEntity)(nil),                         // 1: com.yq.msg.CityMsg.ManHuangUserDataEntity
	(*ManHuangUserWinInfo)(nil),                            // 2: com.yq.msg.CityMsg.ManHuangUserWinInfo
	(*ManHuangUserMallInfo)(nil),                           // 3: com.yq.msg.CityMsg.ManHuangUserMallInfo
	(*ManHuangMemberEntity)(nil),                           // 4: com.yq.msg.CityMsg.ManHuangMemberEntity
	(*ManHuangApplyUserEntity)(nil),                        // 5: com.yq.msg.CityMsg.ManHuangApplyUserEntity
	(*ManHuangUserItemInfoTemp)(nil),                       // 6: com.yq.msg.CityMsg.ManHuangUserItemInfoTemp
	(*ManHuangEnterPanelReqMsg)(nil),                       // 7: com.yq.msg.CityMsg.ManHuangEnterPanelReqMsg
	(*ManHuangEnterPanelRespMsg)(nil),                      // 8: com.yq.msg.CityMsg.ManHuangEnterPanelRespMsg
	(*ManHuangLeavePanelReqMsg)(nil),                       // 9: com.yq.msg.CityMsg.ManHuangLeavePanelReqMsg
	(*ManHuangLeavePanelRespMsg)(nil),                      // 10: com.yq.msg.CityMsg.ManHuangLeavePanelRespMsg
	(*ManHuangCreateTeamReqMsg)(nil),                       // 11: com.yq.msg.CityMsg.ManHuangCreateTeamReqMsg
	(*ManHuangCreateTeamRespMsg)(nil),                      // 12: com.yq.msg.CityMsg.ManHuangCreateTeamRespMsg
	(*ManHuangGetTeamListReqMsg)(nil),                      // 13: com.yq.msg.CityMsg.ManHuangGetTeamListReqMsg
	(*ManHuangGetTeamListRespMsg)(nil),                     // 14: com.yq.msg.CityMsg.ManHuangGetTeamListRespMsg
	(*ManHuangGetTeamInfoReqMsg)(nil),                      // 15: com.yq.msg.CityMsg.ManHuangGetTeamInfoReqMsg
	(*ManHuangGetTeamInfoRespMsg)(nil),                     // 16: com.yq.msg.CityMsg.ManHuangGetTeamInfoRespMsg
	(*ManHuangJoinTeamReqMsg)(nil),                         // 17: com.yq.msg.CityMsg.ManHuangJoinTeamReqMsg
	(*ManHuangJoinTeamRespMsg)(nil),                        // 18: com.yq.msg.CityMsg.ManHuangJoinTeamRespMsg
	(*ManHuangCancelTeamApplyReqMsg)(nil),                  // 19: com.yq.msg.CityMsg.ManHuangCancelTeamApplyReqMsg
	(*ManHuangCancelTeamApplyRespMsg)(nil),                 // 20: com.yq.msg.CityMsg.ManHuangCancelTeamApplyRespMsg
	(*ManHuangApplyJoinTeamAgreeReqMsg)(nil),               // 21: com.yq.msg.CityMsg.ManHuangApplyJoinTeamAgreeReqMsg
	(*ManHuangApplyJoinTeamAgreeRespMsg)(nil),              // 22: com.yq.msg.CityMsg.ManHuangApplyJoinTeamAgreeRespMsg
	(*ManHuangApplyJoinTeamRefusedReqMsg)(nil),             // 23: com.yq.msg.CityMsg.ManHuangApplyJoinTeamRefusedReqMsg
	(*ManHuangApplyJoinTeamRefusedRespMsg)(nil),            // 24: com.yq.msg.CityMsg.ManHuangApplyJoinTeamRefusedRespMsg
	(*ManHuangQuitTeamReqMsg)(nil),                         // 25: com.yq.msg.CityMsg.ManHuangQuitTeamReqMsg
	(*ManHuangQuitTeamRespMsg)(nil),                        // 26: com.yq.msg.CityMsg.ManHuangQuitTeamRespMsg
	(*ManHuangKickOutTeamReqMsg)(nil),                      // 27: com.yq.msg.CityMsg.ManHuangKickOutTeamReqMsg
	(*ManHuangKickOutTeamRespMsg)(nil),                     // 28: com.yq.msg.CityMsg.ManHuangKickOutTeamRespMsg
	(*ManHuangEnemyNotify)(nil),                            // 29: com.yq.msg.CityMsg.ManHuangEnemyNotify
	(*ManHuangTeamLeaderNotify)(nil),                       // 30: com.yq.msg.CityMsg.ManHuangTeamLeaderNotify
	(*ManHuangTeamMemberNotify)(nil),                       // 31: com.yq.msg.CityMsg.ManHuangTeamMemberNotify
	(*ManHuangNpcTargetEntity)(nil),                        // 32: com.yq.msg.CityMsg.ManHuangNpcTargetEntity
	(*ManHuangEventInfoTemp)(nil),                          // 33: com.yq.msg.CityMsg.ManHuangEventInfoTemp
	(*ManHuangRegionInfoTemp)(nil),                         // 34: com.yq.msg.CityMsg.ManHuangRegionInfoTemp
	(*ManHuangBuffInfoTemp)(nil),                           // 35: com.yq.msg.CityMsg.ManHuangBuffInfoTemp
	(*ManHuangConfigSyncMsg)(nil),                          // 36: com.yq.msg.CityMsg.ManHuangConfigSyncMsg
	(*ManHuangEnterRegionReqMsg)(nil),                      // 37: com.yq.msg.CityMsg.ManHuangEnterRegionReqMsg
	(*ManHuangEnterRegionRespMsg)(nil),                     // 38: com.yq.msg.CityMsg.ManHuangEnterRegionRespMsg
	(*ManHuangEventDoingInfoEntity)(nil),                   // 39: com.yq.msg.CityMsg.ManHuangEventDoingInfoEntity
	(*ManHuangExploreReqMsg)(nil),                          // 40: com.yq.msg.CityMsg.ManHuangExploreReqMsg
	(*ManHuangExploreRespMsg)(nil),                         // 41: com.yq.msg.CityMsg.ManHuangExploreRespMsg
	(*ManHuangEventHandleReqMsg)(nil),                      // 42: com.yq.msg.CityMsg.ManHuangEventHandleReqMsg
	(*ManHuangEventHandleRespMsg)(nil),                     // 43: com.yq.msg.CityMsg.ManHuangEventHandleRespMsg
	(*ManHuangEventActionReqMsg)(nil),                      // 44: com.yq.msg.CityMsg.ManHuangEventActionReqMsg
	(*ManHuangEventActionRespMsg)(nil),                     // 45: com.yq.msg.CityMsg.ManHuangEventActionRespMsg
	(*ManHuangRecoverEnergyReqMsg)(nil),                    // 46: com.yq.msg.CityMsg.ManHuangRecoverEnergyReqMsg
	(*ManHuangRecoverEnergyRespMsg)(nil),                   // 47: com.yq.msg.CityMsg.ManHuangRecoverEnergyRespMsg
	(*ManHuangOpenBoxReqMsg)(nil),                          // 48: com.yq.msg.CityMsg.ManHuangOpenBoxReqMsg
	(*ManHuangOpenBoxRespMsg)(nil),                         // 49: com.yq.msg.CityMsg.ManHuangOpenBoxRespMsg
	(*ManHuangEventInfoNotify)(nil),                        // 50: com.yq.msg.CityMsg.ManHuangEventInfoNotify
	(*ManHuangGetUserDataReqMsg)(nil),                      // 51: com.yq.msg.CityMsg.ManHuangGetUserDataReqMsg
	(*ManHuangGetUserDataRespMsg)(nil),                     // 52: com.yq.msg.CityMsg.ManHuangGetUserDataRespMsg
	(*ManHuangLogHelpItem)(nil),                            // 53: com.yq.msg.CityMsg.ManHuangLogHelpItem
	(*ManHuangLogHelpReqMsg)(nil),                          // 54: com.yq.msg.CityMsg.ManHuangLogHelpReqMsg
	(*ManHuangLogHelpRespMsg)(nil),                         // 55: com.yq.msg.CityMsg.ManHuangLogHelpRespMsg
	(*ManHuangHelpActionAttReqMsg)(nil),                    // 56: com.yq.msg.CityMsg.ManHuangHelpActionAttReqMsg
	(*ManHuangHelpActionAttRespMsg)(nil),                   // 57: com.yq.msg.CityMsg.ManHuangHelpActionAttRespMsg
	(*ManHuangHelpActionRewardReqMsg)(nil),                 // 58: com.yq.msg.CityMsg.ManHuangHelpActionRewardReqMsg
	(*ManHuangHelpActionRewardRespMsg)(nil),                // 59: com.yq.msg.CityMsg.ManHuangHelpActionRewardRespMsg
	(*ManHuangLogBattlegroundItem)(nil),                    // 60: com.yq.msg.CityMsg.ManHuangLogBattlegroundItem
	(*ManHuangLogBattlegroundReqMsg)(nil),                  // 61: com.yq.msg.CityMsg.ManHuangLogBattlegroundReqMsg
	(*ManHuangLogBattlegroundRespMsg)(nil),                 // 62: com.yq.msg.CityMsg.ManHuangLogBattlegroundRespMsg
	(*ManHuangLogDefendItem)(nil),                          // 63: com.yq.msg.CityMsg.ManHuangLogDefendItem
	(*ManHuangLogPersonItem)(nil),                          // 64: com.yq.msg.CityMsg.ManHuangLogPersonItem
	(*ManHuangLogPersonReqMsg)(nil),                        // 65: com.yq.msg.CityMsg.ManHuangLogPersonReqMsg
	(*ManHuangLogPersonRespMsg)(nil),                       // 66: com.yq.msg.CityMsg.ManHuangLogPersonRespMsg
	(*ManHuangRankPersonItem)(nil),                         // 67: com.yq.msg.CityMsg.ManHuangRankPersonItem
	(*ManHuangRankTeamItem)(nil),                           // 68: com.yq.msg.CityMsg.ManHuangRankTeamItem
	(*ManHuangRankPersonReqMsg)(nil),                       // 69: com.yq.msg.CityMsg.ManHuangRankPersonReqMsg
	(*ManHuangRankPersonRespMsg)(nil),                      // 70: com.yq.msg.CityMsg.ManHuangRankPersonRespMsg
	(*ManHuangRankTeamReqMsg)(nil),                         // 71: com.yq.msg.CityMsg.ManHuangRankTeamReqMsg
	(*ManHuangRankTeamRespMsg)(nil),                        // 72: com.yq.msg.CityMsg.ManHuangRankTeamRespMsg
	(*ManHuangMarqueeNotify)(nil),                          // 73: com.yq.msg.CityMsg.ManHuangMarqueeNotify
	(*ManHuangMarqueeInfo)(nil),                            // 74: com.yq.msg.CityMsg.ManHuangMarqueeInfo
	(*ManHuangGameToCrossSyncEventAttAveItem)(nil),         // 75: com.yq.msg.CityMsg.ManHuangGameToCrossSyncEventAttAveItem
	(*ManHuangGameToCrossSyncAllAttributeDataReqMsg)(nil),  // 76: com.yq.msg.CityMsg.ManHuangGameToCrossSyncAllAttributeDataReqMsg
	(*ManHuangGameToCrossSyncAllAttributeDataRespMsg)(nil), // 77: com.yq.msg.CityMsg.ManHuangGameToCrossSyncAllAttributeDataRespMsg
	(*ManHuangCrossToGameSyncAllAttributeDataReqMsg)(nil),  // 78: com.yq.msg.CityMsg.ManHuangCrossToGameSyncAllAttributeDataReqMsg
	(*ManHuangCrossToGameSyncAllAttributeDataRespMsg)(nil), // 79: com.yq.msg.CityMsg.ManHuangCrossToGameSyncAllAttributeDataRespMsg
	(*ManHuangCrossToGameRankReward)(nil),                  // 80: com.yq.msg.CityMsg.ManHuangCrossToGameRankReward
	(*ManHuangCrossToGamePersonRankReward)(nil),            // 81: com.yq.msg.CityMsg.ManHuangCrossToGamePersonRankReward
	(*ManHuangCrossToGameTeamRankReward)(nil),              // 82: com.yq.msg.CityMsg.ManHuangCrossToGameTeamRankReward
	(*WildZoneCrossToGameSyncMallBuyNumMsg)(nil),           // 83: com.yq.msg.CityMsg.WildZoneCrossToGameSyncMallBuyNumMsg
	(*WildZoneCrossToGameMallBuyNum)(nil),                  // 84: com.yq.msg.CityMsg.WildZoneCrossToGameMallBuyNum
	(*WildZoneGameToCrossAddWildZoneEnergy)(nil),           // 85: com.yq.msg.CityMsg.WildZoneGameToCrossAddWildZoneEnergy
	(*PlayerCharacterImageMsg)(nil),                        // 86: com.yq.msg.CityMsg.PlayerCharacterImageMsg
	(*PlayerBaseDataMsg)(nil),                              // 87: com.yq.msg.CityMsg.PlayerBaseDataMsg
	(*AttributeDataMsg)(nil),                               // 88: com.yq.msg.CityMsg.AttributeDataMsg
	(*AwardInfo)(nil),                                      // 89: com.yq.msg.CityMsg.AwardInfo
	(*BattleRecordMsg)(nil),                                // 90: com.yq.msg.CityMsg.BattleRecordMsg
	(*UsePropReq)(nil),                                     // 91: com.yq.msg.CityMsg.UsePropReq
}
var file_WildZoneActivityProto_proto_depIdxs = []int32{
	4,  // 0: com.yq.msg.CityMsg.ManHuangTeamEntity.members:type_name -> com.yq.msg.CityMsg.ManHuangMemberEntity
	5,  // 1: com.yq.msg.CityMsg.ManHuangTeamEntity.applyList:type_name -> com.yq.msg.CityMsg.ManHuangApplyUserEntity
	86, // 2: com.yq.msg.CityMsg.ManHuangUserDataEntity.playerInfo:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	0,  // 3: com.yq.msg.CityMsg.ManHuangUserDataEntity.teamInfo:type_name -> com.yq.msg.CityMsg.ManHuangTeamEntity
	3,  // 4: com.yq.msg.CityMsg.ManHuangUserDataEntity.mallInfo:type_name -> com.yq.msg.CityMsg.ManHuangUserMallInfo
	31, // 5: com.yq.msg.CityMsg.ManHuangUserDataEntity.teamMemberNotify:type_name -> com.yq.msg.CityMsg.ManHuangTeamMemberNotify
	29, // 6: com.yq.msg.CityMsg.ManHuangUserDataEntity.enemyNotify:type_name -> com.yq.msg.CityMsg.ManHuangEnemyNotify
	6,  // 7: com.yq.msg.CityMsg.ManHuangUserDataEntity.monsterBall:type_name -> com.yq.msg.CityMsg.ManHuangUserItemInfoTemp
	6,  // 8: com.yq.msg.CityMsg.ManHuangUserDataEntity.grass:type_name -> com.yq.msg.CityMsg.ManHuangUserItemInfoTemp
	6,  // 9: com.yq.msg.CityMsg.ManHuangUserDataEntity.box:type_name -> com.yq.msg.CityMsg.ManHuangUserItemInfoTemp
	6,  // 10: com.yq.msg.CityMsg.ManHuangUserDataEntity.eventDone:type_name -> com.yq.msg.CityMsg.ManHuangUserItemInfoTemp
	39, // 11: com.yq.msg.CityMsg.ManHuangUserDataEntity.eventDoingInfo:type_name -> com.yq.msg.CityMsg.ManHuangEventDoingInfoEntity
	39, // 12: com.yq.msg.CityMsg.ManHuangUserDataEntity.signInfo:type_name -> com.yq.msg.CityMsg.ManHuangEventDoingInfoEntity
	2,  // 13: com.yq.msg.CityMsg.ManHuangUserDataEntity.winInfo:type_name -> com.yq.msg.CityMsg.ManHuangUserWinInfo
	86, // 14: com.yq.msg.CityMsg.ManHuangMemberEntity.memberInfo:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	87, // 15: com.yq.msg.CityMsg.ManHuangApplyUserEntity.playerInfo:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	86, // 16: com.yq.msg.CityMsg.ManHuangEnterPanelReqMsg.playerDetail:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	1,  // 17: com.yq.msg.CityMsg.ManHuangEnterPanelRespMsg.userData:type_name -> com.yq.msg.CityMsg.ManHuangUserDataEntity
	0,  // 18: com.yq.msg.CityMsg.ManHuangCreateTeamRespMsg.teamInfo:type_name -> com.yq.msg.CityMsg.ManHuangTeamEntity
	0,  // 19: com.yq.msg.CityMsg.ManHuangGetTeamListRespMsg.teamList:type_name -> com.yq.msg.CityMsg.ManHuangTeamEntity
	0,  // 20: com.yq.msg.CityMsg.ManHuangGetTeamInfoRespMsg.teamInfo:type_name -> com.yq.msg.CityMsg.ManHuangTeamEntity
	0,  // 21: com.yq.msg.CityMsg.ManHuangApplyJoinTeamAgreeRespMsg.teamInfo:type_name -> com.yq.msg.CityMsg.ManHuangTeamEntity
	0,  // 22: com.yq.msg.CityMsg.ManHuangApplyJoinTeamRefusedRespMsg.teamInfo:type_name -> com.yq.msg.CityMsg.ManHuangTeamEntity
	6,  // 23: com.yq.msg.CityMsg.ManHuangEnemyNotify.monsterBall:type_name -> com.yq.msg.CityMsg.ManHuangUserItemInfoTemp
	5,  // 24: com.yq.msg.CityMsg.ManHuangTeamLeaderNotify.userData:type_name -> com.yq.msg.CityMsg.ManHuangApplyUserEntity
	0,  // 25: com.yq.msg.CityMsg.ManHuangTeamMemberNotify.teamInfo:type_name -> com.yq.msg.CityMsg.ManHuangTeamEntity
	88, // 26: com.yq.msg.CityMsg.ManHuangNpcTargetEntity.attributeDataMsg:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	34, // 27: com.yq.msg.CityMsg.ManHuangConfigSyncMsg.region:type_name -> com.yq.msg.CityMsg.ManHuangRegionInfoTemp
	33, // 28: com.yq.msg.CityMsg.ManHuangConfigSyncMsg.event:type_name -> com.yq.msg.CityMsg.ManHuangEventInfoTemp
	35, // 29: com.yq.msg.CityMsg.ManHuangConfigSyncMsg.buff:type_name -> com.yq.msg.CityMsg.ManHuangBuffInfoTemp
	32, // 30: com.yq.msg.CityMsg.ManHuangEventDoingInfoEntity.targetNpc:type_name -> com.yq.msg.CityMsg.ManHuangNpcTargetEntity
	1,  // 31: com.yq.msg.CityMsg.ManHuangEventDoingInfoEntity.targetPlayer:type_name -> com.yq.msg.CityMsg.ManHuangUserDataEntity
	88, // 32: com.yq.msg.CityMsg.ManHuangEventDoingInfoEntity.attributeDataMsg:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	39, // 33: com.yq.msg.CityMsg.ManHuangExploreRespMsg.eventDoingInfo:type_name -> com.yq.msg.CityMsg.ManHuangEventDoingInfoEntity
	89, // 34: com.yq.msg.CityMsg.ManHuangEventHandleRespMsg.rewards:type_name -> com.yq.msg.CityMsg.AwardInfo
	6,  // 35: com.yq.msg.CityMsg.ManHuangEventHandleRespMsg.monsterBall:type_name -> com.yq.msg.CityMsg.ManHuangUserItemInfoTemp
	3,  // 36: com.yq.msg.CityMsg.ManHuangEventHandleRespMsg.mallInfo:type_name -> com.yq.msg.CityMsg.ManHuangUserMallInfo
	90, // 37: com.yq.msg.CityMsg.ManHuangEventHandleRespMsg.battleRecord:type_name -> com.yq.msg.CityMsg.BattleRecordMsg
	3,  // 38: com.yq.msg.CityMsg.ManHuangEventHandleRespMsg.mallInfoList:type_name -> com.yq.msg.CityMsg.ManHuangUserMallInfo
	91, // 39: com.yq.msg.CityMsg.ManHuangRecoverEnergyReqMsg.userProp:type_name -> com.yq.msg.CityMsg.UsePropReq
	1,  // 40: com.yq.msg.CityMsg.ManHuangRecoverEnergyRespMsg.userData:type_name -> com.yq.msg.CityMsg.ManHuangUserDataEntity
	91, // 41: com.yq.msg.CityMsg.ManHuangOpenBoxReqMsg.userProp:type_name -> com.yq.msg.CityMsg.UsePropReq
	89, // 42: com.yq.msg.CityMsg.ManHuangOpenBoxRespMsg.rewards:type_name -> com.yq.msg.CityMsg.AwardInfo
	1,  // 43: com.yq.msg.CityMsg.ManHuangGetUserDataRespMsg.userData:type_name -> com.yq.msg.CityMsg.ManHuangUserDataEntity
	32, // 44: com.yq.msg.CityMsg.ManHuangLogHelpItem.targetNpc:type_name -> com.yq.msg.CityMsg.ManHuangNpcTargetEntity
	1,  // 45: com.yq.msg.CityMsg.ManHuangLogHelpItem.targetPlayer:type_name -> com.yq.msg.CityMsg.ManHuangUserDataEntity
	89, // 46: com.yq.msg.CityMsg.ManHuangLogHelpItem.rewards:type_name -> com.yq.msg.CityMsg.AwardInfo
	6,  // 47: com.yq.msg.CityMsg.ManHuangLogHelpItem.monsterBall:type_name -> com.yq.msg.CityMsg.ManHuangUserItemInfoTemp
	53, // 48: com.yq.msg.CityMsg.ManHuangLogHelpRespMsg.helpItem:type_name -> com.yq.msg.CityMsg.ManHuangLogHelpItem
	89, // 49: com.yq.msg.CityMsg.ManHuangHelpActionAttRespMsg.rewards:type_name -> com.yq.msg.CityMsg.AwardInfo
	6,  // 50: com.yq.msg.CityMsg.ManHuangHelpActionAttRespMsg.monsterBall:type_name -> com.yq.msg.CityMsg.ManHuangUserItemInfoTemp
	90, // 51: com.yq.msg.CityMsg.ManHuangHelpActionAttRespMsg.battleRecord:type_name -> com.yq.msg.CityMsg.BattleRecordMsg
	89, // 52: com.yq.msg.CityMsg.ManHuangHelpActionRewardRespMsg.rewards:type_name -> com.yq.msg.CityMsg.AwardInfo
	6,  // 53: com.yq.msg.CityMsg.ManHuangHelpActionRewardRespMsg.monsterBall:type_name -> com.yq.msg.CityMsg.ManHuangUserItemInfoTemp
	87, // 54: com.yq.msg.CityMsg.ManHuangLogBattlegroundItem.playerInfo:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	87, // 55: com.yq.msg.CityMsg.ManHuangLogBattlegroundItem.helpPlayerInfo:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	87, // 56: com.yq.msg.CityMsg.ManHuangLogBattlegroundItem.enemyPlayer:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	6,  // 57: com.yq.msg.CityMsg.ManHuangLogBattlegroundItem.monsterBall:type_name -> com.yq.msg.CityMsg.ManHuangUserItemInfoTemp
	89, // 58: com.yq.msg.CityMsg.ManHuangLogBattlegroundItem.rewards:type_name -> com.yq.msg.CityMsg.AwardInfo
	60, // 59: com.yq.msg.CityMsg.ManHuangLogBattlegroundRespMsg.item:type_name -> com.yq.msg.CityMsg.ManHuangLogBattlegroundItem
	87, // 60: com.yq.msg.CityMsg.ManHuangLogDefendItem.enemyPlayer:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	6,  // 61: com.yq.msg.CityMsg.ManHuangLogDefendItem.monsterBall:type_name -> com.yq.msg.CityMsg.ManHuangUserItemInfoTemp
	60, // 62: com.yq.msg.CityMsg.ManHuangLogPersonItem.BattlegroundItem:type_name -> com.yq.msg.CityMsg.ManHuangLogBattlegroundItem
	63, // 63: com.yq.msg.CityMsg.ManHuangLogPersonItem.defendItem:type_name -> com.yq.msg.CityMsg.ManHuangLogDefendItem
	64, // 64: com.yq.msg.CityMsg.ManHuangLogPersonRespMsg.item:type_name -> com.yq.msg.CityMsg.ManHuangLogPersonItem
	86, // 65: com.yq.msg.CityMsg.ManHuangRankPersonItem.playerBaseData:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	86, // 66: com.yq.msg.CityMsg.ManHuangRankTeamItem.playerBaseData:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	0,  // 67: com.yq.msg.CityMsg.ManHuangRankTeamItem.teamInfo:type_name -> com.yq.msg.CityMsg.ManHuangTeamEntity
	67, // 68: com.yq.msg.CityMsg.ManHuangRankPersonRespMsg.personItem:type_name -> com.yq.msg.CityMsg.ManHuangRankPersonItem
	1,  // 69: com.yq.msg.CityMsg.ManHuangRankPersonRespMsg.userData:type_name -> com.yq.msg.CityMsg.ManHuangUserDataEntity
	68, // 70: com.yq.msg.CityMsg.ManHuangRankTeamRespMsg.teamItem:type_name -> com.yq.msg.CityMsg.ManHuangRankTeamItem
	0,  // 71: com.yq.msg.CityMsg.ManHuangRankTeamRespMsg.myTeam:type_name -> com.yq.msg.CityMsg.ManHuangTeamEntity
	74, // 72: com.yq.msg.CityMsg.ManHuangMarqueeNotify.marquee:type_name -> com.yq.msg.CityMsg.ManHuangMarqueeInfo
	88, // 73: com.yq.msg.CityMsg.ManHuangGameToCrossSyncEventAttAveItem.attributeDataMsg:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	75, // 74: com.yq.msg.CityMsg.ManHuangGameToCrossSyncAllAttributeDataReqMsg.eventAttAveItem:type_name -> com.yq.msg.CityMsg.ManHuangGameToCrossSyncEventAttAveItem
	81, // 75: com.yq.msg.CityMsg.ManHuangCrossToGameRankReward.playerRankRewardList:type_name -> com.yq.msg.CityMsg.ManHuangCrossToGamePersonRankReward
	82, // 76: com.yq.msg.CityMsg.ManHuangCrossToGameRankReward.teamRankRewardList:type_name -> com.yq.msg.CityMsg.ManHuangCrossToGameTeamRankReward
	84, // 77: com.yq.msg.CityMsg.WildZoneCrossToGameSyncMallBuyNumMsg.mallBuyNumList:type_name -> com.yq.msg.CityMsg.WildZoneCrossToGameMallBuyNum
	78, // [78:78] is the sub-list for method output_type
	78, // [78:78] is the sub-list for method input_type
	78, // [78:78] is the sub-list for extension type_name
	78, // [78:78] is the sub-list for extension extendee
	0,  // [0:78] is the sub-list for field type_name
}

func init() { file_WildZoneActivityProto_proto_init() }
func file_WildZoneActivityProto_proto_init() {
	if File_WildZoneActivityProto_proto != nil {
		return
	}
	file_Bag_proto_init()
	file_Battle_proto_init()
	file_Common_proto_init()
	file_WatchPlayer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_WildZoneActivityProto_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangTeamEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangUserDataEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangUserWinInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangUserMallInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangMemberEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangApplyUserEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangUserItemInfoTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangEnterPanelReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangEnterPanelRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangLeavePanelReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangLeavePanelRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangCreateTeamReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangCreateTeamRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangGetTeamListReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangGetTeamListRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangGetTeamInfoReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangGetTeamInfoRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangJoinTeamReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangJoinTeamRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangCancelTeamApplyReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangCancelTeamApplyRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangApplyJoinTeamAgreeReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangApplyJoinTeamAgreeRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangApplyJoinTeamRefusedReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangApplyJoinTeamRefusedRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangQuitTeamReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangQuitTeamRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangKickOutTeamReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangKickOutTeamRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangEnemyNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangTeamLeaderNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangTeamMemberNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangNpcTargetEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangEventInfoTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangRegionInfoTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangBuffInfoTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangConfigSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangEnterRegionReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangEnterRegionRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangEventDoingInfoEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangExploreReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangExploreRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangEventHandleReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangEventHandleRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangEventActionReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangEventActionRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangRecoverEnergyReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangRecoverEnergyRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangOpenBoxReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangOpenBoxRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangEventInfoNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangGetUserDataReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangGetUserDataRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangLogHelpItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangLogHelpReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangLogHelpRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangHelpActionAttReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangHelpActionAttRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangHelpActionRewardReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangHelpActionRewardRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangLogBattlegroundItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangLogBattlegroundReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangLogBattlegroundRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangLogDefendItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangLogPersonItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangLogPersonReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangLogPersonRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangRankPersonItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangRankTeamItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangRankPersonReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangRankPersonRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangRankTeamReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangRankTeamRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangMarqueeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangMarqueeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangGameToCrossSyncEventAttAveItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangGameToCrossSyncAllAttributeDataReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangGameToCrossSyncAllAttributeDataRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangCrossToGameSyncAllAttributeDataReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangCrossToGameSyncAllAttributeDataRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangCrossToGameRankReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangCrossToGamePersonRankReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*ManHuangCrossToGameTeamRankReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*WildZoneCrossToGameSyncMallBuyNumMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*WildZoneCrossToGameMallBuyNum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WildZoneActivityProto_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*WildZoneGameToCrossAddWildZoneEnergy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_WildZoneActivityProto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   86,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_WildZoneActivityProto_proto_goTypes,
		DependencyIndexes: file_WildZoneActivityProto_proto_depIdxs,
		MessageInfos:      file_WildZoneActivityProto_proto_msgTypes,
	}.Build()
	File_WildZoneActivityProto_proto = out.File
	file_WildZoneActivityProto_proto_rawDesc = nil
	file_WildZoneActivityProto_proto_goTypes = nil
	file_WildZoneActivityProto_proto_depIdxs = nil
}
