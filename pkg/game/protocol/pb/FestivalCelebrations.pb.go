// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: FestivalCelebrations.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FestivalCelebrationsPlayerInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BanquetMsg      *FestivalCelebrationsBanquetMsg      `protobuf:"bytes,1,opt,name=banquetMsg" json:"banquetMsg,omitempty"`
	SignMsg         *FestivalCelebrationsSignMsg         `protobuf:"bytes,2,opt,name=signMsg" json:"signMsg,omitempty"`
	CollectMsg      *FestivalCelebrationsCollectMsg      `protobuf:"bytes,3,opt,name=collectMsg" json:"collectMsg,omitempty"`
	EasterEggMsg    *FestivalCelebrationsEasterEggMsg    `protobuf:"bytes,4,opt,name=easterEggMsg" json:"easterEggMsg,omitempty"`
	AnnualMemoryMsg *FestivalCelebrationsAnnualMemoryMsg `protobuf:"bytes,5,opt,name=annualMemoryMsg" json:"annualMemoryMsg,omitempty"`
}

func (x *FestivalCelebrationsPlayerInfoMsg) Reset() {
	*x = FestivalCelebrationsPlayerInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsPlayerInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsPlayerInfoMsg) ProtoMessage() {}

func (x *FestivalCelebrationsPlayerInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsPlayerInfoMsg.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsPlayerInfoMsg) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{0}
}

func (x *FestivalCelebrationsPlayerInfoMsg) GetBanquetMsg() *FestivalCelebrationsBanquetMsg {
	if x != nil {
		return x.BanquetMsg
	}
	return nil
}

func (x *FestivalCelebrationsPlayerInfoMsg) GetSignMsg() *FestivalCelebrationsSignMsg {
	if x != nil {
		return x.SignMsg
	}
	return nil
}

func (x *FestivalCelebrationsPlayerInfoMsg) GetCollectMsg() *FestivalCelebrationsCollectMsg {
	if x != nil {
		return x.CollectMsg
	}
	return nil
}

func (x *FestivalCelebrationsPlayerInfoMsg) GetEasterEggMsg() *FestivalCelebrationsEasterEggMsg {
	if x != nil {
		return x.EasterEggMsg
	}
	return nil
}

func (x *FestivalCelebrationsPlayerInfoMsg) GetAnnualMemoryMsg() *FestivalCelebrationsAnnualMemoryMsg {
	if x != nil {
		return x.AnnualMemoryMsg
	}
	return nil
}

type FestivalCelebrationsAnnualMemoryMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorshipTimes *int32 `protobuf:"varint,1,opt,name=worshipTimes" json:"worshipTimes,omitempty"`
}

func (x *FestivalCelebrationsAnnualMemoryMsg) Reset() {
	*x = FestivalCelebrationsAnnualMemoryMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsAnnualMemoryMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsAnnualMemoryMsg) ProtoMessage() {}

func (x *FestivalCelebrationsAnnualMemoryMsg) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsAnnualMemoryMsg.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsAnnualMemoryMsg) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{1}
}

func (x *FestivalCelebrationsAnnualMemoryMsg) GetWorshipTimes() int32 {
	if x != nil && x.WorshipTimes != nil {
		return *x.WorshipTimes
	}
	return 0
}

type FestivalCelebrationsGetAnnualMemoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	DataType   *int32 `protobuf:"varint,2,opt,name=dataType" json:"dataType,omitempty"`
}

func (x *FestivalCelebrationsGetAnnualMemoryReq) Reset() {
	*x = FestivalCelebrationsGetAnnualMemoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsGetAnnualMemoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsGetAnnualMemoryReq) ProtoMessage() {}

func (x *FestivalCelebrationsGetAnnualMemoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsGetAnnualMemoryReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsGetAnnualMemoryReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{2}
}

func (x *FestivalCelebrationsGetAnnualMemoryReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *FestivalCelebrationsGetAnnualMemoryReq) GetDataType() int32 {
	if x != nil && x.DataType != nil {
		return *x.DataType
	}
	return 0
}

type FestivalCelebrationsGetAnnualMemoryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                 *int32                                     `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	AnnualMemoryItemMsg []*FestivalCelebrationsAnnualMemoryItemMsg `protobuf:"bytes,2,rep,name=AnnualMemoryItemMsg" json:"AnnualMemoryItemMsg,omitempty"`
}

func (x *FestivalCelebrationsGetAnnualMemoryRsp) Reset() {
	*x = FestivalCelebrationsGetAnnualMemoryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsGetAnnualMemoryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsGetAnnualMemoryRsp) ProtoMessage() {}

func (x *FestivalCelebrationsGetAnnualMemoryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsGetAnnualMemoryRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsGetAnnualMemoryRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{3}
}

func (x *FestivalCelebrationsGetAnnualMemoryRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FestivalCelebrationsGetAnnualMemoryRsp) GetAnnualMemoryItemMsg() []*FestivalCelebrationsAnnualMemoryItemMsg {
	if x != nil {
		return x.AnnualMemoryItemMsg
	}
	return nil
}

type FestivalCelebrationsAnnualMemoryItemMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataList       []*PalacePlayerShowMsg `protobuf:"bytes,1,rep,name=dataList" json:"dataList,omitempty"`
	Val            *int64                 `protobuf:"varint,2,opt,name=val" json:"val,omitempty"`
	CollectEndTime *int64                 `protobuf:"varint,3,opt,name=collectEndTime" json:"collectEndTime,omitempty"`
	GetHonorTime   *int64                 `protobuf:"varint,4,opt,name=getHonorTime" json:"getHonorTime,omitempty"`
	RosterId       *int32                 `protobuf:"varint,5,opt,name=rosterId" json:"rosterId,omitempty"`
	CompetitionId  *int32                 `protobuf:"varint,6,opt,name=competitionId" json:"competitionId,omitempty"`
	UnionMsg       *UnionBaseData         `protobuf:"bytes,7,opt,name=unionMsg" json:"unionMsg,omitempty"`
}

func (x *FestivalCelebrationsAnnualMemoryItemMsg) Reset() {
	*x = FestivalCelebrationsAnnualMemoryItemMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsAnnualMemoryItemMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsAnnualMemoryItemMsg) ProtoMessage() {}

func (x *FestivalCelebrationsAnnualMemoryItemMsg) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsAnnualMemoryItemMsg.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsAnnualMemoryItemMsg) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{4}
}

func (x *FestivalCelebrationsAnnualMemoryItemMsg) GetDataList() []*PalacePlayerShowMsg {
	if x != nil {
		return x.DataList
	}
	return nil
}

func (x *FestivalCelebrationsAnnualMemoryItemMsg) GetVal() int64 {
	if x != nil && x.Val != nil {
		return *x.Val
	}
	return 0
}

func (x *FestivalCelebrationsAnnualMemoryItemMsg) GetCollectEndTime() int64 {
	if x != nil && x.CollectEndTime != nil {
		return *x.CollectEndTime
	}
	return 0
}

func (x *FestivalCelebrationsAnnualMemoryItemMsg) GetGetHonorTime() int64 {
	if x != nil && x.GetHonorTime != nil {
		return *x.GetHonorTime
	}
	return 0
}

func (x *FestivalCelebrationsAnnualMemoryItemMsg) GetRosterId() int32 {
	if x != nil && x.RosterId != nil {
		return *x.RosterId
	}
	return 0
}

func (x *FestivalCelebrationsAnnualMemoryItemMsg) GetCompetitionId() int32 {
	if x != nil && x.CompetitionId != nil {
		return *x.CompetitionId
	}
	return 0
}

func (x *FestivalCelebrationsAnnualMemoryItemMsg) GetUnionMsg() *UnionBaseData {
	if x != nil {
		return x.UnionMsg
	}
	return nil
}

type FestivalCelebrationsWorshipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
}

func (x *FestivalCelebrationsWorshipReq) Reset() {
	*x = FestivalCelebrationsWorshipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsWorshipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsWorshipReq) ProtoMessage() {}

func (x *FestivalCelebrationsWorshipReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsWorshipReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsWorshipReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{5}
}

func (x *FestivalCelebrationsWorshipReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type FestivalCelebrationsWorshipResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Rewards *string `protobuf:"bytes,2,opt,name=rewards" json:"rewards,omitempty"`
}

func (x *FestivalCelebrationsWorshipResp) Reset() {
	*x = FestivalCelebrationsWorshipResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsWorshipResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsWorshipResp) ProtoMessage() {}

func (x *FestivalCelebrationsWorshipResp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsWorshipResp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsWorshipResp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{6}
}

func (x *FestivalCelebrationsWorshipResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FestivalCelebrationsWorshipResp) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

type FestivalCelebrationsBanquetMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UseItemList    []*FestivalCelebrationsBanquetItemMsg `protobuf:"bytes,1,rep,name=useItemList" json:"useItemList,omitempty"`
	ReceivedIdList []int32                               `protobuf:"varint,2,rep,name=receivedIdList" json:"receivedIdList,omitempty"`
	BindUnionId    *int64                                `protobuf:"varint,3,opt,name=bindUnionId" json:"bindUnionId,omitempty"`
}

func (x *FestivalCelebrationsBanquetMsg) Reset() {
	*x = FestivalCelebrationsBanquetMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsBanquetMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsBanquetMsg) ProtoMessage() {}

func (x *FestivalCelebrationsBanquetMsg) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsBanquetMsg.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsBanquetMsg) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{7}
}

func (x *FestivalCelebrationsBanquetMsg) GetUseItemList() []*FestivalCelebrationsBanquetItemMsg {
	if x != nil {
		return x.UseItemList
	}
	return nil
}

func (x *FestivalCelebrationsBanquetMsg) GetReceivedIdList() []int32 {
	if x != nil {
		return x.ReceivedIdList
	}
	return nil
}

func (x *FestivalCelebrationsBanquetMsg) GetBindUnionId() int64 {
	if x != nil && x.BindUnionId != nil {
		return *x.BindUnionId
	}
	return 0
}

type FestivalCelebrationsBanquetScoreMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerData *PlayerBaseDataMsg `protobuf:"bytes,1,opt,name=playerData" json:"playerData,omitempty"`
	Score      *int32             `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
}

func (x *FestivalCelebrationsBanquetScoreMsg) Reset() {
	*x = FestivalCelebrationsBanquetScoreMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsBanquetScoreMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsBanquetScoreMsg) ProtoMessage() {}

func (x *FestivalCelebrationsBanquetScoreMsg) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsBanquetScoreMsg.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsBanquetScoreMsg) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{8}
}

func (x *FestivalCelebrationsBanquetScoreMsg) GetPlayerData() *PlayerBaseDataMsg {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

func (x *FestivalCelebrationsBanquetScoreMsg) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

type FestivalCelebrationsBanquetItemMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count *int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (x *FestivalCelebrationsBanquetItemMsg) Reset() {
	*x = FestivalCelebrationsBanquetItemMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsBanquetItemMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsBanquetItemMsg) ProtoMessage() {}

func (x *FestivalCelebrationsBanquetItemMsg) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsBanquetItemMsg.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsBanquetItemMsg) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{9}
}

func (x *FestivalCelebrationsBanquetItemMsg) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *FestivalCelebrationsBanquetItemMsg) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type FestivalCelebrationsUseBanquetItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32                              `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	ItemMsg    *FestivalCelebrationsBanquetItemMsg `protobuf:"bytes,2,opt,name=itemMsg" json:"itemMsg,omitempty"`
}

func (x *FestivalCelebrationsUseBanquetItemReq) Reset() {
	*x = FestivalCelebrationsUseBanquetItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsUseBanquetItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsUseBanquetItemReq) ProtoMessage() {}

func (x *FestivalCelebrationsUseBanquetItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsUseBanquetItemReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsUseBanquetItemReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{10}
}

func (x *FestivalCelebrationsUseBanquetItemReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *FestivalCelebrationsUseBanquetItemReq) GetItemMsg() *FestivalCelebrationsBanquetItemMsg {
	if x != nil {
		return x.ItemMsg
	}
	return nil
}

type FestivalCelebrationsUseBanquetItemRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
}

func (x *FestivalCelebrationsUseBanquetItemRsp) Reset() {
	*x = FestivalCelebrationsUseBanquetItemRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsUseBanquetItemRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsUseBanquetItemRsp) ProtoMessage() {}

func (x *FestivalCelebrationsUseBanquetItemRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsUseBanquetItemRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsUseBanquetItemRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{11}
}

func (x *FestivalCelebrationsUseBanquetItemRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type FestivalCelebrationsDrawBanquetRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
}

func (x *FestivalCelebrationsDrawBanquetRewardReq) Reset() {
	*x = FestivalCelebrationsDrawBanquetRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsDrawBanquetRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsDrawBanquetRewardReq) ProtoMessage() {}

func (x *FestivalCelebrationsDrawBanquetRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsDrawBanquetRewardReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsDrawBanquetRewardReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{12}
}

func (x *FestivalCelebrationsDrawBanquetRewardReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type FestivalCelebrationsDrawBanquetRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Rewards *string `protobuf:"bytes,2,opt,name=rewards" json:"rewards,omitempty"`
}

func (x *FestivalCelebrationsDrawBanquetRewardRsp) Reset() {
	*x = FestivalCelebrationsDrawBanquetRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsDrawBanquetRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsDrawBanquetRewardRsp) ProtoMessage() {}

func (x *FestivalCelebrationsDrawBanquetRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsDrawBanquetRewardRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsDrawBanquetRewardRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{13}
}

func (x *FestivalCelebrationsDrawBanquetRewardRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FestivalCelebrationsDrawBanquetRewardRsp) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

type FestivalCelebrationsGetBanquetScoreDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
}

func (x *FestivalCelebrationsGetBanquetScoreDetailReq) Reset() {
	*x = FestivalCelebrationsGetBanquetScoreDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsGetBanquetScoreDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsGetBanquetScoreDetailReq) ProtoMessage() {}

func (x *FestivalCelebrationsGetBanquetScoreDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsGetBanquetScoreDetailReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsGetBanquetScoreDetailReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{14}
}

func (x *FestivalCelebrationsGetBanquetScoreDetailReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type FestivalCelebrationsGetBanquetScoreDetailRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32                                 `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	ScoreMsgList []*FestivalCelebrationsBanquetScoreMsg `protobuf:"bytes,2,rep,name=scoreMsgList" json:"scoreMsgList,omitempty"`
}

func (x *FestivalCelebrationsGetBanquetScoreDetailRsp) Reset() {
	*x = FestivalCelebrationsGetBanquetScoreDetailRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsGetBanquetScoreDetailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsGetBanquetScoreDetailRsp) ProtoMessage() {}

func (x *FestivalCelebrationsGetBanquetScoreDetailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsGetBanquetScoreDetailRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsGetBanquetScoreDetailRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{15}
}

func (x *FestivalCelebrationsGetBanquetScoreDetailRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FestivalCelebrationsGetBanquetScoreDetailRsp) GetScoreMsgList() []*FestivalCelebrationsBanquetScoreMsg {
	if x != nil {
		return x.ScoreMsgList
	}
	return nil
}

type FestivalCelebrationsUseLuckyFateItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
}

func (x *FestivalCelebrationsUseLuckyFateItemReq) Reset() {
	*x = FestivalCelebrationsUseLuckyFateItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsUseLuckyFateItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsUseLuckyFateItemReq) ProtoMessage() {}

func (x *FestivalCelebrationsUseLuckyFateItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsUseLuckyFateItemReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsUseLuckyFateItemReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{16}
}

func (x *FestivalCelebrationsUseLuckyFateItemReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type FestivalCelebrationsUseLuckyFateItemRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   *int32 `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Ratio *int32 `protobuf:"varint,2,opt,name=ratio" json:"ratio,omitempty"`
	Value *int32 `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
}

func (x *FestivalCelebrationsUseLuckyFateItemRsp) Reset() {
	*x = FestivalCelebrationsUseLuckyFateItemRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsUseLuckyFateItemRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsUseLuckyFateItemRsp) ProtoMessage() {}

func (x *FestivalCelebrationsUseLuckyFateItemRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsUseLuckyFateItemRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsUseLuckyFateItemRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{17}
}

func (x *FestivalCelebrationsUseLuckyFateItemRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FestivalCelebrationsUseLuckyFateItemRsp) GetRatio() int32 {
	if x != nil && x.Ratio != nil {
		return *x.Ratio
	}
	return 0
}

func (x *FestivalCelebrationsUseLuckyFateItemRsp) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type FestivalCelebrationsFuYuanGetRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	IsBox      *bool  `protobuf:"varint,2,opt,name=isBox" json:"isBox,omitempty"`
}

func (x *FestivalCelebrationsFuYuanGetRewardReq) Reset() {
	*x = FestivalCelebrationsFuYuanGetRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsFuYuanGetRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsFuYuanGetRewardReq) ProtoMessage() {}

func (x *FestivalCelebrationsFuYuanGetRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsFuYuanGetRewardReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsFuYuanGetRewardReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{18}
}

func (x *FestivalCelebrationsFuYuanGetRewardReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *FestivalCelebrationsFuYuanGetRewardReq) GetIsBox() bool {
	if x != nil && x.IsBox != nil {
		return *x.IsBox
	}
	return false
}

type FestivalCelebrationsFuYuanGetRewardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Reward *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
}

func (x *FestivalCelebrationsFuYuanGetRewardResp) Reset() {
	*x = FestivalCelebrationsFuYuanGetRewardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsFuYuanGetRewardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsFuYuanGetRewardResp) ProtoMessage() {}

func (x *FestivalCelebrationsFuYuanGetRewardResp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsFuYuanGetRewardResp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsFuYuanGetRewardResp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{19}
}

func (x *FestivalCelebrationsFuYuanGetRewardResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FestivalCelebrationsFuYuanGetRewardResp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type FestivalCelebrationsSignMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignInDays     []int32 `protobuf:"varint,1,rep,name=signInDays" json:"signInDays,omitempty"`
	LastSignInTime *int64  `protobuf:"varint,2,opt,name=lastSignInTime" json:"lastSignInTime,omitempty"`
}

func (x *FestivalCelebrationsSignMsg) Reset() {
	*x = FestivalCelebrationsSignMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsSignMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsSignMsg) ProtoMessage() {}

func (x *FestivalCelebrationsSignMsg) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsSignMsg.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsSignMsg) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{20}
}

func (x *FestivalCelebrationsSignMsg) GetSignInDays() []int32 {
	if x != nil {
		return x.SignInDays
	}
	return nil
}

func (x *FestivalCelebrationsSignMsg) GetLastSignInTime() int64 {
	if x != nil && x.LastSignInTime != nil {
		return *x.LastSignInTime
	}
	return 0
}

type FestivalCelebrationsGetSignRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	ConditionId *int32 `protobuf:"varint,2,opt,name=conditionId" json:"conditionId,omitempty"`
	Type        *int32 `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
}

func (x *FestivalCelebrationsGetSignRewardReq) Reset() {
	*x = FestivalCelebrationsGetSignRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsGetSignRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsGetSignRewardReq) ProtoMessage() {}

func (x *FestivalCelebrationsGetSignRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsGetSignRewardReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsGetSignRewardReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{21}
}

func (x *FestivalCelebrationsGetSignRewardReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *FestivalCelebrationsGetSignRewardReq) GetConditionId() int32 {
	if x != nil && x.ConditionId != nil {
		return *x.ConditionId
	}
	return 0
}

func (x *FestivalCelebrationsGetSignRewardReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type FestivalCelebrationsGetSignRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Rewards *string `protobuf:"bytes,2,opt,name=rewards" json:"rewards,omitempty"`
}

func (x *FestivalCelebrationsGetSignRewardRsp) Reset() {
	*x = FestivalCelebrationsGetSignRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsGetSignRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsGetSignRewardRsp) ProtoMessage() {}

func (x *FestivalCelebrationsGetSignRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsGetSignRewardRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsGetSignRewardRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{22}
}

func (x *FestivalCelebrationsGetSignRewardRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FestivalCelebrationsGetSignRewardRsp) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

type FestivalCelebrationsCollectMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectedList  []int32                               `protobuf:"varint,1,rep,name=collectedList" json:"collectedList,omitempty"`
	IsSynthesis    *bool                                 `protobuf:"varint,2,opt,name=isSynthesis" json:"isSynthesis,omitempty"`
	LotteryResults *int32                                `protobuf:"varint,3,opt,name=lotteryResults" json:"lotteryResults,omitempty"`
	GiveMsg        []*FestivalCelebrationsCollectGiveMsg `protobuf:"bytes,4,rep,name=giveMsg" json:"giveMsg,omitempty"`
	LastAskForTime *int64                                `protobuf:"varint,5,opt,name=lastAskForTime" json:"lastAskForTime,omitempty"`
}

func (x *FestivalCelebrationsCollectMsg) Reset() {
	*x = FestivalCelebrationsCollectMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectMsg) ProtoMessage() {}

func (x *FestivalCelebrationsCollectMsg) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectMsg.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectMsg) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{23}
}

func (x *FestivalCelebrationsCollectMsg) GetCollectedList() []int32 {
	if x != nil {
		return x.CollectedList
	}
	return nil
}

func (x *FestivalCelebrationsCollectMsg) GetIsSynthesis() bool {
	if x != nil && x.IsSynthesis != nil {
		return *x.IsSynthesis
	}
	return false
}

func (x *FestivalCelebrationsCollectMsg) GetLotteryResults() int32 {
	if x != nil && x.LotteryResults != nil {
		return *x.LotteryResults
	}
	return 0
}

func (x *FestivalCelebrationsCollectMsg) GetGiveMsg() []*FestivalCelebrationsCollectGiveMsg {
	if x != nil {
		return x.GiveMsg
	}
	return nil
}

func (x *FestivalCelebrationsCollectMsg) GetLastAskForTime() int64 {
	if x != nil && x.LastAskForTime != nil {
		return *x.LastAskForTime
	}
	return 0
}

type FestivalCelebrationsCollectGiveMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeadInfo   *PlayerShowInfoMsg `protobuf:"bytes,1,opt,name=headInfo" json:"headInfo,omitempty"`
	GiveItemId *int32             `protobuf:"varint,2,opt,name=giveItemId" json:"giveItemId,omitempty"`
	IsReceived *bool              `protobuf:"varint,3,opt,name=isReceived" json:"isReceived,omitempty"`
	Index      *string            `protobuf:"bytes,4,opt,name=index" json:"index,omitempty"`
	UnionName  *string            `protobuf:"bytes,5,opt,name=unionName" json:"unionName,omitempty"`
}

func (x *FestivalCelebrationsCollectGiveMsg) Reset() {
	*x = FestivalCelebrationsCollectGiveMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectGiveMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectGiveMsg) ProtoMessage() {}

func (x *FestivalCelebrationsCollectGiveMsg) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectGiveMsg.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectGiveMsg) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{24}
}

func (x *FestivalCelebrationsCollectGiveMsg) GetHeadInfo() *PlayerShowInfoMsg {
	if x != nil {
		return x.HeadInfo
	}
	return nil
}

func (x *FestivalCelebrationsCollectGiveMsg) GetGiveItemId() int32 {
	if x != nil && x.GiveItemId != nil {
		return *x.GiveItemId
	}
	return 0
}

func (x *FestivalCelebrationsCollectGiveMsg) GetIsReceived() bool {
	if x != nil && x.IsReceived != nil {
		return *x.IsReceived
	}
	return false
}

func (x *FestivalCelebrationsCollectGiveMsg) GetIndex() string {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return ""
}

func (x *FestivalCelebrationsCollectGiveMsg) GetUnionName() string {
	if x != nil && x.UnionName != nil {
		return *x.UnionName
	}
	return ""
}

type FestivalCelebrationsCollectSynthesisReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
}

func (x *FestivalCelebrationsCollectSynthesisReq) Reset() {
	*x = FestivalCelebrationsCollectSynthesisReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectSynthesisReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectSynthesisReq) ProtoMessage() {}

func (x *FestivalCelebrationsCollectSynthesisReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectSynthesisReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectSynthesisReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{25}
}

func (x *FestivalCelebrationsCollectSynthesisReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type FestivalCelebrationsCollectSynthesisRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
}

func (x *FestivalCelebrationsCollectSynthesisRsp) Reset() {
	*x = FestivalCelebrationsCollectSynthesisRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectSynthesisRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectSynthesisRsp) ProtoMessage() {}

func (x *FestivalCelebrationsCollectSynthesisRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectSynthesisRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectSynthesisRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{26}
}

func (x *FestivalCelebrationsCollectSynthesisRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type FestivalCelebrationsCollectFillReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	ItemId     *int32 `protobuf:"varint,2,opt,name=itemId" json:"itemId,omitempty"`
}

func (x *FestivalCelebrationsCollectFillReq) Reset() {
	*x = FestivalCelebrationsCollectFillReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectFillReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectFillReq) ProtoMessage() {}

func (x *FestivalCelebrationsCollectFillReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectFillReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectFillReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{27}
}

func (x *FestivalCelebrationsCollectFillReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *FestivalCelebrationsCollectFillReq) GetItemId() int32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

type FestivalCelebrationsCollectFillRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
}

func (x *FestivalCelebrationsCollectFillRsp) Reset() {
	*x = FestivalCelebrationsCollectFillRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectFillRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectFillRsp) ProtoMessage() {}

func (x *FestivalCelebrationsCollectFillRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectFillRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectFillRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{28}
}

func (x *FestivalCelebrationsCollectFillRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type FestivalCelebrationsCollectDrawBigRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
}

func (x *FestivalCelebrationsCollectDrawBigRewardReq) Reset() {
	*x = FestivalCelebrationsCollectDrawBigRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectDrawBigRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectDrawBigRewardReq) ProtoMessage() {}

func (x *FestivalCelebrationsCollectDrawBigRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectDrawBigRewardReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectDrawBigRewardReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{29}
}

func (x *FestivalCelebrationsCollectDrawBigRewardReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type FestivalCelebrationsCollectDrawBigRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Reward *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
}

func (x *FestivalCelebrationsCollectDrawBigRewardRsp) Reset() {
	*x = FestivalCelebrationsCollectDrawBigRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectDrawBigRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectDrawBigRewardRsp) ProtoMessage() {}

func (x *FestivalCelebrationsCollectDrawBigRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectDrawBigRewardRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectDrawBigRewardRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{30}
}

func (x *FestivalCelebrationsCollectDrawBigRewardRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FestivalCelebrationsCollectDrawBigRewardRsp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type FestivalCelebrationsCollectGetClaimListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	RewardId   *int32 `protobuf:"varint,2,opt,name=rewardId" json:"rewardId,omitempty"`
}

func (x *FestivalCelebrationsCollectGetClaimListReq) Reset() {
	*x = FestivalCelebrationsCollectGetClaimListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectGetClaimListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectGetClaimListReq) ProtoMessage() {}

func (x *FestivalCelebrationsCollectGetClaimListReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectGetClaimListReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectGetClaimListReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{31}
}

func (x *FestivalCelebrationsCollectGetClaimListReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *FestivalCelebrationsCollectGetClaimListReq) GetRewardId() int32 {
	if x != nil && x.RewardId != nil {
		return *x.RewardId
	}
	return 0
}

type FestivalCelebrationsCollectGetClaimListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32               `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	HeadInfo []*PlayerShowInfoMsg `protobuf:"bytes,2,rep,name=headInfo" json:"headInfo,omitempty"`
}

func (x *FestivalCelebrationsCollectGetClaimListRsp) Reset() {
	*x = FestivalCelebrationsCollectGetClaimListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectGetClaimListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectGetClaimListRsp) ProtoMessage() {}

func (x *FestivalCelebrationsCollectGetClaimListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectGetClaimListRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectGetClaimListRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{32}
}

func (x *FestivalCelebrationsCollectGetClaimListRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FestivalCelebrationsCollectGetClaimListRsp) GetHeadInfo() []*PlayerShowInfoMsg {
	if x != nil {
		return x.HeadInfo
	}
	return nil
}

type FestivalCelebrationsCollectSearchPlayerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32  `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	Param      *string `protobuf:"bytes,2,opt,name=param" json:"param,omitempty"`
	ServerId   *int64  `protobuf:"varint,3,opt,name=serverId" json:"serverId,omitempty"`
}

func (x *FestivalCelebrationsCollectSearchPlayerReq) Reset() {
	*x = FestivalCelebrationsCollectSearchPlayerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectSearchPlayerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectSearchPlayerReq) ProtoMessage() {}

func (x *FestivalCelebrationsCollectSearchPlayerReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectSearchPlayerReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectSearchPlayerReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{33}
}

func (x *FestivalCelebrationsCollectSearchPlayerReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *FestivalCelebrationsCollectSearchPlayerReq) GetParam() string {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return ""
}

func (x *FestivalCelebrationsCollectSearchPlayerReq) GetServerId() int64 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

type FestivalCelebrationsCollectSearchPlayerRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       *int32             `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	HeadInfo  *PlayerShowInfoMsg `protobuf:"bytes,2,opt,name=headInfo" json:"headInfo,omitempty"`
	UnionName *string            `protobuf:"bytes,3,opt,name=unionName" json:"unionName,omitempty"`
}

func (x *FestivalCelebrationsCollectSearchPlayerRsp) Reset() {
	*x = FestivalCelebrationsCollectSearchPlayerRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectSearchPlayerRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectSearchPlayerRsp) ProtoMessage() {}

func (x *FestivalCelebrationsCollectSearchPlayerRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectSearchPlayerRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectSearchPlayerRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{34}
}

func (x *FestivalCelebrationsCollectSearchPlayerRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FestivalCelebrationsCollectSearchPlayerRsp) GetHeadInfo() *PlayerShowInfoMsg {
	if x != nil {
		return x.HeadInfo
	}
	return nil
}

func (x *FestivalCelebrationsCollectSearchPlayerRsp) GetUnionName() string {
	if x != nil && x.UnionName != nil {
		return *x.UnionName
	}
	return ""
}

type FestivalCelebrationsCollectGiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32  `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	PlayerId   *int64  `protobuf:"varint,2,opt,name=playerId" json:"playerId,omitempty"`
	ItemId     *int32  `protobuf:"varint,3,opt,name=itemId" json:"itemId,omitempty"`
	ReqUid     *string `protobuf:"bytes,4,opt,name=reqUid" json:"reqUid,omitempty"`
}

func (x *FestivalCelebrationsCollectGiveReq) Reset() {
	*x = FestivalCelebrationsCollectGiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectGiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectGiveReq) ProtoMessage() {}

func (x *FestivalCelebrationsCollectGiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectGiveReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectGiveReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{35}
}

func (x *FestivalCelebrationsCollectGiveReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *FestivalCelebrationsCollectGiveReq) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *FestivalCelebrationsCollectGiveReq) GetItemId() int32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *FestivalCelebrationsCollectGiveReq) GetReqUid() string {
	if x != nil && x.ReqUid != nil {
		return *x.ReqUid
	}
	return ""
}

type FestivalCelebrationsCollectGiveRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
}

func (x *FestivalCelebrationsCollectGiveRsp) Reset() {
	*x = FestivalCelebrationsCollectGiveRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectGiveRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectGiveRsp) ProtoMessage() {}

func (x *FestivalCelebrationsCollectGiveRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectGiveRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectGiveRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{36}
}

func (x *FestivalCelebrationsCollectGiveRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type FestivalCelebrationsCollectAskForReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	Type       *int32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	ItemId     *int32 `protobuf:"varint,3,opt,name=itemId" json:"itemId,omitempty"`
}

func (x *FestivalCelebrationsCollectAskForReq) Reset() {
	*x = FestivalCelebrationsCollectAskForReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectAskForReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectAskForReq) ProtoMessage() {}

func (x *FestivalCelebrationsCollectAskForReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectAskForReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectAskForReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{37}
}

func (x *FestivalCelebrationsCollectAskForReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *FestivalCelebrationsCollectAskForReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *FestivalCelebrationsCollectAskForReq) GetItemId() int32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

type FestivalCelebrationsCollectAskForRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
}

func (x *FestivalCelebrationsCollectAskForRsp) Reset() {
	*x = FestivalCelebrationsCollectAskForRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectAskForRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectAskForRsp) ProtoMessage() {}

func (x *FestivalCelebrationsCollectAskForRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectAskForRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectAskForRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{38}
}

func (x *FestivalCelebrationsCollectAskForRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type FestivalCelebrationsCollectGetGivenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32  `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	ReqUid     *string `protobuf:"bytes,2,opt,name=reqUid" json:"reqUid,omitempty"`
}

func (x *FestivalCelebrationsCollectGetGivenReq) Reset() {
	*x = FestivalCelebrationsCollectGetGivenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectGetGivenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectGetGivenReq) ProtoMessage() {}

func (x *FestivalCelebrationsCollectGetGivenReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectGetGivenReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectGetGivenReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{39}
}

func (x *FestivalCelebrationsCollectGetGivenReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *FestivalCelebrationsCollectGetGivenReq) GetReqUid() string {
	if x != nil && x.ReqUid != nil {
		return *x.ReqUid
	}
	return ""
}

type FestivalCelebrationsCollectGetGivenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Reward *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
}

func (x *FestivalCelebrationsCollectGetGivenResp) Reset() {
	*x = FestivalCelebrationsCollectGetGivenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectGetGivenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectGetGivenResp) ProtoMessage() {}

func (x *FestivalCelebrationsCollectGetGivenResp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectGetGivenResp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectGetGivenResp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{40}
}

func (x *FestivalCelebrationsCollectGetGivenResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FestivalCelebrationsCollectGetGivenResp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type FestivalCelebrationsEasterEggMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FindEasterEggIdList []int32 `protobuf:"varint,1,rep,name=findEasterEggIdList" json:"findEasterEggIdList,omitempty"`
}

func (x *FestivalCelebrationsEasterEggMsg) Reset() {
	*x = FestivalCelebrationsEasterEggMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsEasterEggMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsEasterEggMsg) ProtoMessage() {}

func (x *FestivalCelebrationsEasterEggMsg) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsEasterEggMsg.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsEasterEggMsg) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{41}
}

func (x *FestivalCelebrationsEasterEggMsg) GetFindEasterEggIdList() []int32 {
	if x != nil {
		return x.FindEasterEggIdList
	}
	return nil
}

type FestivalCelebrationsEasterEggGetRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId  *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	EasterEggId *int32 `protobuf:"varint,2,opt,name=easterEggId" json:"easterEggId,omitempty"`
}

func (x *FestivalCelebrationsEasterEggGetRewardReq) Reset() {
	*x = FestivalCelebrationsEasterEggGetRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsEasterEggGetRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsEasterEggGetRewardReq) ProtoMessage() {}

func (x *FestivalCelebrationsEasterEggGetRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsEasterEggGetRewardReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsEasterEggGetRewardReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{42}
}

func (x *FestivalCelebrationsEasterEggGetRewardReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *FestivalCelebrationsEasterEggGetRewardReq) GetEasterEggId() int32 {
	if x != nil && x.EasterEggId != nil {
		return *x.EasterEggId
	}
	return 0
}

type FestivalCelebrationsEasterEggGetRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Reward *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
}

func (x *FestivalCelebrationsEasterEggGetRewardRsp) Reset() {
	*x = FestivalCelebrationsEasterEggGetRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsEasterEggGetRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsEasterEggGetRewardRsp) ProtoMessage() {}

func (x *FestivalCelebrationsEasterEggGetRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsEasterEggGetRewardRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsEasterEggGetRewardRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{43}
}

func (x *FestivalCelebrationsEasterEggGetRewardRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FestivalCelebrationsEasterEggGetRewardRsp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type FestivalCelebrationsGetBindUnionMemberDataListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
}

func (x *FestivalCelebrationsGetBindUnionMemberDataListReq) Reset() {
	*x = FestivalCelebrationsGetBindUnionMemberDataListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsGetBindUnionMemberDataListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsGetBindUnionMemberDataListReq) ProtoMessage() {}

func (x *FestivalCelebrationsGetBindUnionMemberDataListReq) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsGetBindUnionMemberDataListReq.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsGetBindUnionMemberDataListReq) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{44}
}

func (x *FestivalCelebrationsGetBindUnionMemberDataListReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type FestivalCelebrationsGetBindUnionMemberDataListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32             `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	MemberList []*UnionMemberData `protobuf:"bytes,2,rep,name=memberList" json:"memberList,omitempty"`
}

func (x *FestivalCelebrationsGetBindUnionMemberDataListRsp) Reset() {
	*x = FestivalCelebrationsGetBindUnionMemberDataListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsGetBindUnionMemberDataListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsGetBindUnionMemberDataListRsp) ProtoMessage() {}

func (x *FestivalCelebrationsGetBindUnionMemberDataListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsGetBindUnionMemberDataListRsp.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsGetBindUnionMemberDataListRsp) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{45}
}

func (x *FestivalCelebrationsGetBindUnionMemberDataListRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FestivalCelebrationsGetBindUnionMemberDataListRsp) GetMemberList() []*UnionMemberData {
	if x != nil {
		return x.MemberList
	}
	return nil
}

type FestivalCelebrationsConfigSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BanquetConfigList        []*FestivalCelebrationsBanquetConfig        `protobuf:"bytes,1,rep,name=banquetConfigList" json:"banquetConfigList,omitempty"`
	CollectBigDrawConfigList []*FestivalCelebrationsCollectBigDrawConfig `protobuf:"bytes,2,rep,name=collectBigDrawConfigList" json:"collectBigDrawConfigList,omitempty"`
	EasterEggConfigList      []*FestivalCelebrationsEasterEggConfig      `protobuf:"bytes,3,rep,name=easterEggConfigList" json:"easterEggConfigList,omitempty"`
}

func (x *FestivalCelebrationsConfigSync) Reset() {
	*x = FestivalCelebrationsConfigSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsConfigSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsConfigSync) ProtoMessage() {}

func (x *FestivalCelebrationsConfigSync) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsConfigSync.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsConfigSync) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{46}
}

func (x *FestivalCelebrationsConfigSync) GetBanquetConfigList() []*FestivalCelebrationsBanquetConfig {
	if x != nil {
		return x.BanquetConfigList
	}
	return nil
}

func (x *FestivalCelebrationsConfigSync) GetCollectBigDrawConfigList() []*FestivalCelebrationsCollectBigDrawConfig {
	if x != nil {
		return x.CollectBigDrawConfigList
	}
	return nil
}

func (x *FestivalCelebrationsConfigSync) GetEasterEggConfigList() []*FestivalCelebrationsEasterEggConfig {
	if x != nil {
		return x.EasterEggConfigList
	}
	return nil
}

type FestivalCelebrationsBanquetConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Level     *int32  `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Type      *int32  `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	BanquetID *int32  `protobuf:"varint,4,opt,name=banquetID" json:"banquetID,omitempty"`
	Item      *string `protobuf:"bytes,5,opt,name=item" json:"item,omitempty"`
	Broadcast *int32  `protobuf:"varint,6,opt,name=broadcast" json:"broadcast,omitempty"`
	Reward    *string `protobuf:"bytes,7,opt,name=reward" json:"reward,omitempty"`
}

func (x *FestivalCelebrationsBanquetConfig) Reset() {
	*x = FestivalCelebrationsBanquetConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsBanquetConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsBanquetConfig) ProtoMessage() {}

func (x *FestivalCelebrationsBanquetConfig) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsBanquetConfig.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsBanquetConfig) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{47}
}

func (x *FestivalCelebrationsBanquetConfig) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *FestivalCelebrationsBanquetConfig) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *FestivalCelebrationsBanquetConfig) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *FestivalCelebrationsBanquetConfig) GetBanquetID() int32 {
	if x != nil && x.BanquetID != nil {
		return *x.BanquetID
	}
	return 0
}

func (x *FestivalCelebrationsBanquetConfig) GetItem() string {
	if x != nil && x.Item != nil {
		return *x.Item
	}
	return ""
}

func (x *FestivalCelebrationsBanquetConfig) GetBroadcast() int32 {
	if x != nil && x.Broadcast != nil {
		return *x.Broadcast
	}
	return 0
}

func (x *FestivalCelebrationsBanquetConfig) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type FestivalCelebrationsCollectBigDrawConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Weight  *int32  `protobuf:"varint,2,opt,name=weight" json:"weight,omitempty"`
	Limit   *int32  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Reward  *string `protobuf:"bytes,4,opt,name=reward" json:"reward,omitempty"`
	Big     *int32  `protobuf:"varint,5,opt,name=big" json:"big,omitempty"`
	Protect *int32  `protobuf:"varint,6,opt,name=protect" json:"protect,omitempty"`
}

func (x *FestivalCelebrationsCollectBigDrawConfig) Reset() {
	*x = FestivalCelebrationsCollectBigDrawConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsCollectBigDrawConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsCollectBigDrawConfig) ProtoMessage() {}

func (x *FestivalCelebrationsCollectBigDrawConfig) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsCollectBigDrawConfig.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsCollectBigDrawConfig) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{48}
}

func (x *FestivalCelebrationsCollectBigDrawConfig) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *FestivalCelebrationsCollectBigDrawConfig) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *FestivalCelebrationsCollectBigDrawConfig) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *FestivalCelebrationsCollectBigDrawConfig) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *FestivalCelebrationsCollectBigDrawConfig) GetBig() int32 {
	if x != nil && x.Big != nil {
		return *x.Big
	}
	return 0
}

func (x *FestivalCelebrationsCollectBigDrawConfig) GetProtect() int32 {
	if x != nil && x.Protect != nil {
		return *x.Protect
	}
	return 0
}

type FestivalCelebrationsEasterEggConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Day *int32 `protobuf:"varint,2,opt,name=day" json:"day,omitempty"`
}

func (x *FestivalCelebrationsEasterEggConfig) Reset() {
	*x = FestivalCelebrationsEasterEggConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FestivalCelebrations_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FestivalCelebrationsEasterEggConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FestivalCelebrationsEasterEggConfig) ProtoMessage() {}

func (x *FestivalCelebrationsEasterEggConfig) ProtoReflect() protoreflect.Message {
	mi := &file_FestivalCelebrations_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FestivalCelebrationsEasterEggConfig.ProtoReflect.Descriptor instead.
func (*FestivalCelebrationsEasterEggConfig) Descriptor() ([]byte, []int) {
	return file_FestivalCelebrations_proto_rawDescGZIP(), []int{49}
}

func (x *FestivalCelebrationsEasterEggConfig) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *FestivalCelebrationsEasterEggConfig) GetDay() int32 {
	if x != nil && x.Day != nil {
		return *x.Day
	}
	return 0
}

var File_FestivalCelebrations_proto protoreflect.FileDescriptor

var file_FestivalCelebrations_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x03, 0x0a,
	0x21, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x73, 0x67, 0x12, 0x52, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x46, 0x65, 0x73, 0x74,
	0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x71,
	0x75, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x49, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x46, 0x65, 0x73,
	0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x4d, 0x73,
	0x67, 0x12, 0x52, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x73, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x46, 0x65, 0x73, 0x74, 0x69,
	0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x58, 0x0a, 0x0c, 0x65, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45,
	0x67, 0x67, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x67, 0x67, 0x4d, 0x73,
	0x67, 0x52, 0x0c, 0x65, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x67, 0x67, 0x4d, 0x73, 0x67, 0x12,
	0x61, 0x0a, 0x0f, 0x61, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d,
	0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x46, 0x65,
	0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x73,
	0x67, 0x52, 0x0f, 0x61, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d,
	0x73, 0x67, 0x22, 0x49, 0x0a, 0x23, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65,
	0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x77, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x64, 0x0a,
	0x26, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x26, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c,
	0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x65, 0x74, 0x41,
	0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x6d, 0x0a, 0x13, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x13, 0x41, 0x6e, 0x6e, 0x75,
	0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x22,
	0xcd, 0x02, 0x0a, 0x27, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65,
	0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x43, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x50, 0x61, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x68, 0x6f, 0x77, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x76,
	0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x65,
	0x74, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x67, 0x65, 0x74, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f,
	0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x3d, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x22,
	0x40, 0x0a, 0x1e, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x22, 0x4d, 0x0a, 0x1f, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c,
	0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x22, 0xc4, 0x01, 0x0a, 0x1e, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c,
	0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x12, 0x58, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x46, 0x65,
	0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x69, 0x6e, 0x64,
	0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x23, 0x46, 0x65, 0x73, 0x74,
	0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x73, 0x67, 0x12,
	0x45, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x4a, 0x0a, 0x22,
	0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4d,
	0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x25, 0x46, 0x65, 0x73,
	0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x55, 0x73, 0x65, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x50, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61,
	0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x61, 0x6e,
	0x71, 0x75, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x4d, 0x73, 0x67, 0x22, 0x39, 0x0a, 0x25, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c,
	0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x42,
	0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22,
	0x4a, 0x0a, 0x28, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x72, 0x61, 0x77, 0x42, 0x61, 0x6e, 0x71, 0x75,
	0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x28, 0x46,
	0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x72, 0x61, 0x77, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x2c, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43,
	0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x6e, 0x71, 0x75, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x2c, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c,
	0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x5b, 0x0a, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4d,
	0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x0c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x73, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x27, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43,
	0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x4c, 0x75,
	0x63, 0x6b, 0x79, 0x46, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x67,
	0x0a, 0x27, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x46, 0x61,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5e, 0x0a, 0x26, 0x46, 0x65, 0x73, 0x74, 0x69,
	0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46,
	0x75, 0x59, 0x75, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x42, 0x6f, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x69, 0x73, 0x42, 0x6f, 0x78, 0x22, 0x53, 0x0a, 0x27, 0x46, 0x65, 0x73, 0x74, 0x69,
	0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46,
	0x75, 0x59, 0x75, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x65, 0x0a, 0x1b,
	0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6c,
	0x61, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x7c, 0x0a, 0x24, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43,
	0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x52, 0x0a, 0x24, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c,
	0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x8a, 0x02, 0x0a, 0x1e, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76,
	0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x73, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x50, 0x0a, 0x07, 0x67, 0x69, 0x76, 0x65,
	0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x46,
	0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x47, 0x69, 0x76, 0x65, 0x4d, 0x73,
	0x67, 0x52, 0x07, 0x67, 0x69, 0x76, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x41, 0x73, 0x6b, 0x46, 0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x73, 0x6b, 0x46, 0x6f, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x22, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43,
	0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x47, 0x69, 0x76, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x41, 0x0a, 0x08, 0x68, 0x65, 0x61,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x73, 0x67, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a,
	0x67, 0x69, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x49, 0x0a, 0x27, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65,
	0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x53,
	0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x27, 0x46,
	0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x5c, 0x0a, 0x22, 0x46, 0x65, 0x73, 0x74,
	0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x22, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76,
	0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x4d,
	0x0a, 0x2b, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x72, 0x61,
	0x77, 0x42, 0x69, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x57, 0x0a,
	0x2b, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x72, 0x61, 0x77,
	0x42, 0x69, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x68, 0x0a, 0x2a, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76,
	0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x22, 0x81, 0x01, 0x0a, 0x2a, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c,
	0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x41, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7e, 0x0a, 0x2a, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c,
	0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x2a, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61,
	0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x41, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x08,
	0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x22, 0x46, 0x65, 0x73, 0x74, 0x69,
	0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x47, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x71, 0x55, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x22, 0x46, 0x65, 0x73,
	0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x47, 0x69, 0x76, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x22, 0x72, 0x0a, 0x24, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c,
	0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x41, 0x73, 0x6b, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x24, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61,
	0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x41, 0x73, 0x6b, 0x46, 0x6f, 0x72, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22,
	0x60, 0x0a, 0x26, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x47, 0x65,
	0x74, 0x47, 0x69, 0x76, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x71,
	0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x71, 0x55, 0x69,
	0x64, 0x22, 0x53, 0x0a, 0x27, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c,
	0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x47, 0x65, 0x74, 0x47, 0x69, 0x76, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x54, 0x0a, 0x20, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76,
	0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x45, 0x67, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x69,
	0x6e, 0x64, 0x45, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x67, 0x67, 0x49, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x13, 0x66, 0x69, 0x6e, 0x64, 0x45, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x67, 0x67, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x29,
	0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x67, 0x67, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x67, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x65, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x67, 0x67, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x29, 0x46,
	0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x67, 0x67, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x22, 0x53, 0x0a, 0x31, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65,
	0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6e,
	0x64, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x31, 0x46, 0x65, 0x73, 0x74,
	0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x47, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12,
	0x43, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0xea, 0x02, 0x0a, 0x1e, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61,
	0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x63, 0x0a, 0x11, 0x62, 0x61, 0x6e, 0x71, 0x75,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c,
	0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x61, 0x6e, 0x71,
	0x75, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x62, 0x61, 0x6e, 0x71, 0x75,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x78, 0x0a, 0x18,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x69, 0x67, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65,
	0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42,
	0x69, 0x67, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x18, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x69, 0x67, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x13, 0x65, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x45, 0x67, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61,
	0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x67, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x65, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x45, 0x67, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xc5, 0x01, 0x0a, 0x21, 0x46, 0x65, 0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65,
	0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x28, 0x46, 0x65,
	0x73, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x69, 0x67, 0x44, 0x72, 0x61, 0x77,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x62, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x62, 0x69, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x22, 0x47, 0x0a, 0x23, 0x46, 0x65, 0x73, 0x74,
	0x69, 0x76, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x67, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61,
	0x79, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x69, 0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d, 0x67,
	0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_FestivalCelebrations_proto_rawDescOnce sync.Once
	file_FestivalCelebrations_proto_rawDescData = file_FestivalCelebrations_proto_rawDesc
)

func file_FestivalCelebrations_proto_rawDescGZIP() []byte {
	file_FestivalCelebrations_proto_rawDescOnce.Do(func() {
		file_FestivalCelebrations_proto_rawDescData = protoimpl.X.CompressGZIP(file_FestivalCelebrations_proto_rawDescData)
	})
	return file_FestivalCelebrations_proto_rawDescData
}

var file_FestivalCelebrations_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_FestivalCelebrations_proto_goTypes = []any{
	(*FestivalCelebrationsPlayerInfoMsg)(nil),                 // 0: com.yq.msg.CityMsg.FestivalCelebrationsPlayerInfoMsg
	(*FestivalCelebrationsAnnualMemoryMsg)(nil),               // 1: com.yq.msg.CityMsg.FestivalCelebrationsAnnualMemoryMsg
	(*FestivalCelebrationsGetAnnualMemoryReq)(nil),            // 2: com.yq.msg.CityMsg.FestivalCelebrationsGetAnnualMemoryReq
	(*FestivalCelebrationsGetAnnualMemoryRsp)(nil),            // 3: com.yq.msg.CityMsg.FestivalCelebrationsGetAnnualMemoryRsp
	(*FestivalCelebrationsAnnualMemoryItemMsg)(nil),           // 4: com.yq.msg.CityMsg.FestivalCelebrationsAnnualMemoryItemMsg
	(*FestivalCelebrationsWorshipReq)(nil),                    // 5: com.yq.msg.CityMsg.FestivalCelebrationsWorshipReq
	(*FestivalCelebrationsWorshipResp)(nil),                   // 6: com.yq.msg.CityMsg.FestivalCelebrationsWorshipResp
	(*FestivalCelebrationsBanquetMsg)(nil),                    // 7: com.yq.msg.CityMsg.FestivalCelebrationsBanquetMsg
	(*FestivalCelebrationsBanquetScoreMsg)(nil),               // 8: com.yq.msg.CityMsg.FestivalCelebrationsBanquetScoreMsg
	(*FestivalCelebrationsBanquetItemMsg)(nil),                // 9: com.yq.msg.CityMsg.FestivalCelebrationsBanquetItemMsg
	(*FestivalCelebrationsUseBanquetItemReq)(nil),             // 10: com.yq.msg.CityMsg.FestivalCelebrationsUseBanquetItemReq
	(*FestivalCelebrationsUseBanquetItemRsp)(nil),             // 11: com.yq.msg.CityMsg.FestivalCelebrationsUseBanquetItemRsp
	(*FestivalCelebrationsDrawBanquetRewardReq)(nil),          // 12: com.yq.msg.CityMsg.FestivalCelebrationsDrawBanquetRewardReq
	(*FestivalCelebrationsDrawBanquetRewardRsp)(nil),          // 13: com.yq.msg.CityMsg.FestivalCelebrationsDrawBanquetRewardRsp
	(*FestivalCelebrationsGetBanquetScoreDetailReq)(nil),      // 14: com.yq.msg.CityMsg.FestivalCelebrationsGetBanquetScoreDetailReq
	(*FestivalCelebrationsGetBanquetScoreDetailRsp)(nil),      // 15: com.yq.msg.CityMsg.FestivalCelebrationsGetBanquetScoreDetailRsp
	(*FestivalCelebrationsUseLuckyFateItemReq)(nil),           // 16: com.yq.msg.CityMsg.FestivalCelebrationsUseLuckyFateItemReq
	(*FestivalCelebrationsUseLuckyFateItemRsp)(nil),           // 17: com.yq.msg.CityMsg.FestivalCelebrationsUseLuckyFateItemRsp
	(*FestivalCelebrationsFuYuanGetRewardReq)(nil),            // 18: com.yq.msg.CityMsg.FestivalCelebrationsFuYuanGetRewardReq
	(*FestivalCelebrationsFuYuanGetRewardResp)(nil),           // 19: com.yq.msg.CityMsg.FestivalCelebrationsFuYuanGetRewardResp
	(*FestivalCelebrationsSignMsg)(nil),                       // 20: com.yq.msg.CityMsg.FestivalCelebrationsSignMsg
	(*FestivalCelebrationsGetSignRewardReq)(nil),              // 21: com.yq.msg.CityMsg.FestivalCelebrationsGetSignRewardReq
	(*FestivalCelebrationsGetSignRewardRsp)(nil),              // 22: com.yq.msg.CityMsg.FestivalCelebrationsGetSignRewardRsp
	(*FestivalCelebrationsCollectMsg)(nil),                    // 23: com.yq.msg.CityMsg.FestivalCelebrationsCollectMsg
	(*FestivalCelebrationsCollectGiveMsg)(nil),                // 24: com.yq.msg.CityMsg.FestivalCelebrationsCollectGiveMsg
	(*FestivalCelebrationsCollectSynthesisReq)(nil),           // 25: com.yq.msg.CityMsg.FestivalCelebrationsCollectSynthesisReq
	(*FestivalCelebrationsCollectSynthesisRsp)(nil),           // 26: com.yq.msg.CityMsg.FestivalCelebrationsCollectSynthesisRsp
	(*FestivalCelebrationsCollectFillReq)(nil),                // 27: com.yq.msg.CityMsg.FestivalCelebrationsCollectFillReq
	(*FestivalCelebrationsCollectFillRsp)(nil),                // 28: com.yq.msg.CityMsg.FestivalCelebrationsCollectFillRsp
	(*FestivalCelebrationsCollectDrawBigRewardReq)(nil),       // 29: com.yq.msg.CityMsg.FestivalCelebrationsCollectDrawBigRewardReq
	(*FestivalCelebrationsCollectDrawBigRewardRsp)(nil),       // 30: com.yq.msg.CityMsg.FestivalCelebrationsCollectDrawBigRewardRsp
	(*FestivalCelebrationsCollectGetClaimListReq)(nil),        // 31: com.yq.msg.CityMsg.FestivalCelebrationsCollectGetClaimListReq
	(*FestivalCelebrationsCollectGetClaimListRsp)(nil),        // 32: com.yq.msg.CityMsg.FestivalCelebrationsCollectGetClaimListRsp
	(*FestivalCelebrationsCollectSearchPlayerReq)(nil),        // 33: com.yq.msg.CityMsg.FestivalCelebrationsCollectSearchPlayerReq
	(*FestivalCelebrationsCollectSearchPlayerRsp)(nil),        // 34: com.yq.msg.CityMsg.FestivalCelebrationsCollectSearchPlayerRsp
	(*FestivalCelebrationsCollectGiveReq)(nil),                // 35: com.yq.msg.CityMsg.FestivalCelebrationsCollectGiveReq
	(*FestivalCelebrationsCollectGiveRsp)(nil),                // 36: com.yq.msg.CityMsg.FestivalCelebrationsCollectGiveRsp
	(*FestivalCelebrationsCollectAskForReq)(nil),              // 37: com.yq.msg.CityMsg.FestivalCelebrationsCollectAskForReq
	(*FestivalCelebrationsCollectAskForRsp)(nil),              // 38: com.yq.msg.CityMsg.FestivalCelebrationsCollectAskForRsp
	(*FestivalCelebrationsCollectGetGivenReq)(nil),            // 39: com.yq.msg.CityMsg.FestivalCelebrationsCollectGetGivenReq
	(*FestivalCelebrationsCollectGetGivenResp)(nil),           // 40: com.yq.msg.CityMsg.FestivalCelebrationsCollectGetGivenResp
	(*FestivalCelebrationsEasterEggMsg)(nil),                  // 41: com.yq.msg.CityMsg.FestivalCelebrationsEasterEggMsg
	(*FestivalCelebrationsEasterEggGetRewardReq)(nil),         // 42: com.yq.msg.CityMsg.FestivalCelebrationsEasterEggGetRewardReq
	(*FestivalCelebrationsEasterEggGetRewardRsp)(nil),         // 43: com.yq.msg.CityMsg.FestivalCelebrationsEasterEggGetRewardRsp
	(*FestivalCelebrationsGetBindUnionMemberDataListReq)(nil), // 44: com.yq.msg.CityMsg.FestivalCelebrationsGetBindUnionMemberDataListReq
	(*FestivalCelebrationsGetBindUnionMemberDataListRsp)(nil), // 45: com.yq.msg.CityMsg.FestivalCelebrationsGetBindUnionMemberDataListRsp
	(*FestivalCelebrationsConfigSync)(nil),                    // 46: com.yq.msg.CityMsg.FestivalCelebrationsConfigSync
	(*FestivalCelebrationsBanquetConfig)(nil),                 // 47: com.yq.msg.CityMsg.FestivalCelebrationsBanquetConfig
	(*FestivalCelebrationsCollectBigDrawConfig)(nil),          // 48: com.yq.msg.CityMsg.FestivalCelebrationsCollectBigDrawConfig
	(*FestivalCelebrationsEasterEggConfig)(nil),               // 49: com.yq.msg.CityMsg.FestivalCelebrationsEasterEggConfig
	(*PalacePlayerShowMsg)(nil),                               // 50: com.yq.msg.CityMsg.PalacePlayerShowMsg
	(*UnionBaseData)(nil),                                     // 51: com.yq.msg.CityMsg.UnionBaseData
	(*PlayerBaseDataMsg)(nil),                                 // 52: com.yq.msg.CityMsg.PlayerBaseDataMsg
	(*PlayerShowInfoMsg)(nil),                                 // 53: com.yq.msg.CityMsg.PlayerShowInfoMsg
	(*UnionMemberData)(nil),                                   // 54: com.yq.msg.CityMsg.UnionMemberData
}
var file_FestivalCelebrations_proto_depIdxs = []int32{
	7,  // 0: com.yq.msg.CityMsg.FestivalCelebrationsPlayerInfoMsg.banquetMsg:type_name -> com.yq.msg.CityMsg.FestivalCelebrationsBanquetMsg
	20, // 1: com.yq.msg.CityMsg.FestivalCelebrationsPlayerInfoMsg.signMsg:type_name -> com.yq.msg.CityMsg.FestivalCelebrationsSignMsg
	23, // 2: com.yq.msg.CityMsg.FestivalCelebrationsPlayerInfoMsg.collectMsg:type_name -> com.yq.msg.CityMsg.FestivalCelebrationsCollectMsg
	41, // 3: com.yq.msg.CityMsg.FestivalCelebrationsPlayerInfoMsg.easterEggMsg:type_name -> com.yq.msg.CityMsg.FestivalCelebrationsEasterEggMsg
	1,  // 4: com.yq.msg.CityMsg.FestivalCelebrationsPlayerInfoMsg.annualMemoryMsg:type_name -> com.yq.msg.CityMsg.FestivalCelebrationsAnnualMemoryMsg
	4,  // 5: com.yq.msg.CityMsg.FestivalCelebrationsGetAnnualMemoryRsp.AnnualMemoryItemMsg:type_name -> com.yq.msg.CityMsg.FestivalCelebrationsAnnualMemoryItemMsg
	50, // 6: com.yq.msg.CityMsg.FestivalCelebrationsAnnualMemoryItemMsg.dataList:type_name -> com.yq.msg.CityMsg.PalacePlayerShowMsg
	51, // 7: com.yq.msg.CityMsg.FestivalCelebrationsAnnualMemoryItemMsg.unionMsg:type_name -> com.yq.msg.CityMsg.UnionBaseData
	9,  // 8: com.yq.msg.CityMsg.FestivalCelebrationsBanquetMsg.useItemList:type_name -> com.yq.msg.CityMsg.FestivalCelebrationsBanquetItemMsg
	52, // 9: com.yq.msg.CityMsg.FestivalCelebrationsBanquetScoreMsg.playerData:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	9,  // 10: com.yq.msg.CityMsg.FestivalCelebrationsUseBanquetItemReq.itemMsg:type_name -> com.yq.msg.CityMsg.FestivalCelebrationsBanquetItemMsg
	8,  // 11: com.yq.msg.CityMsg.FestivalCelebrationsGetBanquetScoreDetailRsp.scoreMsgList:type_name -> com.yq.msg.CityMsg.FestivalCelebrationsBanquetScoreMsg
	24, // 12: com.yq.msg.CityMsg.FestivalCelebrationsCollectMsg.giveMsg:type_name -> com.yq.msg.CityMsg.FestivalCelebrationsCollectGiveMsg
	53, // 13: com.yq.msg.CityMsg.FestivalCelebrationsCollectGiveMsg.headInfo:type_name -> com.yq.msg.CityMsg.PlayerShowInfoMsg
	53, // 14: com.yq.msg.CityMsg.FestivalCelebrationsCollectGetClaimListRsp.headInfo:type_name -> com.yq.msg.CityMsg.PlayerShowInfoMsg
	53, // 15: com.yq.msg.CityMsg.FestivalCelebrationsCollectSearchPlayerRsp.headInfo:type_name -> com.yq.msg.CityMsg.PlayerShowInfoMsg
	54, // 16: com.yq.msg.CityMsg.FestivalCelebrationsGetBindUnionMemberDataListRsp.memberList:type_name -> com.yq.msg.CityMsg.UnionMemberData
	47, // 17: com.yq.msg.CityMsg.FestivalCelebrationsConfigSync.banquetConfigList:type_name -> com.yq.msg.CityMsg.FestivalCelebrationsBanquetConfig
	48, // 18: com.yq.msg.CityMsg.FestivalCelebrationsConfigSync.collectBigDrawConfigList:type_name -> com.yq.msg.CityMsg.FestivalCelebrationsCollectBigDrawConfig
	49, // 19: com.yq.msg.CityMsg.FestivalCelebrationsConfigSync.easterEggConfigList:type_name -> com.yq.msg.CityMsg.FestivalCelebrationsEasterEggConfig
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_FestivalCelebrations_proto_init() }
func file_FestivalCelebrations_proto_init() {
	if File_FestivalCelebrations_proto != nil {
		return
	}
	file_Common_proto_init()
	file_Palace_proto_init()
	file_Union_proto_init()
	file_WatchPlayer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_FestivalCelebrations_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsPlayerInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsAnnualMemoryMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsGetAnnualMemoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsGetAnnualMemoryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsAnnualMemoryItemMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsWorshipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsWorshipResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsBanquetMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsBanquetScoreMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsBanquetItemMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsUseBanquetItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsUseBanquetItemRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsDrawBanquetRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsDrawBanquetRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsGetBanquetScoreDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsGetBanquetScoreDetailRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsUseLuckyFateItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsUseLuckyFateItemRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsFuYuanGetRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsFuYuanGetRewardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsSignMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsGetSignRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsGetSignRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectGiveMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectSynthesisReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectSynthesisRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectFillReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectFillRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectDrawBigRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectDrawBigRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectGetClaimListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectGetClaimListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectSearchPlayerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectSearchPlayerRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectGiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectGiveRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectAskForReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectAskForRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectGetGivenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectGetGivenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsEasterEggMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsEasterEggGetRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsEasterEggGetRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsGetBindUnionMemberDataListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsGetBindUnionMemberDataListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsConfigSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsBanquetConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsCollectBigDrawConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FestivalCelebrations_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*FestivalCelebrationsEasterEggConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_FestivalCelebrations_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_FestivalCelebrations_proto_goTypes,
		DependencyIndexes: file_FestivalCelebrations_proto_depIdxs,
		MessageInfos:      file_FestivalCelebrations_proto_msgTypes,
	}.Build()
	File_FestivalCelebrations_proto = out.File
	file_FestivalCelebrations_proto_rawDesc = nil
	file_FestivalCelebrations_proto_goTypes = nil
	file_FestivalCelebrations_proto_depIdxs = nil
}
