// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: PetDreamLandActivityProto.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PetDreamLandActivityConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LuckyDrawConfig     []*PetDreamLandDrawConfig `protobuf:"bytes,1,rep,name=luckyDrawConfig" json:"luckyDrawConfig,omitempty"`
	ActivityPlaceConfig []*ActivityPlaceConfig    `protobuf:"bytes,2,rep,name=activityPlaceConfig" json:"activityPlaceConfig,omitempty"`
}

func (x *PetDreamLandActivityConfig) Reset() {
	*x = PetDreamLandActivityConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetDreamLandActivityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetDreamLandActivityConfig) ProtoMessage() {}

func (x *PetDreamLandActivityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetDreamLandActivityConfig.ProtoReflect.Descriptor instead.
func (*PetDreamLandActivityConfig) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{0}
}

func (x *PetDreamLandActivityConfig) GetLuckyDrawConfig() []*PetDreamLandDrawConfig {
	if x != nil {
		return x.LuckyDrawConfig
	}
	return nil
}

func (x *PetDreamLandActivityConfig) GetActivityPlaceConfig() []*ActivityPlaceConfig {
	if x != nil {
		return x.ActivityPlaceConfig
	}
	return nil
}

type PetDreamLandDrawConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Reward     *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
	Weight     *int32  `protobuf:"varint,3,opt,name=weight" json:"weight,omitempty"`
	Limit      *int32  `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	RewardType *int32  `protobuf:"varint,5,opt,name=rewardType" json:"rewardType,omitempty"`
}

func (x *PetDreamLandDrawConfig) Reset() {
	*x = PetDreamLandDrawConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetDreamLandDrawConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetDreamLandDrawConfig) ProtoMessage() {}

func (x *PetDreamLandDrawConfig) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetDreamLandDrawConfig.ProtoReflect.Descriptor instead.
func (*PetDreamLandDrawConfig) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{1}
}

func (x *PetDreamLandDrawConfig) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *PetDreamLandDrawConfig) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *PetDreamLandDrawConfig) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *PetDreamLandDrawConfig) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *PetDreamLandDrawConfig) GetRewardType() int32 {
	if x != nil && x.RewardType != nil {
		return *x.RewardType
	}
	return 0
}

type ActivityPlaceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name           *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	UnlockCost     *string `protobuf:"bytes,3,opt,name=unlockCost" json:"unlockCost,omitempty"`
	SeatUnlockCost *string `protobuf:"bytes,4,opt,name=seatUnlockCost" json:"seatUnlockCost,omitempty"`
	PetType        *int32  `protobuf:"varint,5,opt,name=petType" json:"petType,omitempty"`
	Speedup        *int32  `protobuf:"varint,6,opt,name=speedup" json:"speedup,omitempty"`
}

func (x *ActivityPlaceConfig) Reset() {
	*x = ActivityPlaceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityPlaceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityPlaceConfig) ProtoMessage() {}

func (x *ActivityPlaceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityPlaceConfig.ProtoReflect.Descriptor instead.
func (*ActivityPlaceConfig) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{2}
}

func (x *ActivityPlaceConfig) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ActivityPlaceConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ActivityPlaceConfig) GetUnlockCost() string {
	if x != nil && x.UnlockCost != nil {
		return *x.UnlockCost
	}
	return ""
}

func (x *ActivityPlaceConfig) GetSeatUnlockCost() string {
	if x != nil && x.SeatUnlockCost != nil {
		return *x.SeatUnlockCost
	}
	return ""
}

func (x *ActivityPlaceConfig) GetPetType() int32 {
	if x != nil && x.PetType != nil {
		return *x.PetType
	}
	return 0
}

func (x *ActivityPlaceConfig) GetSpeedup() int32 {
	if x != nil && x.Speedup != nil {
		return *x.Speedup
	}
	return 0
}

type PetDreamLandDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityScore *int32                     `protobuf:"varint,1,opt,name=activityScore" json:"activityScore,omitempty"`
	TurnTable     *PetDreamLandTurnTableData `protobuf:"bytes,2,opt,name=turnTable" json:"turnTable,omitempty"`
	Adventure     *PetDreamLandAdventureData `protobuf:"bytes,3,opt,name=adventure" json:"adventure,omitempty"`
}

func (x *PetDreamLandDataMsg) Reset() {
	*x = PetDreamLandDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetDreamLandDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetDreamLandDataMsg) ProtoMessage() {}

func (x *PetDreamLandDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetDreamLandDataMsg.ProtoReflect.Descriptor instead.
func (*PetDreamLandDataMsg) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{3}
}

func (x *PetDreamLandDataMsg) GetActivityScore() int32 {
	if x != nil && x.ActivityScore != nil {
		return *x.ActivityScore
	}
	return 0
}

func (x *PetDreamLandDataMsg) GetTurnTable() *PetDreamLandTurnTableData {
	if x != nil {
		return x.TurnTable
	}
	return nil
}

func (x *PetDreamLandDataMsg) GetAdventure() *PetDreamLandAdventureData {
	if x != nil {
		return x.Adventure
	}
	return nil
}

type PetDreamLandTurnTableData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times         *int32                            `protobuf:"varint,1,opt,name=times" json:"times,omitempty"`
	GetRewardList []*PetDreamLandTurnTableGetReward `protobuf:"bytes,2,rep,name=getRewardList" json:"getRewardList,omitempty"`
}

func (x *PetDreamLandTurnTableData) Reset() {
	*x = PetDreamLandTurnTableData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetDreamLandTurnTableData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetDreamLandTurnTableData) ProtoMessage() {}

func (x *PetDreamLandTurnTableData) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetDreamLandTurnTableData.ProtoReflect.Descriptor instead.
func (*PetDreamLandTurnTableData) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{4}
}

func (x *PetDreamLandTurnTableData) GetTimes() int32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

func (x *PetDreamLandTurnTableData) GetGetRewardList() []*PetDreamLandTurnTableGetReward {
	if x != nil {
		return x.GetRewardList
	}
	return nil
}

type PetDreamLandTurnTableGetReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	GetNum *int32 `protobuf:"varint,2,opt,name=getNum" json:"getNum,omitempty"`
}

func (x *PetDreamLandTurnTableGetReward) Reset() {
	*x = PetDreamLandTurnTableGetReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetDreamLandTurnTableGetReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetDreamLandTurnTableGetReward) ProtoMessage() {}

func (x *PetDreamLandTurnTableGetReward) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetDreamLandTurnTableGetReward.ProtoReflect.Descriptor instead.
func (*PetDreamLandTurnTableGetReward) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{5}
}

func (x *PetDreamLandTurnTableGetReward) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *PetDreamLandTurnTableGetReward) GetGetNum() int32 {
	if x != nil && x.GetNum != nil {
		return *x.GetNum
	}
	return 0
}

type PetDreamLandAdventureData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurProfit          *int32                            `protobuf:"varint,1,opt,name=curProfit" json:"curProfit,omitempty"`
	CalculateStartTime *int64                            `protobuf:"varint,2,opt,name=calculateStartTime" json:"calculateStartTime,omitempty"`
	PlaceData          []*PetDreamLandAdventurePlaceData `protobuf:"bytes,3,rep,name=placeData" json:"placeData,omitempty"`
}

func (x *PetDreamLandAdventureData) Reset() {
	*x = PetDreamLandAdventureData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetDreamLandAdventureData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetDreamLandAdventureData) ProtoMessage() {}

func (x *PetDreamLandAdventureData) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetDreamLandAdventureData.ProtoReflect.Descriptor instead.
func (*PetDreamLandAdventureData) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{6}
}

func (x *PetDreamLandAdventureData) GetCurProfit() int32 {
	if x != nil && x.CurProfit != nil {
		return *x.CurProfit
	}
	return 0
}

func (x *PetDreamLandAdventureData) GetCalculateStartTime() int64 {
	if x != nil && x.CalculateStartTime != nil {
		return *x.CalculateStartTime
	}
	return 0
}

func (x *PetDreamLandAdventureData) GetPlaceData() []*PetDreamLandAdventurePlaceData {
	if x != nil {
		return x.PlaceData
	}
	return nil
}

type PetDreamLandAdventurePlaceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	PetData []int32 `protobuf:"varint,2,rep,name=petData" json:"petData,omitempty"`
	SlotNum *int32  `protobuf:"varint,3,opt,name=slotNum" json:"slotNum,omitempty"`
}

func (x *PetDreamLandAdventurePlaceData) Reset() {
	*x = PetDreamLandAdventurePlaceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PetDreamLandAdventurePlaceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetDreamLandAdventurePlaceData) ProtoMessage() {}

func (x *PetDreamLandAdventurePlaceData) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetDreamLandAdventurePlaceData.ProtoReflect.Descriptor instead.
func (*PetDreamLandAdventurePlaceData) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{7}
}

func (x *PetDreamLandAdventurePlaceData) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *PetDreamLandAdventurePlaceData) GetPetData() []int32 {
	if x != nil {
		return x.PetData
	}
	return nil
}

func (x *PetDreamLandAdventurePlaceData) GetSlotNum() int32 {
	if x != nil && x.SlotNum != nil {
		return *x.SlotNum
	}
	return 0
}

type ReqPetDreamLandDraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Times      *int32 `protobuf:"varint,2,req,name=times" json:"times,omitempty"`
}

func (x *ReqPetDreamLandDraw) Reset() {
	*x = ReqPetDreamLandDraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPetDreamLandDraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPetDreamLandDraw) ProtoMessage() {}

func (x *ReqPetDreamLandDraw) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPetDreamLandDraw.ProtoReflect.Descriptor instead.
func (*ReqPetDreamLandDraw) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{8}
}

func (x *ReqPetDreamLandDraw) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReqPetDreamLandDraw) GetTimes() int32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

type RspPetDreamLandDraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	SlotId *int32  `protobuf:"varint,2,opt,name=slotId" json:"slotId,omitempty"`
	Reward *string `protobuf:"bytes,3,opt,name=reward" json:"reward,omitempty"`
}

func (x *RspPetDreamLandDraw) Reset() {
	*x = RspPetDreamLandDraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspPetDreamLandDraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspPetDreamLandDraw) ProtoMessage() {}

func (x *RspPetDreamLandDraw) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspPetDreamLandDraw.ProtoReflect.Descriptor instead.
func (*RspPetDreamLandDraw) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{9}
}

func (x *RspPetDreamLandDraw) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RspPetDreamLandDraw) GetSlotId() int32 {
	if x != nil && x.SlotId != nil {
		return *x.SlotId
	}
	return 0
}

func (x *RspPetDreamLandDraw) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type ReqPetDreamLandAdventurePlaceUnlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PlaceId    *int32 `protobuf:"varint,2,req,name=placeId" json:"placeId,omitempty"`
}

func (x *ReqPetDreamLandAdventurePlaceUnlock) Reset() {
	*x = ReqPetDreamLandAdventurePlaceUnlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPetDreamLandAdventurePlaceUnlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPetDreamLandAdventurePlaceUnlock) ProtoMessage() {}

func (x *ReqPetDreamLandAdventurePlaceUnlock) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPetDreamLandAdventurePlaceUnlock.ProtoReflect.Descriptor instead.
func (*ReqPetDreamLandAdventurePlaceUnlock) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{10}
}

func (x *ReqPetDreamLandAdventurePlaceUnlock) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReqPetDreamLandAdventurePlaceUnlock) GetPlaceId() int32 {
	if x != nil && x.PlaceId != nil {
		return *x.PlaceId
	}
	return 0
}

type RspPetDreamLandAdventurePlaceUnlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *RspPetDreamLandAdventurePlaceUnlock) Reset() {
	*x = RspPetDreamLandAdventurePlaceUnlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspPetDreamLandAdventurePlaceUnlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspPetDreamLandAdventurePlaceUnlock) ProtoMessage() {}

func (x *RspPetDreamLandAdventurePlaceUnlock) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspPetDreamLandAdventurePlaceUnlock.ProtoReflect.Descriptor instead.
func (*RspPetDreamLandAdventurePlaceUnlock) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{11}
}

func (x *RspPetDreamLandAdventurePlaceUnlock) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type ReqPetDreamLandAdventureSlotUnlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,2,req,name=activityId" json:"activityId,omitempty"`
	PlaceId    *int32 `protobuf:"varint,1,req,name=placeId" json:"placeId,omitempty"`
}

func (x *ReqPetDreamLandAdventureSlotUnlock) Reset() {
	*x = ReqPetDreamLandAdventureSlotUnlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPetDreamLandAdventureSlotUnlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPetDreamLandAdventureSlotUnlock) ProtoMessage() {}

func (x *ReqPetDreamLandAdventureSlotUnlock) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPetDreamLandAdventureSlotUnlock.ProtoReflect.Descriptor instead.
func (*ReqPetDreamLandAdventureSlotUnlock) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{12}
}

func (x *ReqPetDreamLandAdventureSlotUnlock) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReqPetDreamLandAdventureSlotUnlock) GetPlaceId() int32 {
	if x != nil && x.PlaceId != nil {
		return *x.PlaceId
	}
	return 0
}

type RspPetDreamLandAdventurePlaceSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *RspPetDreamLandAdventurePlaceSlot) Reset() {
	*x = RspPetDreamLandAdventurePlaceSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspPetDreamLandAdventurePlaceSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspPetDreamLandAdventurePlaceSlot) ProtoMessage() {}

func (x *RspPetDreamLandAdventurePlaceSlot) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspPetDreamLandAdventurePlaceSlot.ProtoReflect.Descriptor instead.
func (*RspPetDreamLandAdventurePlaceSlot) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{13}
}

func (x *RspPetDreamLandAdventurePlaceSlot) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type ReqPetDreamLandAdventureDispatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PlaceId    *int32 `protobuf:"varint,2,req,name=placeId" json:"placeId,omitempty"`
	SlotIdx    *int32 `protobuf:"varint,3,req,name=slotIdx" json:"slotIdx,omitempty"`
	PetId      *int32 `protobuf:"varint,4,req,name=petId" json:"petId,omitempty"`
}

func (x *ReqPetDreamLandAdventureDispatch) Reset() {
	*x = ReqPetDreamLandAdventureDispatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPetDreamLandAdventureDispatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPetDreamLandAdventureDispatch) ProtoMessage() {}

func (x *ReqPetDreamLandAdventureDispatch) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPetDreamLandAdventureDispatch.ProtoReflect.Descriptor instead.
func (*ReqPetDreamLandAdventureDispatch) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{14}
}

func (x *ReqPetDreamLandAdventureDispatch) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReqPetDreamLandAdventureDispatch) GetPlaceId() int32 {
	if x != nil && x.PlaceId != nil {
		return *x.PlaceId
	}
	return 0
}

func (x *ReqPetDreamLandAdventureDispatch) GetSlotIdx() int32 {
	if x != nil && x.SlotIdx != nil {
		return *x.SlotIdx
	}
	return 0
}

func (x *ReqPetDreamLandAdventureDispatch) GetPetId() int32 {
	if x != nil && x.PetId != nil {
		return *x.PetId
	}
	return 0
}

type RspPetDreamLandAdventureDispatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *RspPetDreamLandAdventureDispatch) Reset() {
	*x = RspPetDreamLandAdventureDispatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspPetDreamLandAdventureDispatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspPetDreamLandAdventureDispatch) ProtoMessage() {}

func (x *RspPetDreamLandAdventureDispatch) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspPetDreamLandAdventureDispatch.ProtoReflect.Descriptor instead.
func (*RspPetDreamLandAdventureDispatch) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{15}
}

func (x *RspPetDreamLandAdventureDispatch) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type ReqPetDreamLandAdventureGetAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	IsQuick    *bool  `protobuf:"varint,2,req,name=isQuick" json:"isQuick,omitempty"`
}

func (x *ReqPetDreamLandAdventureGetAward) Reset() {
	*x = ReqPetDreamLandAdventureGetAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPetDreamLandAdventureGetAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPetDreamLandAdventureGetAward) ProtoMessage() {}

func (x *ReqPetDreamLandAdventureGetAward) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPetDreamLandAdventureGetAward.ProtoReflect.Descriptor instead.
func (*ReqPetDreamLandAdventureGetAward) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{16}
}

func (x *ReqPetDreamLandAdventureGetAward) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReqPetDreamLandAdventureGetAward) GetIsQuick() bool {
	if x != nil && x.IsQuick != nil {
		return *x.IsQuick
	}
	return false
}

type RspPetDreamLandAdventureGetAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	AddScore *int32  `protobuf:"varint,2,opt,name=addScore" json:"addScore,omitempty"`
	Reward   *string `protobuf:"bytes,3,opt,name=reward" json:"reward,omitempty"`
}

func (x *RspPetDreamLandAdventureGetAward) Reset() {
	*x = RspPetDreamLandAdventureGetAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PetDreamLandActivityProto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspPetDreamLandAdventureGetAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspPetDreamLandAdventureGetAward) ProtoMessage() {}

func (x *RspPetDreamLandAdventureGetAward) ProtoReflect() protoreflect.Message {
	mi := &file_PetDreamLandActivityProto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspPetDreamLandAdventureGetAward.ProtoReflect.Descriptor instead.
func (*RspPetDreamLandAdventureGetAward) Descriptor() ([]byte, []int) {
	return file_PetDreamLandActivityProto_proto_rawDescGZIP(), []int{17}
}

func (x *RspPetDreamLandAdventureGetAward) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RspPetDreamLandAdventureGetAward) GetAddScore() int32 {
	if x != nil && x.AddScore != nil {
		return *x.AddScore
	}
	return 0
}

func (x *RspPetDreamLandAdventureGetAward) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

var File_PetDreamLandActivityProto_proto protoreflect.FileDescriptor

var file_PetDreamLandActivityProto_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x22, 0xcd, 0x01, 0x0a, 0x1a, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65,
	0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x54, 0x0a, 0x0f, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x44, 0x72, 0x61,
	0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x44,
	0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f, 0x6c, 0x75, 0x63, 0x6b, 0x79,
	0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x59, 0x0a, 0x13, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x8e, 0x01, 0x0a, 0x16, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65,
	0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x43, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x74,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x65, 0x64, 0x75, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x70, 0x65, 0x65, 0x64, 0x75, 0x70, 0x22, 0xd5,
	0x01, 0x0a, 0x13, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x4b, 0x0a, 0x09,
	0x74, 0x75, 0x72, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e,
	0x64, 0x54, 0x75, 0x72, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09,
	0x74, 0x75, 0x72, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x61, 0x64, 0x76,
	0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x41, 0x64,
	0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x61, 0x64, 0x76,
	0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x19, 0x50, 0x65, 0x74, 0x44, 0x72,
	0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x54, 0x75, 0x72, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x0d, 0x67, 0x65,
	0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c,
	0x61, 0x6e, 0x64, 0x54, 0x75, 0x72, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x1e, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d,
	0x4c, 0x61, 0x6e, 0x64, 0x54, 0x75, 0x72, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x74, 0x4e, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0xbb,
	0x01, 0x0a, 0x19, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x41,
	0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x63, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x41,
	0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x64, 0x0a, 0x1e,
	0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x76, 0x65,
	0x6e, 0x74, 0x75, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x4e,
	0x75, 0x6d, 0x22, 0x4b, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61,
	0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x44, 0x72, 0x61, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x22,
	0x57, 0x0a, 0x13, 0x52, 0x73, 0x70, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61,
	0x6e, 0x64, 0x44, 0x72, 0x61, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x5f, 0x0a, 0x23, 0x52, 0x65, 0x71, 0x50,
	0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x76, 0x65, 0x6e,
	0x74, 0x75, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x23, 0x52, 0x73, 0x70,
	0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x76, 0x65,
	0x6e, 0x74, 0x75, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x22, 0x5e, 0x0a, 0x22, 0x52, 0x65, 0x71, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61,
	0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x53, 0x6c,
	0x6f, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x35, 0x0a, 0x21, 0x52, 0x73, 0x70, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61,
	0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x20, 0x52, 0x65,
	0x71, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x76,
	0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74,
	0x49, 0x64, 0x78, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x49,
	0x64, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x05, 0x70, 0x65, 0x74, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x20, 0x52, 0x73, 0x70, 0x50,
	0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x76, 0x65, 0x6e,
	0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x5c,
	0x0a, 0x20, 0x52, 0x65, 0x71, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e,
	0x64, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x47, 0x65, 0x74, 0x41, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x22, 0x68, 0x0a, 0x20,
	0x52, 0x73, 0x70, 0x50, 0x65, 0x74, 0x44, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x61, 0x6e, 0x64, 0x41,
	0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x47, 0x65, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x64, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f, 0x78,
	0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_PetDreamLandActivityProto_proto_rawDescOnce sync.Once
	file_PetDreamLandActivityProto_proto_rawDescData = file_PetDreamLandActivityProto_proto_rawDesc
)

func file_PetDreamLandActivityProto_proto_rawDescGZIP() []byte {
	file_PetDreamLandActivityProto_proto_rawDescOnce.Do(func() {
		file_PetDreamLandActivityProto_proto_rawDescData = protoimpl.X.CompressGZIP(file_PetDreamLandActivityProto_proto_rawDescData)
	})
	return file_PetDreamLandActivityProto_proto_rawDescData
}

var file_PetDreamLandActivityProto_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_PetDreamLandActivityProto_proto_goTypes = []any{
	(*PetDreamLandActivityConfig)(nil),          // 0: com.yq.msg.CityMsg.PetDreamLandActivityConfig
	(*PetDreamLandDrawConfig)(nil),              // 1: com.yq.msg.CityMsg.PetDreamLandDrawConfig
	(*ActivityPlaceConfig)(nil),                 // 2: com.yq.msg.CityMsg.ActivityPlaceConfig
	(*PetDreamLandDataMsg)(nil),                 // 3: com.yq.msg.CityMsg.PetDreamLandDataMsg
	(*PetDreamLandTurnTableData)(nil),           // 4: com.yq.msg.CityMsg.PetDreamLandTurnTableData
	(*PetDreamLandTurnTableGetReward)(nil),      // 5: com.yq.msg.CityMsg.PetDreamLandTurnTableGetReward
	(*PetDreamLandAdventureData)(nil),           // 6: com.yq.msg.CityMsg.PetDreamLandAdventureData
	(*PetDreamLandAdventurePlaceData)(nil),      // 7: com.yq.msg.CityMsg.PetDreamLandAdventurePlaceData
	(*ReqPetDreamLandDraw)(nil),                 // 8: com.yq.msg.CityMsg.ReqPetDreamLandDraw
	(*RspPetDreamLandDraw)(nil),                 // 9: com.yq.msg.CityMsg.RspPetDreamLandDraw
	(*ReqPetDreamLandAdventurePlaceUnlock)(nil), // 10: com.yq.msg.CityMsg.ReqPetDreamLandAdventurePlaceUnlock
	(*RspPetDreamLandAdventurePlaceUnlock)(nil), // 11: com.yq.msg.CityMsg.RspPetDreamLandAdventurePlaceUnlock
	(*ReqPetDreamLandAdventureSlotUnlock)(nil),  // 12: com.yq.msg.CityMsg.ReqPetDreamLandAdventureSlotUnlock
	(*RspPetDreamLandAdventurePlaceSlot)(nil),   // 13: com.yq.msg.CityMsg.RspPetDreamLandAdventurePlaceSlot
	(*ReqPetDreamLandAdventureDispatch)(nil),    // 14: com.yq.msg.CityMsg.ReqPetDreamLandAdventureDispatch
	(*RspPetDreamLandAdventureDispatch)(nil),    // 15: com.yq.msg.CityMsg.RspPetDreamLandAdventureDispatch
	(*ReqPetDreamLandAdventureGetAward)(nil),    // 16: com.yq.msg.CityMsg.ReqPetDreamLandAdventureGetAward
	(*RspPetDreamLandAdventureGetAward)(nil),    // 17: com.yq.msg.CityMsg.RspPetDreamLandAdventureGetAward
}
var file_PetDreamLandActivityProto_proto_depIdxs = []int32{
	1, // 0: com.yq.msg.CityMsg.PetDreamLandActivityConfig.luckyDrawConfig:type_name -> com.yq.msg.CityMsg.PetDreamLandDrawConfig
	2, // 1: com.yq.msg.CityMsg.PetDreamLandActivityConfig.activityPlaceConfig:type_name -> com.yq.msg.CityMsg.ActivityPlaceConfig
	4, // 2: com.yq.msg.CityMsg.PetDreamLandDataMsg.turnTable:type_name -> com.yq.msg.CityMsg.PetDreamLandTurnTableData
	6, // 3: com.yq.msg.CityMsg.PetDreamLandDataMsg.adventure:type_name -> com.yq.msg.CityMsg.PetDreamLandAdventureData
	5, // 4: com.yq.msg.CityMsg.PetDreamLandTurnTableData.getRewardList:type_name -> com.yq.msg.CityMsg.PetDreamLandTurnTableGetReward
	7, // 5: com.yq.msg.CityMsg.PetDreamLandAdventureData.placeData:type_name -> com.yq.msg.CityMsg.PetDreamLandAdventurePlaceData
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_PetDreamLandActivityProto_proto_init() }
func file_PetDreamLandActivityProto_proto_init() {
	if File_PetDreamLandActivityProto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_PetDreamLandActivityProto_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PetDreamLandActivityConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PetDreamLandDrawConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityPlaceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PetDreamLandDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PetDreamLandTurnTableData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PetDreamLandTurnTableGetReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PetDreamLandAdventureData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PetDreamLandAdventurePlaceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ReqPetDreamLandDraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*RspPetDreamLandDraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ReqPetDreamLandAdventurePlaceUnlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*RspPetDreamLandAdventurePlaceUnlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ReqPetDreamLandAdventureSlotUnlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*RspPetDreamLandAdventurePlaceSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ReqPetDreamLandAdventureDispatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*RspPetDreamLandAdventureDispatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ReqPetDreamLandAdventureGetAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PetDreamLandActivityProto_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*RspPetDreamLandAdventureGetAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_PetDreamLandActivityProto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_PetDreamLandActivityProto_proto_goTypes,
		DependencyIndexes: file_PetDreamLandActivityProto_proto_depIdxs,
		MessageInfos:      file_PetDreamLandActivityProto_proto_msgTypes,
	}.Build()
	File_PetDreamLandActivityProto_proto = out.File
	file_PetDreamLandActivityProto_proto_rawDesc = nil
	file_PetDreamLandActivityProto_proto_goTypes = nil
	file_PetDreamLandActivityProto_proto_depIdxs = nil
}
