// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: WorldMessage.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorldMessageTempMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           *int32             `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	SendTime       *int64             `protobuf:"varint,2,req,name=sendTime" json:"sendTime,omitempty"`
	Content        *string            `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	PlayerId       *int64             `protobuf:"varint,4,opt,name=playerId" json:"playerId,omitempty"`
	PlayerBaseData *PlayerBaseDataMsg `protobuf:"bytes,5,opt,name=playerBaseData" json:"playerBaseData,omitempty"`
	ActivityId     *int32             `protobuf:"varint,6,opt,name=activityId" json:"activityId,omitempty"`
	ContentType    *int32             `protobuf:"varint,7,opt,name=contentType" json:"contentType,omitempty"`
	ExtraParams    *string            `protobuf:"bytes,8,opt,name=extraParams" json:"extraParams,omitempty"`
	ExtraData      []byte             `protobuf:"bytes,9,opt,name=extraData" json:"extraData,omitempty"`
	LogId          *string            `protobuf:"bytes,10,opt,name=logId" json:"logId,omitempty"`
	Reported       *bool              `protobuf:"varint,11,opt,name=Reported" json:"Reported,omitempty"`
	Ip             *string            `protobuf:"bytes,12,opt,name=ip" json:"ip,omitempty"`
	AtPlayerInfo   *AtPlayerInfo      `protobuf:"bytes,13,opt,name=atPlayerInfo" json:"atPlayerInfo,omitempty"`
	FriendPlayerId *int64             `protobuf:"varint,14,opt,name=friendPlayerId" json:"friendPlayerId,omitempty"`
}

func (x *WorldMessageTempMsg) Reset() {
	*x = WorldMessageTempMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldMessageTempMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldMessageTempMsg) ProtoMessage() {}

func (x *WorldMessageTempMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldMessageTempMsg.ProtoReflect.Descriptor instead.
func (*WorldMessageTempMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{0}
}

func (x *WorldMessageTempMsg) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *WorldMessageTempMsg) GetSendTime() int64 {
	if x != nil && x.SendTime != nil {
		return *x.SendTime
	}
	return 0
}

func (x *WorldMessageTempMsg) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *WorldMessageTempMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *WorldMessageTempMsg) GetPlayerBaseData() *PlayerBaseDataMsg {
	if x != nil {
		return x.PlayerBaseData
	}
	return nil
}

func (x *WorldMessageTempMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *WorldMessageTempMsg) GetContentType() int32 {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return 0
}

func (x *WorldMessageTempMsg) GetExtraParams() string {
	if x != nil && x.ExtraParams != nil {
		return *x.ExtraParams
	}
	return ""
}

func (x *WorldMessageTempMsg) GetExtraData() []byte {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *WorldMessageTempMsg) GetLogId() string {
	if x != nil && x.LogId != nil {
		return *x.LogId
	}
	return ""
}

func (x *WorldMessageTempMsg) GetReported() bool {
	if x != nil && x.Reported != nil {
		return *x.Reported
	}
	return false
}

func (x *WorldMessageTempMsg) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *WorldMessageTempMsg) GetAtPlayerInfo() *AtPlayerInfo {
	if x != nil {
		return x.AtPlayerInfo
	}
	return nil
}

func (x *WorldMessageTempMsg) GetFriendPlayerId() int64 {
	if x != nil && x.FriendPlayerId != nil {
		return *x.FriendPlayerId
	}
	return 0
}

type AtPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *int64  `protobuf:"varint,1,opt,name=playerId" json:"playerId,omitempty"`
	NickName *string `protobuf:"bytes,2,opt,name=nickName" json:"nickName,omitempty"`
}

func (x *AtPlayerInfo) Reset() {
	*x = AtPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtPlayerInfo) ProtoMessage() {}

func (x *AtPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtPlayerInfo.ProtoReflect.Descriptor instead.
func (*AtPlayerInfo) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{1}
}

func (x *AtPlayerInfo) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *AtPlayerInfo) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

type WorldMessageListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataList []*WorldMessageTempMsg `protobuf:"bytes,1,rep,name=dataList" json:"dataList,omitempty"`
}

func (x *WorldMessageListMsg) Reset() {
	*x = WorldMessageListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldMessageListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldMessageListMsg) ProtoMessage() {}

func (x *WorldMessageListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldMessageListMsg.ProtoReflect.Descriptor instead.
func (*WorldMessageListMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{2}
}

func (x *WorldMessageListMsg) GetDataList() []*WorldMessageTempMsg {
	if x != nil {
		return x.DataList
	}
	return nil
}

type WorldChatReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           *int32        `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Content        *string       `protobuf:"bytes,2,req,name=content" json:"content,omitempty"`
	ActivityId     *int32        `protobuf:"varint,3,opt,name=activityId" json:"activityId,omitempty"`
	ContentType    *int32        `protobuf:"varint,4,opt,name=contentType" json:"contentType,omitempty"`
	AtPlayerInfo   *AtPlayerInfo `protobuf:"bytes,5,opt,name=atPlayerInfo" json:"atPlayerInfo,omitempty"`
	FriendPlayerId *int64        `protobuf:"varint,6,opt,name=friendPlayerId" json:"friendPlayerId,omitempty"`
}

func (x *WorldChatReqMsg) Reset() {
	*x = WorldChatReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldChatReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldChatReqMsg) ProtoMessage() {}

func (x *WorldChatReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldChatReqMsg.ProtoReflect.Descriptor instead.
func (*WorldChatReqMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{3}
}

func (x *WorldChatReqMsg) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *WorldChatReqMsg) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *WorldChatReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *WorldChatReqMsg) GetContentType() int32 {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return 0
}

func (x *WorldChatReqMsg) GetAtPlayerInfo() *AtPlayerInfo {
	if x != nil {
		return x.AtPlayerInfo
	}
	return nil
}

func (x *WorldChatReqMsg) GetFriendPlayerId() int64 {
	if x != nil && x.FriendPlayerId != nil {
		return *x.FriendPlayerId
	}
	return 0
}

type WorldChatRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	ForbiddenTime *int64 `protobuf:"varint,2,opt,name=forbiddenTime" json:"forbiddenTime,omitempty"`
}

func (x *WorldChatRespMsg) Reset() {
	*x = WorldChatRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldChatRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldChatRespMsg) ProtoMessage() {}

func (x *WorldChatRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldChatRespMsg.ProtoReflect.Descriptor instead.
func (*WorldChatRespMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{4}
}

func (x *WorldChatRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *WorldChatRespMsg) GetForbiddenTime() int64 {
	if x != nil && x.ForbiddenTime != nil {
		return *x.ForbiddenTime
	}
	return 0
}

type FriendChatReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendPlayerId *int64 `protobuf:"varint,1,opt,name=friendPlayerId" json:"friendPlayerId,omitempty"`
}

func (x *FriendChatReqMsg) Reset() {
	*x = FriendChatReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendChatReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendChatReqMsg) ProtoMessage() {}

func (x *FriendChatReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendChatReqMsg.ProtoReflect.Descriptor instead.
func (*FriendChatReqMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{5}
}

func (x *FriendChatReqMsg) GetFriendPlayerId() int64 {
	if x != nil && x.FriendPlayerId != nil {
		return *x.FriendPlayerId
	}
	return 0
}

type ActivityChatReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
}

func (x *ActivityChatReqMsg) Reset() {
	*x = ActivityChatReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityChatReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityChatReqMsg) ProtoMessage() {}

func (x *ActivityChatReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityChatReqMsg.ProtoReflect.Descriptor instead.
func (*ActivityChatReqMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{6}
}

func (x *ActivityChatReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type HorseRaceLampMsgAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NickName    *string `protobuf:"bytes,1,opt,name=nickName" json:"nickName,omitempty"`
	ConditionId *int32  `protobuf:"varint,2,opt,name=conditionId" json:"conditionId,omitempty"`
	Param       *string `protobuf:"bytes,3,opt,name=param" json:"param,omitempty"`
}

func (x *HorseRaceLampMsgAdd) Reset() {
	*x = HorseRaceLampMsgAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HorseRaceLampMsgAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HorseRaceLampMsgAdd) ProtoMessage() {}

func (x *HorseRaceLampMsgAdd) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HorseRaceLampMsgAdd.ProtoReflect.Descriptor instead.
func (*HorseRaceLampMsgAdd) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{7}
}

func (x *HorseRaceLampMsgAdd) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *HorseRaceLampMsgAdd) GetConditionId() int32 {
	if x != nil && x.ConditionId != nil {
		return *x.ConditionId
	}
	return 0
}

func (x *HorseRaceLampMsgAdd) GetParam() string {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return ""
}

type ReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
}

func (x *ReportReq) Reset() {
	*x = ReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportReq) ProtoMessage() {}

func (x *ReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportReq.ProtoReflect.Descriptor instead.
func (*ReportReq) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{8}
}

func (x *ReportReq) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type ReportResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *ReportResp) Reset() {
	*x = ReportResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportResp) ProtoMessage() {}

func (x *ReportResp) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportResp.ProtoReflect.Descriptor instead.
func (*ReportResp) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{9}
}

func (x *ReportResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type SystemChatReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EMessageType *int32 `protobuf:"varint,1,opt,name=eMessageType" json:"eMessageType,omitempty"`
}

func (x *SystemChatReqMsg) Reset() {
	*x = SystemChatReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemChatReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemChatReqMsg) ProtoMessage() {}

func (x *SystemChatReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemChatReqMsg.ProtoReflect.Descriptor instead.
func (*SystemChatReqMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{10}
}

func (x *SystemChatReqMsg) GetEMessageType() int32 {
	if x != nil && x.EMessageType != nil {
		return *x.EMessageType
	}
	return 0
}

type WorldChatBlockReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	ServerId *int64 `protobuf:"varint,2,opt,name=serverId" json:"serverId,omitempty"`
}

func (x *WorldChatBlockReqMsg) Reset() {
	*x = WorldChatBlockReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldChatBlockReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldChatBlockReqMsg) ProtoMessage() {}

func (x *WorldChatBlockReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldChatBlockReqMsg.ProtoReflect.Descriptor instead.
func (*WorldChatBlockReqMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{11}
}

func (x *WorldChatBlockReqMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *WorldChatBlockReqMsg) GetServerId() int64 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

type WorldChatBlockRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *WorldChatBlockRespMsg) Reset() {
	*x = WorldChatBlockRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldChatBlockRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldChatBlockRespMsg) ProtoMessage() {}

func (x *WorldChatBlockRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldChatBlockRespMsg.ProtoReflect.Descriptor instead.
func (*WorldChatBlockRespMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{12}
}

func (x *WorldChatBlockRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type WorldMessageExtraData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words  []string `protobuf:"bytes,1,rep,name=words" json:"words,omitempty"`
	CampId *int32   `protobuf:"varint,2,opt,name=campId" json:"campId,omitempty"`
}

func (x *WorldMessageExtraData) Reset() {
	*x = WorldMessageExtraData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldMessageExtraData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldMessageExtraData) ProtoMessage() {}

func (x *WorldMessageExtraData) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldMessageExtraData.ProtoReflect.Descriptor instead.
func (*WorldMessageExtraData) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{13}
}

func (x *WorldMessageExtraData) GetWords() []string {
	if x != nil {
		return x.Words
	}
	return nil
}

func (x *WorldMessageExtraData) GetCampId() int32 {
	if x != nil && x.CampId != nil {
		return *x.CampId
	}
	return 0
}

type RemoveBlackReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId []int64 `protobuf:"varint,1,rep,name=playerId" json:"playerId,omitempty"`
}

func (x *RemoveBlackReqMsg) Reset() {
	*x = RemoveBlackReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBlackReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBlackReqMsg) ProtoMessage() {}

func (x *RemoveBlackReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBlackReqMsg.ProtoReflect.Descriptor instead.
func (*RemoveBlackReqMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveBlackReqMsg) GetPlayerId() []int64 {
	if x != nil {
		return x.PlayerId
	}
	return nil
}

type RemoveBlackRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *RemoveBlackRespMsg) Reset() {
	*x = RemoveBlackRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBlackRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBlackRespMsg) ProtoMessage() {}

func (x *RemoveBlackRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBlackRespMsg.ProtoReflect.Descriptor instead.
func (*RemoveBlackRespMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{15}
}

func (x *RemoveBlackRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type GetBlackPlayerListReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBlackPlayerListReqMsg) Reset() {
	*x = GetBlackPlayerListReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlackPlayerListReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlackPlayerListReqMsg) ProtoMessage() {}

func (x *GetBlackPlayerListReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlackPlayerListReqMsg.ProtoReflect.Descriptor instead.
func (*GetBlackPlayerListReqMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{16}
}

type SyncBlackPlayerIdListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId []int64 `protobuf:"varint,1,rep,name=playerId" json:"playerId,omitempty"`
}

func (x *SyncBlackPlayerIdListMsg) Reset() {
	*x = SyncBlackPlayerIdListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncBlackPlayerIdListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncBlackPlayerIdListMsg) ProtoMessage() {}

func (x *SyncBlackPlayerIdListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncBlackPlayerIdListMsg.ProtoReflect.Descriptor instead.
func (*SyncBlackPlayerIdListMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{17}
}

func (x *SyncBlackPlayerIdListMsg) GetPlayerId() []int64 {
	if x != nil {
		return x.PlayerId
	}
	return nil
}

type GetBlackPlayerListRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *int32               `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	PlayerInfo []*PlayerBaseDataMsg `protobuf:"bytes,2,rep,name=playerInfo" json:"playerInfo,omitempty"`
}

func (x *GetBlackPlayerListRespMsg) Reset() {
	*x = GetBlackPlayerListRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlackPlayerListRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlackPlayerListRespMsg) ProtoMessage() {}

func (x *GetBlackPlayerListRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlackPlayerListRespMsg.ProtoReflect.Descriptor instead.
func (*GetBlackPlayerListRespMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{18}
}

func (x *GetBlackPlayerListRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *GetBlackPlayerListRespMsg) GetPlayerInfo() []*PlayerBaseDataMsg {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

type WorldMessageCheckEffectiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32  `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	OnlyId     *string `protobuf:"bytes,2,opt,name=onlyId" json:"onlyId,omitempty"`
}

func (x *WorldMessageCheckEffectiveReq) Reset() {
	*x = WorldMessageCheckEffectiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldMessageCheckEffectiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldMessageCheckEffectiveReq) ProtoMessage() {}

func (x *WorldMessageCheckEffectiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldMessageCheckEffectiveReq.ProtoReflect.Descriptor instead.
func (*WorldMessageCheckEffectiveReq) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{19}
}

func (x *WorldMessageCheckEffectiveReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *WorldMessageCheckEffectiveReq) GetOnlyId() string {
	if x != nil && x.OnlyId != nil {
		return *x.OnlyId
	}
	return ""
}

type WorldMessageCheckEffectiveRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret         *int32 `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	IsEffective *bool  `protobuf:"varint,2,opt,name=isEffective" json:"isEffective,omitempty"`
}

func (x *WorldMessageCheckEffectiveRsp) Reset() {
	*x = WorldMessageCheckEffectiveRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldMessageCheckEffectiveRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldMessageCheckEffectiveRsp) ProtoMessage() {}

func (x *WorldMessageCheckEffectiveRsp) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldMessageCheckEffectiveRsp.ProtoReflect.Descriptor instead.
func (*WorldMessageCheckEffectiveRsp) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{20}
}

func (x *WorldMessageCheckEffectiveRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *WorldMessageCheckEffectiveRsp) GetIsEffective() bool {
	if x != nil && x.IsEffective != nil {
		return *x.IsEffective
	}
	return false
}

type ReportMessageReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EMessageType    *int32  `protobuf:"varint,1,req,name=eMessageType" json:"eMessageType,omitempty"`
	LogId           *string `protobuf:"bytes,2,req,name=logId" json:"logId,omitempty"`
	ActivityId      *int32  `protobuf:"varint,3,opt,name=activityId" json:"activityId,omitempty"`
	ContentType     *int32  `protobuf:"varint,4,opt,name=contentType" json:"contentType,omitempty"`
	ViolationReason *string `protobuf:"bytes,5,opt,name=violationReason" json:"violationReason,omitempty"`
	ViolationType   *int32  `protobuf:"varint,6,opt,name=violationType" json:"violationType,omitempty"`
	TargetPlayerId  *string `protobuf:"bytes,7,opt,name=targetPlayerId" json:"targetPlayerId,omitempty"`
}

func (x *ReportMessageReqMsg) Reset() {
	*x = ReportMessageReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportMessageReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportMessageReqMsg) ProtoMessage() {}

func (x *ReportMessageReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportMessageReqMsg.ProtoReflect.Descriptor instead.
func (*ReportMessageReqMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{21}
}

func (x *ReportMessageReqMsg) GetEMessageType() int32 {
	if x != nil && x.EMessageType != nil {
		return *x.EMessageType
	}
	return 0
}

func (x *ReportMessageReqMsg) GetLogId() string {
	if x != nil && x.LogId != nil {
		return *x.LogId
	}
	return ""
}

func (x *ReportMessageReqMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ReportMessageReqMsg) GetContentType() int32 {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return 0
}

func (x *ReportMessageReqMsg) GetViolationReason() string {
	if x != nil && x.ViolationReason != nil {
		return *x.ViolationReason
	}
	return ""
}

func (x *ReportMessageReqMsg) GetViolationType() int32 {
	if x != nil && x.ViolationType != nil {
		return *x.ViolationType
	}
	return 0
}

func (x *ReportMessageReqMsg) GetTargetPlayerId() string {
	if x != nil && x.TargetPlayerId != nil {
		return *x.TargetPlayerId
	}
	return ""
}

type ReportMessageRespMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *ReportMessageRespMsg) Reset() {
	*x = ReportMessageRespMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportMessageRespMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportMessageRespMsg) ProtoMessage() {}

func (x *ReportMessageRespMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportMessageRespMsg.ProtoReflect.Descriptor instead.
func (*ReportMessageRespMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{22}
}

func (x *ReportMessageRespMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

// ******************** 聊天红包 ********************
type RedPacketStateMsgSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32               `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	StateList  []*RedPacketSmallMsg `protobuf:"bytes,2,rep,name=stateList" json:"stateList,omitempty"`
	Num        *int32               `protobuf:"varint,3,req,name=num" json:"num,omitempty"`
	Limit      *int32               `protobuf:"varint,4,req,name=limit" json:"limit,omitempty"`
}

func (x *RedPacketStateMsgSync) Reset() {
	*x = RedPacketStateMsgSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketStateMsgSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketStateMsgSync) ProtoMessage() {}

func (x *RedPacketStateMsgSync) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketStateMsgSync.ProtoReflect.Descriptor instead.
func (*RedPacketStateMsgSync) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{23}
}

func (x *RedPacketStateMsgSync) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *RedPacketStateMsgSync) GetStateList() []*RedPacketSmallMsg {
	if x != nil {
		return x.StateList
	}
	return nil
}

func (x *RedPacketStateMsgSync) GetNum() int32 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

func (x *RedPacketStateMsgSync) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type RedPacketSmallMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	State       *int32  `protobuf:"varint,2,req,name=state" json:"state,omitempty"`
	Content     *string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	Name        *string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	ExpiredTime *int64  `protobuf:"varint,5,opt,name=expiredTime" json:"expiredTime,omitempty"`
	PlayerId    *int64  `protobuf:"varint,6,opt,name=playerId" json:"playerId,omitempty"`
}

func (x *RedPacketSmallMsg) Reset() {
	*x = RedPacketSmallMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketSmallMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketSmallMsg) ProtoMessage() {}

func (x *RedPacketSmallMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketSmallMsg.ProtoReflect.Descriptor instead.
func (*RedPacketSmallMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{24}
}

func (x *RedPacketSmallMsg) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *RedPacketSmallMsg) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *RedPacketSmallMsg) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *RedPacketSmallMsg) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RedPacketSmallMsg) GetExpiredTime() int64 {
	if x != nil && x.ExpiredTime != nil {
		return *x.ExpiredTime
	}
	return 0
}

func (x *RedPacketSmallMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type RedPacketMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *string              `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Type        *int32               `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Total       *int32               `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Sender      *PlayerBaseDataMsg   `protobuf:"bytes,4,opt,name=sender" json:"sender,omitempty"`
	Received    []*RedPacketReceived `protobuf:"bytes,5,rep,name=received" json:"received,omitempty"`
	ExpiredTime *int64               `protobuf:"varint,6,opt,name=expiredTime" json:"expiredTime,omitempty"`
	LuckyPlayer *int64               `protobuf:"varint,7,opt,name=luckyPlayer" json:"luckyPlayer,omitempty"`
}

func (x *RedPacketMsg) Reset() {
	*x = RedPacketMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketMsg) ProtoMessage() {}

func (x *RedPacketMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketMsg.ProtoReflect.Descriptor instead.
func (*RedPacketMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{25}
}

func (x *RedPacketMsg) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *RedPacketMsg) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *RedPacketMsg) GetTotal() int32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *RedPacketMsg) GetSender() *PlayerBaseDataMsg {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *RedPacketMsg) GetReceived() []*RedPacketReceived {
	if x != nil {
		return x.Received
	}
	return nil
}

func (x *RedPacketMsg) GetExpiredTime() int64 {
	if x != nil && x.ExpiredTime != nil {
		return *x.ExpiredTime
	}
	return 0
}

func (x *RedPacketMsg) GetLuckyPlayer() int64 {
	if x != nil && x.LuckyPlayer != nil {
		return *x.LuckyPlayer
	}
	return 0
}

type RedPacketReceived struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player  *PlayerBaseDataMsg `protobuf:"bytes,1,opt,name=player" json:"player,omitempty"`
	Rewards *string            `protobuf:"bytes,2,opt,name=rewards" json:"rewards,omitempty"`
}

func (x *RedPacketReceived) Reset() {
	*x = RedPacketReceived{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketReceived) ProtoMessage() {}

func (x *RedPacketReceived) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketReceived.ProtoReflect.Descriptor instead.
func (*RedPacketReceived) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{26}
}

func (x *RedPacketReceived) GetPlayer() *PlayerBaseDataMsg {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *RedPacketReceived) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

type RedPacketExtraData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards  *string `protobuf:"bytes,1,opt,name=rewards" json:"rewards,omitempty"`
	Duration *int32  `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
}

func (x *RedPacketExtraData) Reset() {
	*x = RedPacketExtraData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketExtraData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketExtraData) ProtoMessage() {}

func (x *RedPacketExtraData) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketExtraData.ProtoReflect.Descriptor instead.
func (*RedPacketExtraData) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{27}
}

func (x *RedPacketExtraData) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

func (x *RedPacketExtraData) GetDuration() int32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

type RedPacketOpenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Id         *string `protobuf:"bytes,2,req,name=id" json:"id,omitempty"`
}

func (x *RedPacketOpenReq) Reset() {
	*x = RedPacketOpenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketOpenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketOpenReq) ProtoMessage() {}

func (x *RedPacketOpenReq) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketOpenReq.ProtoReflect.Descriptor instead.
func (*RedPacketOpenReq) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{28}
}

func (x *RedPacketOpenReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *RedPacketOpenReq) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type RedPacketOpenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  *int32        `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Data *RedPacketMsg `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (x *RedPacketOpenResp) Reset() {
	*x = RedPacketOpenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketOpenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketOpenResp) ProtoMessage() {}

func (x *RedPacketOpenResp) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketOpenResp.ProtoReflect.Descriptor instead.
func (*RedPacketOpenResp) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{29}
}

func (x *RedPacketOpenResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RedPacketOpenResp) GetData() *RedPacketMsg {
	if x != nil {
		return x.Data
	}
	return nil
}

type RedPacketDrawReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Id         *string `protobuf:"bytes,2,req,name=id" json:"id,omitempty"`
}

func (x *RedPacketDrawReq) Reset() {
	*x = RedPacketDrawReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketDrawReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketDrawReq) ProtoMessage() {}

func (x *RedPacketDrawReq) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketDrawReq.ProtoReflect.Descriptor instead.
func (*RedPacketDrawReq) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{30}
}

func (x *RedPacketDrawReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *RedPacketDrawReq) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type RedPacketDrawResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     *int32        `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Data    *RedPacketMsg `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Rewards *string       `protobuf:"bytes,3,opt,name=rewards" json:"rewards,omitempty"`
}

func (x *RedPacketDrawResp) Reset() {
	*x = RedPacketDrawResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketDrawResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketDrawResp) ProtoMessage() {}

func (x *RedPacketDrawResp) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketDrawResp.ProtoReflect.Descriptor instead.
func (*RedPacketDrawResp) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{31}
}

func (x *RedPacketDrawResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *RedPacketDrawResp) GetData() *RedPacketMsg {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RedPacketDrawResp) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

// ******************** ******* ********************
type PlayerEmoticonDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmoticonList []*SingleEmoticonInfo `protobuf:"bytes,1,rep,name=emoticonList" json:"emoticonList,omitempty"`
}

func (x *PlayerEmoticonDataMsg) Reset() {
	*x = PlayerEmoticonDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerEmoticonDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerEmoticonDataMsg) ProtoMessage() {}

func (x *PlayerEmoticonDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerEmoticonDataMsg.ProtoReflect.Descriptor instead.
func (*PlayerEmoticonDataMsg) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{32}
}

func (x *PlayerEmoticonDataMsg) GetEmoticonList() []*SingleEmoticonInfo {
	if x != nil {
		return x.EmoticonList
	}
	return nil
}

type PlayerEmoticonDataSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncData *PlayerEmoticonDataMsg `protobuf:"bytes,1,opt,name=syncData" json:"syncData,omitempty"`
}

func (x *PlayerEmoticonDataSync) Reset() {
	*x = PlayerEmoticonDataSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerEmoticonDataSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerEmoticonDataSync) ProtoMessage() {}

func (x *PlayerEmoticonDataSync) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerEmoticonDataSync.ProtoReflect.Descriptor instead.
func (*PlayerEmoticonDataSync) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{33}
}

func (x *PlayerEmoticonDataSync) GetSyncData() *PlayerEmoticonDataMsg {
	if x != nil {
		return x.SyncData
	}
	return nil
}

type SingleEmoticonInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	EndTime *int64 `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
}

func (x *SingleEmoticonInfo) Reset() {
	*x = SingleEmoticonInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_WorldMessage_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleEmoticonInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleEmoticonInfo) ProtoMessage() {}

func (x *SingleEmoticonInfo) ProtoReflect() protoreflect.Message {
	mi := &file_WorldMessage_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleEmoticonInfo.ProtoReflect.Descriptor instead.
func (*SingleEmoticonInfo) Descriptor() ([]byte, []int) {
	return file_WorldMessage_proto_rawDescGZIP(), []int{34}
}

func (x *SingleEmoticonInfo) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *SingleEmoticonInfo) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

var File_WorldMessage_proto protoreflect.FileDescriptor

var file_WorldMessage_proto_rawDesc = []byte{
	0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x03, 0x0a, 0x13, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x73, 0x67, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x44, 0x0a, 0x0c, 0x61, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x41, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a,
	0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0c, 0x41, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a,
	0x13, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x73, 0x67, 0x12, 0x43, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x73, 0x67, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xef, 0x01, 0x0a, 0x0f, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a,
	0x0c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x10, 0x57,
	0x6f, 0x72, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x10, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x13, 0x48, 0x6f, 0x72,
	0x73, 0x65, 0x52, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x22, 0x27, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1e, 0x0a,
	0x0a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x36, 0x0a,
	0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x4d, 0x73,
	0x67, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4e, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x43, 0x68,
	0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x15, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x43, 0x68,
	0x61, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x22, 0x45, 0x0a, 0x15, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x22, 0x36, 0x0a, 0x18,
	0x53, 0x79, 0x6e, 0x63, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x57, 0x0a, 0x1d, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x6e, 0x6c, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x6e, 0x6c,
	0x79, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x1d, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x45,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x89, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x76,
	0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0xa4,
	0x01, 0x0a, 0x15, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4d, 0x73, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x4d,
	0x73, 0x67, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8e, 0x02,
	0x0a, 0x0c, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x52,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x75, 0x63, 0x6b, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x6c,
	0x0a, 0x11, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x4a, 0x0a, 0x12,
	0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x10, 0x52, 0x65, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x11,
	0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x10, 0x52, 0x65, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x75, 0x0a,
	0x11, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x72, 0x61, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x22, 0x63, 0x0a, 0x15, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6d,
	0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x4a, 0x0a,
	0x0c, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x45,
	0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x65, 0x6d, 0x6f,
	0x74, 0x69, 0x63, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x16, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x45, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67,
	0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a, 0x12, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67,
	0x71, 0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67,
	0x61, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b,
	0x70, 0x62,
}

var (
	file_WorldMessage_proto_rawDescOnce sync.Once
	file_WorldMessage_proto_rawDescData = file_WorldMessage_proto_rawDesc
)

func file_WorldMessage_proto_rawDescGZIP() []byte {
	file_WorldMessage_proto_rawDescOnce.Do(func() {
		file_WorldMessage_proto_rawDescData = protoimpl.X.CompressGZIP(file_WorldMessage_proto_rawDescData)
	})
	return file_WorldMessage_proto_rawDescData
}

var file_WorldMessage_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_WorldMessage_proto_goTypes = []any{
	(*WorldMessageTempMsg)(nil),           // 0: com.yq.msg.CityMsg.WorldMessageTempMsg
	(*AtPlayerInfo)(nil),                  // 1: com.yq.msg.CityMsg.AtPlayerInfo
	(*WorldMessageListMsg)(nil),           // 2: com.yq.msg.CityMsg.WorldMessageListMsg
	(*WorldChatReqMsg)(nil),               // 3: com.yq.msg.CityMsg.WorldChatReqMsg
	(*WorldChatRespMsg)(nil),              // 4: com.yq.msg.CityMsg.WorldChatRespMsg
	(*FriendChatReqMsg)(nil),              // 5: com.yq.msg.CityMsg.FriendChatReqMsg
	(*ActivityChatReqMsg)(nil),            // 6: com.yq.msg.CityMsg.ActivityChatReqMsg
	(*HorseRaceLampMsgAdd)(nil),           // 7: com.yq.msg.CityMsg.HorseRaceLampMsgAdd
	(*ReportReq)(nil),                     // 8: com.yq.msg.CityMsg.ReportReq
	(*ReportResp)(nil),                    // 9: com.yq.msg.CityMsg.ReportResp
	(*SystemChatReqMsg)(nil),              // 10: com.yq.msg.CityMsg.SystemChatReqMsg
	(*WorldChatBlockReqMsg)(nil),          // 11: com.yq.msg.CityMsg.WorldChatBlockReqMsg
	(*WorldChatBlockRespMsg)(nil),         // 12: com.yq.msg.CityMsg.WorldChatBlockRespMsg
	(*WorldMessageExtraData)(nil),         // 13: com.yq.msg.CityMsg.WorldMessageExtraData
	(*RemoveBlackReqMsg)(nil),             // 14: com.yq.msg.CityMsg.RemoveBlackReqMsg
	(*RemoveBlackRespMsg)(nil),            // 15: com.yq.msg.CityMsg.RemoveBlackRespMsg
	(*GetBlackPlayerListReqMsg)(nil),      // 16: com.yq.msg.CityMsg.GetBlackPlayerListReqMsg
	(*SyncBlackPlayerIdListMsg)(nil),      // 17: com.yq.msg.CityMsg.SyncBlackPlayerIdListMsg
	(*GetBlackPlayerListRespMsg)(nil),     // 18: com.yq.msg.CityMsg.GetBlackPlayerListRespMsg
	(*WorldMessageCheckEffectiveReq)(nil), // 19: com.yq.msg.CityMsg.WorldMessageCheckEffectiveReq
	(*WorldMessageCheckEffectiveRsp)(nil), // 20: com.yq.msg.CityMsg.WorldMessageCheckEffectiveRsp
	(*ReportMessageReqMsg)(nil),           // 21: com.yq.msg.CityMsg.ReportMessageReqMsg
	(*ReportMessageRespMsg)(nil),          // 22: com.yq.msg.CityMsg.ReportMessageRespMsg
	(*RedPacketStateMsgSync)(nil),         // 23: com.yq.msg.CityMsg.RedPacketStateMsgSync
	(*RedPacketSmallMsg)(nil),             // 24: com.yq.msg.CityMsg.RedPacketSmallMsg
	(*RedPacketMsg)(nil),                  // 25: com.yq.msg.CityMsg.RedPacketMsg
	(*RedPacketReceived)(nil),             // 26: com.yq.msg.CityMsg.RedPacketReceived
	(*RedPacketExtraData)(nil),            // 27: com.yq.msg.CityMsg.RedPacketExtraData
	(*RedPacketOpenReq)(nil),              // 28: com.yq.msg.CityMsg.RedPacketOpenReq
	(*RedPacketOpenResp)(nil),             // 29: com.yq.msg.CityMsg.RedPacketOpenResp
	(*RedPacketDrawReq)(nil),              // 30: com.yq.msg.CityMsg.RedPacketDrawReq
	(*RedPacketDrawResp)(nil),             // 31: com.yq.msg.CityMsg.RedPacketDrawResp
	(*PlayerEmoticonDataMsg)(nil),         // 32: com.yq.msg.CityMsg.PlayerEmoticonDataMsg
	(*PlayerEmoticonDataSync)(nil),        // 33: com.yq.msg.CityMsg.PlayerEmoticonDataSync
	(*SingleEmoticonInfo)(nil),            // 34: com.yq.msg.CityMsg.SingleEmoticonInfo
	(*PlayerBaseDataMsg)(nil),             // 35: com.yq.msg.CityMsg.PlayerBaseDataMsg
}
var file_WorldMessage_proto_depIdxs = []int32{
	35, // 0: com.yq.msg.CityMsg.WorldMessageTempMsg.playerBaseData:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	1,  // 1: com.yq.msg.CityMsg.WorldMessageTempMsg.atPlayerInfo:type_name -> com.yq.msg.CityMsg.AtPlayerInfo
	0,  // 2: com.yq.msg.CityMsg.WorldMessageListMsg.dataList:type_name -> com.yq.msg.CityMsg.WorldMessageTempMsg
	1,  // 3: com.yq.msg.CityMsg.WorldChatReqMsg.atPlayerInfo:type_name -> com.yq.msg.CityMsg.AtPlayerInfo
	35, // 4: com.yq.msg.CityMsg.GetBlackPlayerListRespMsg.playerInfo:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	24, // 5: com.yq.msg.CityMsg.RedPacketStateMsgSync.stateList:type_name -> com.yq.msg.CityMsg.RedPacketSmallMsg
	35, // 6: com.yq.msg.CityMsg.RedPacketMsg.sender:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	26, // 7: com.yq.msg.CityMsg.RedPacketMsg.received:type_name -> com.yq.msg.CityMsg.RedPacketReceived
	35, // 8: com.yq.msg.CityMsg.RedPacketReceived.player:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	25, // 9: com.yq.msg.CityMsg.RedPacketOpenResp.data:type_name -> com.yq.msg.CityMsg.RedPacketMsg
	25, // 10: com.yq.msg.CityMsg.RedPacketDrawResp.data:type_name -> com.yq.msg.CityMsg.RedPacketMsg
	34, // 11: com.yq.msg.CityMsg.PlayerEmoticonDataMsg.emoticonList:type_name -> com.yq.msg.CityMsg.SingleEmoticonInfo
	32, // 12: com.yq.msg.CityMsg.PlayerEmoticonDataSync.syncData:type_name -> com.yq.msg.CityMsg.PlayerEmoticonDataMsg
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_WorldMessage_proto_init() }
func file_WorldMessage_proto_init() {
	if File_WorldMessage_proto != nil {
		return
	}
	file_Common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_WorldMessage_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*WorldMessageTempMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AtPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*WorldMessageListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*WorldChatReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*WorldChatRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*FriendChatReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityChatReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*HorseRaceLampMsgAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ReportResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SystemChatReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*WorldChatBlockReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*WorldChatBlockRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*WorldMessageExtraData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveBlackReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveBlackRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetBlackPlayerListReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*SyncBlackPlayerIdListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetBlackPlayerListRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*WorldMessageCheckEffectiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*WorldMessageCheckEffectiveRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ReportMessageReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ReportMessageRespMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*RedPacketStateMsgSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*RedPacketSmallMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*RedPacketMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*RedPacketReceived); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*RedPacketExtraData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*RedPacketOpenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*RedPacketOpenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*RedPacketDrawReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*RedPacketDrawResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerEmoticonDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerEmoticonDataSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_WorldMessage_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*SingleEmoticonInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_WorldMessage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_WorldMessage_proto_goTypes,
		DependencyIndexes: file_WorldMessage_proto_depIdxs,
		MessageInfos:      file_WorldMessage_proto_msgTypes,
	}.Build()
	File_WorldMessage_proto = out.File
	file_WorldMessage_proto_rawDesc = nil
	file_WorldMessage_proto_goTypes = nil
	file_WorldMessage_proto_depIdxs = nil
}
