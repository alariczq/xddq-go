// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: PackagesBase.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PackagesBaseProtocols int32

const (
	PackagesBaseProtocols_SkyWarPb_Login_Sync           PackagesBaseProtocols = 208414
	PackagesBaseProtocols_SYNC_UNION_DUEL_MSG           PackagesBaseProtocols = 208501
	PackagesBaseProtocols_S_UNION_DUEL_OPEN_VIEW        PackagesBaseProtocols = 208502
	PackagesBaseProtocols_S_UNION_DUEL_SYNC_DATA        PackagesBaseProtocols = 208511
	PackagesBaseProtocols_TRIAL_SYNC_BOSS_CONFIG        PackagesBaseProtocols = 209104
	PackagesBaseProtocols_TRIAL_PLAYER_DATA_SYNC        PackagesBaseProtocols = 209105
	PackagesBaseProtocols_MOUNTAIN_SEA_LOGIN_SYNC       PackagesBaseProtocols = 209733
	PackagesBaseProtocols_Holy_Land_Battle_Login_Sync   PackagesBaseProtocols = 209570
	PackagesBaseProtocols_Holy_Land_Battle_Time_Sync    PackagesBaseProtocols = 209575
	PackagesBaseProtocols_S_SOUL_LIQUID_DATA_MSG        PackagesBaseProtocols = 209801
	PackagesBaseProtocols_ASKDING_GET_CHAMPION_INFO     PackagesBaseProtocols = 205935
	PackagesBaseProtocols_ASKDING_SYNC_PLAYER_JOIN      PackagesBaseProtocols = 205938
	PackagesBaseProtocols_S_SKY_PRESENT_DATA_SYNC       PackagesBaseProtocols = 209910
	PackagesBaseProtocols_DOUBLE_DEMONS_DATA_LOGIN_SYNC PackagesBaseProtocols = 211111
	PackagesBaseProtocols_DOUBLE_DEMONS_AGREE           PackagesBaseProtocols = 211112
	PackagesBaseProtocols_DOUBLE_DEMONS_REFUSE          PackagesBaseProtocols = 211113
	PackagesBaseProtocols_DOUBLE_DEMONS_RECEIVE_PRESENT PackagesBaseProtocols = 211114
	PackagesBaseProtocols_DOUBLE_DEMONS_APPOINT_INVITE  PackagesBaseProtocols = 211106
	PackagesBaseProtocols_TOWNDEMON_LOGIN_SYNC          PackagesBaseProtocols = 213250
	PackagesBaseProtocols_TOWNDEMON_TIME_SYNC           PackagesBaseProtocols = 213251
	PackagesBaseProtocols_S_FRIEND_SYNC                 PackagesBaseProtocols = 214130
	PackagesBaseProtocols_S_FRIEND_SYNC_MODIFY          PackagesBaseProtocols = 214132
	PackagesBaseProtocols_S_UNIVERSE_SYNC_PLAYER_DATA   PackagesBaseProtocols = 214302
	PackagesBaseProtocols_FairyLandPb_Sync_Player_Data  PackagesBaseProtocols = 214202
	PackagesBaseProtocols_FairyLandPb_Sync_Server_Data  PackagesBaseProtocols = 214211
	PackagesBaseProtocols_S_PAINT_FAIRYLAND_BEING_SYNC  PackagesBaseProtocols = 214670
	PackagesBaseProtocols_S_PAINT_FAIRYLAND_CHECK_POOL  PackagesBaseProtocols = 214698
	PackagesBaseProtocols_ShuraBattle_applyJoinTeam     PackagesBaseProtocols = 215910
	PackagesBaseProtocols_YARD_LOGIN_SYNC               PackagesBaseProtocols = 215843
	PackagesBaseProtocols_YARD_BUILD_UP_SYNC            PackagesBaseProtocols = 215851
)

// Enum value maps for PackagesBaseProtocols.
var (
	PackagesBaseProtocols_name = map[int32]string{
		208414: "SkyWarPb_Login_Sync",
		208501: "SYNC_UNION_DUEL_MSG",
		208502: "S_UNION_DUEL_OPEN_VIEW",
		208511: "S_UNION_DUEL_SYNC_DATA",
		209104: "TRIAL_SYNC_BOSS_CONFIG",
		209105: "TRIAL_PLAYER_DATA_SYNC",
		209733: "MOUNTAIN_SEA_LOGIN_SYNC",
		209570: "Holy_Land_Battle_Login_Sync",
		209575: "Holy_Land_Battle_Time_Sync",
		209801: "S_SOUL_LIQUID_DATA_MSG",
		205935: "ASKDING_GET_CHAMPION_INFO",
		205938: "ASKDING_SYNC_PLAYER_JOIN",
		209910: "S_SKY_PRESENT_DATA_SYNC",
		211111: "DOUBLE_DEMONS_DATA_LOGIN_SYNC",
		211112: "DOUBLE_DEMONS_AGREE",
		211113: "DOUBLE_DEMONS_REFUSE",
		211114: "DOUBLE_DEMONS_RECEIVE_PRESENT",
		211106: "DOUBLE_DEMONS_APPOINT_INVITE",
		213250: "TOWNDEMON_LOGIN_SYNC",
		213251: "TOWNDEMON_TIME_SYNC",
		214130: "S_FRIEND_SYNC",
		214132: "S_FRIEND_SYNC_MODIFY",
		214302: "S_UNIVERSE_SYNC_PLAYER_DATA",
		214202: "FairyLandPb_Sync_Player_Data",
		214211: "FairyLandPb_Sync_Server_Data",
		214670: "S_PAINT_FAIRYLAND_BEING_SYNC",
		214698: "S_PAINT_FAIRYLAND_CHECK_POOL",
		215910: "ShuraBattle_applyJoinTeam",
		215843: "YARD_LOGIN_SYNC",
		215851: "YARD_BUILD_UP_SYNC",
	}
	PackagesBaseProtocols_value = map[string]int32{
		"SkyWarPb_Login_Sync":           208414,
		"SYNC_UNION_DUEL_MSG":           208501,
		"S_UNION_DUEL_OPEN_VIEW":        208502,
		"S_UNION_DUEL_SYNC_DATA":        208511,
		"TRIAL_SYNC_BOSS_CONFIG":        209104,
		"TRIAL_PLAYER_DATA_SYNC":        209105,
		"MOUNTAIN_SEA_LOGIN_SYNC":       209733,
		"Holy_Land_Battle_Login_Sync":   209570,
		"Holy_Land_Battle_Time_Sync":    209575,
		"S_SOUL_LIQUID_DATA_MSG":        209801,
		"ASKDING_GET_CHAMPION_INFO":     205935,
		"ASKDING_SYNC_PLAYER_JOIN":      205938,
		"S_SKY_PRESENT_DATA_SYNC":       209910,
		"DOUBLE_DEMONS_DATA_LOGIN_SYNC": 211111,
		"DOUBLE_DEMONS_AGREE":           211112,
		"DOUBLE_DEMONS_REFUSE":          211113,
		"DOUBLE_DEMONS_RECEIVE_PRESENT": 211114,
		"DOUBLE_DEMONS_APPOINT_INVITE":  211106,
		"TOWNDEMON_LOGIN_SYNC":          213250,
		"TOWNDEMON_TIME_SYNC":           213251,
		"S_FRIEND_SYNC":                 214130,
		"S_FRIEND_SYNC_MODIFY":          214132,
		"S_UNIVERSE_SYNC_PLAYER_DATA":   214302,
		"FairyLandPb_Sync_Player_Data":  214202,
		"FairyLandPb_Sync_Server_Data":  214211,
		"S_PAINT_FAIRYLAND_BEING_SYNC":  214670,
		"S_PAINT_FAIRYLAND_CHECK_POOL":  214698,
		"ShuraBattle_applyJoinTeam":     215910,
		"YARD_LOGIN_SYNC":               215843,
		"YARD_BUILD_UP_SYNC":            215851,
	}
)

func (x PackagesBaseProtocols) Enum() *PackagesBaseProtocols {
	p := new(PackagesBaseProtocols)
	*p = x
	return p
}

func (x PackagesBaseProtocols) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PackagesBaseProtocols) Descriptor() protoreflect.EnumDescriptor {
	return file_PackagesBase_proto_enumTypes[0].Descriptor()
}

func (PackagesBaseProtocols) Type() protoreflect.EnumType {
	return &file_PackagesBase_proto_enumTypes[0]
}

func (x PackagesBaseProtocols) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PackagesBaseProtocols) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PackagesBaseProtocols(num)
	return nil
}

// Deprecated: Use PackagesBaseProtocols.Descriptor instead.
func (PackagesBaseProtocols) EnumDescriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{0}
}

type RuleTrialType int32

const (
	RuleTrialType_Gold  RuleTrialType = 1
	RuleTrialType_Wood  RuleTrialType = 2
	RuleTrialType_Water RuleTrialType = 3
	RuleTrialType_Fire  RuleTrialType = 4
	RuleTrialType_Earth RuleTrialType = 5
)

// Enum value maps for RuleTrialType.
var (
	RuleTrialType_name = map[int32]string{
		1: "Gold",
		2: "Wood",
		3: "Water",
		4: "Fire",
		5: "Earth",
	}
	RuleTrialType_value = map[string]int32{
		"Gold":  1,
		"Wood":  2,
		"Water": 3,
		"Fire":  4,
		"Earth": 5,
	}
)

func (x RuleTrialType) Enum() *RuleTrialType {
	p := new(RuleTrialType)
	*p = x
	return p
}

func (x RuleTrialType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuleTrialType) Descriptor() protoreflect.EnumDescriptor {
	return file_PackagesBase_proto_enumTypes[1].Descriptor()
}

func (RuleTrialType) Type() protoreflect.EnumType {
	return &file_PackagesBase_proto_enumTypes[1]
}

func (x RuleTrialType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RuleTrialType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RuleTrialType(num)
	return nil
}

// Deprecated: Use RuleTrialType.Descriptor instead.
func (RuleTrialType) EnumDescriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{1}
}

type SkyWarDataLoginSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleTimes  *int32 `protobuf:"varint,1,opt,name=battleTimes" json:"battleTimes,omitempty"`
	IsJoinWar    *bool  `protobuf:"varint,2,opt,name=isJoinWar" json:"isJoinWar,omitempty"`
	WaitNextWeek *bool  `protobuf:"varint,3,opt,name=waitNextWeek" json:"waitNextWeek,omitempty"`
}

func (x *SkyWarDataLoginSync) Reset() {
	*x = SkyWarDataLoginSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkyWarDataLoginSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkyWarDataLoginSync) ProtoMessage() {}

func (x *SkyWarDataLoginSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkyWarDataLoginSync.ProtoReflect.Descriptor instead.
func (*SkyWarDataLoginSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{0}
}

func (x *SkyWarDataLoginSync) GetBattleTimes() int32 {
	if x != nil && x.BattleTimes != nil {
		return *x.BattleTimes
	}
	return 0
}

func (x *SkyWarDataLoginSync) GetIsJoinWar() bool {
	if x != nil && x.IsJoinWar != nil {
		return *x.IsJoinWar
	}
	return false
}

func (x *SkyWarDataLoginSync) GetWaitNextWeek() bool {
	if x != nil && x.WaitNextWeek != nil {
		return *x.WaitNextWeek
	}
	return false
}

type UnionDuelSyncMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NeedResult *bool `protobuf:"varint,1,req,name=needResult" json:"needResult,omitempty"`
}

func (x *UnionDuelSyncMsgReq) Reset() {
	*x = UnionDuelSyncMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionDuelSyncMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionDuelSyncMsgReq) ProtoMessage() {}

func (x *UnionDuelSyncMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionDuelSyncMsgReq.ProtoReflect.Descriptor instead.
func (*UnionDuelSyncMsgReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{1}
}

func (x *UnionDuelSyncMsgReq) GetNeedResult() bool {
	if x != nil && x.NeedResult != nil {
		return *x.NeedResult
	}
	return false
}

type SyncUnionDuelMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret              *int32                    `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	HasQualification *bool                     `protobuf:"varint,2,opt,name=hasQualification" json:"hasQualification,omitempty"`
	MasterOrDeputy   *bool                     `protobuf:"varint,3,opt,name=masterOrDeputy" json:"masterOrDeputy,omitempty"`
	State            *int32                    `protobuf:"varint,4,opt,name=state" json:"state,omitempty"`
	MyUnion          *UnionDuelBattleResultMsg `protobuf:"bytes,5,opt,name=myUnion" json:"myUnion,omitempty"`
	OppoUnion        *UnionDuelBattleResultMsg `protobuf:"bytes,6,opt,name=oppoUnion" json:"oppoUnion,omitempty"`
	BattleState      *int32                    `protobuf:"varint,7,opt,name=battleState" json:"battleState,omitempty"`
}

func (x *SyncUnionDuelMsg) Reset() {
	*x = SyncUnionDuelMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncUnionDuelMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncUnionDuelMsg) ProtoMessage() {}

func (x *SyncUnionDuelMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncUnionDuelMsg.ProtoReflect.Descriptor instead.
func (*SyncUnionDuelMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{2}
}

func (x *SyncUnionDuelMsg) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *SyncUnionDuelMsg) GetHasQualification() bool {
	if x != nil && x.HasQualification != nil {
		return *x.HasQualification
	}
	return false
}

func (x *SyncUnionDuelMsg) GetMasterOrDeputy() bool {
	if x != nil && x.MasterOrDeputy != nil {
		return *x.MasterOrDeputy
	}
	return false
}

func (x *SyncUnionDuelMsg) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *SyncUnionDuelMsg) GetMyUnion() *UnionDuelBattleResultMsg {
	if x != nil {
		return x.MyUnion
	}
	return nil
}

func (x *SyncUnionDuelMsg) GetOppoUnion() *UnionDuelBattleResultMsg {
	if x != nil {
		return x.OppoUnion
	}
	return nil
}

func (x *SyncUnionDuelMsg) GetBattleState() int32 {
	if x != nil && x.BattleState != nil {
		return *x.BattleState
	}
	return 0
}

type UnionDuelBattleResultMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionName *string `protobuf:"bytes,1,opt,name=unionName" json:"unionName,omitempty"`
	ServerId  *int64  `protobuf:"varint,2,opt,name=serverId" json:"serverId,omitempty"`
	Flag      *int32  `protobuf:"varint,3,opt,name=flag" json:"flag,omitempty"`
	Star      *int32  `protobuf:"varint,4,opt,name=star" json:"star,omitempty"`
	CurPeople *int32  `protobuf:"varint,5,opt,name=curPeople" json:"curPeople,omitempty"`
}

func (x *UnionDuelBattleResultMsg) Reset() {
	*x = UnionDuelBattleResultMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionDuelBattleResultMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionDuelBattleResultMsg) ProtoMessage() {}

func (x *UnionDuelBattleResultMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionDuelBattleResultMsg.ProtoReflect.Descriptor instead.
func (*UnionDuelBattleResultMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{3}
}

func (x *UnionDuelBattleResultMsg) GetUnionName() string {
	if x != nil && x.UnionName != nil {
		return *x.UnionName
	}
	return ""
}

func (x *UnionDuelBattleResultMsg) GetServerId() int64 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

func (x *UnionDuelBattleResultMsg) GetFlag() int32 {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return 0
}

func (x *UnionDuelBattleResultMsg) GetStar() int32 {
	if x != nil && x.Star != nil {
		return *x.Star
	}
	return 0
}

func (x *UnionDuelBattleResultMsg) GetCurPeople() int32 {
	if x != nil && x.CurPeople != nil {
		return *x.CurPeople
	}
	return 0
}

type UnionDuelSyncDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId *int64 `protobuf:"varint,1,req,name=unionId" json:"unionId,omitempty"`
}

func (x *UnionDuelSyncDataReq) Reset() {
	*x = UnionDuelSyncDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionDuelSyncDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionDuelSyncDataReq) ProtoMessage() {}

func (x *UnionDuelSyncDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionDuelSyncDataReq.ProtoReflect.Descriptor instead.
func (*UnionDuelSyncDataReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{4}
}

func (x *UnionDuelSyncDataReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

type UnionDuelSyncDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	State *int32 `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
}

func (x *UnionDuelSyncDataResp) Reset() {
	*x = UnionDuelSyncDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionDuelSyncDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionDuelSyncDataResp) ProtoMessage() {}

func (x *UnionDuelSyncDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionDuelSyncDataResp.ProtoReflect.Descriptor instead.
func (*UnionDuelSyncDataResp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{5}
}

func (x *UnionDuelSyncDataResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *UnionDuelSyncDataResp) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

type UnionDuelOpenViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnionDuelOpenViewReq) Reset() {
	*x = UnionDuelOpenViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionDuelOpenViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionDuelOpenViewReq) ProtoMessage() {}

func (x *UnionDuelOpenViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionDuelOpenViewReq.ProtoReflect.Descriptor instead.
func (*UnionDuelOpenViewReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{6}
}

type UnionDuelOpenViewResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret              *int32              `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	IsApplication    *bool               `protobuf:"varint,2,opt,name=isApplication" json:"isApplication,omitempty"`
	IsBye            *bool               `protobuf:"varint,3,opt,name=isBye" json:"isBye,omitempty"`
	FightInfo        *UnionDuelFightInfo `protobuf:"bytes,4,opt,name=fightInfo" json:"fightInfo,omitempty"`
	Active           *int32              `protobuf:"varint,5,opt,name=active" json:"active,omitempty"`
	JoinLimit        []int32             `protobuf:"varint,6,rep,name=joinLimit" json:"joinLimit,omitempty"`
	HasQualification *bool               `protobuf:"varint,7,opt,name=hasQualification" json:"hasQualification,omitempty"`
}

func (x *UnionDuelOpenViewResp) Reset() {
	*x = UnionDuelOpenViewResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionDuelOpenViewResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionDuelOpenViewResp) ProtoMessage() {}

func (x *UnionDuelOpenViewResp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionDuelOpenViewResp.ProtoReflect.Descriptor instead.
func (*UnionDuelOpenViewResp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{7}
}

func (x *UnionDuelOpenViewResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *UnionDuelOpenViewResp) GetIsApplication() bool {
	if x != nil && x.IsApplication != nil {
		return *x.IsApplication
	}
	return false
}

func (x *UnionDuelOpenViewResp) GetIsBye() bool {
	if x != nil && x.IsBye != nil {
		return *x.IsBye
	}
	return false
}

func (x *UnionDuelOpenViewResp) GetFightInfo() *UnionDuelFightInfo {
	if x != nil {
		return x.FightInfo
	}
	return nil
}

func (x *UnionDuelOpenViewResp) GetActive() int32 {
	if x != nil && x.Active != nil {
		return *x.Active
	}
	return 0
}

func (x *UnionDuelOpenViewResp) GetJoinLimit() []int32 {
	if x != nil {
		return x.JoinLimit
	}
	return nil
}

func (x *UnionDuelOpenViewResp) GetHasQualification() bool {
	if x != nil && x.HasQualification != nil {
		return *x.HasQualification
	}
	return false
}

type UnionDuelFightInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyUnion     *UnionDuelBaseMsg          `protobuf:"bytes,1,opt,name=myUnion" json:"myUnion,omitempty"`
	OppoUnion   *UnionDuelBaseMsg          `protobuf:"bytes,2,opt,name=oppoUnion" json:"oppoUnion,omitempty"`
	CurLeftTime *int32                     `protobuf:"varint,3,opt,name=curLeftTime" json:"curLeftTime,omitempty"`
	Record      []*UnionDuelFightRecordMsg `protobuf:"bytes,4,rep,name=record" json:"record,omitempty"`
	State       *int32                     `protobuf:"varint,5,opt,name=state" json:"state,omitempty"`
}

func (x *UnionDuelFightInfo) Reset() {
	*x = UnionDuelFightInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionDuelFightInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionDuelFightInfo) ProtoMessage() {}

func (x *UnionDuelFightInfo) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionDuelFightInfo.ProtoReflect.Descriptor instead.
func (*UnionDuelFightInfo) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{8}
}

func (x *UnionDuelFightInfo) GetMyUnion() *UnionDuelBaseMsg {
	if x != nil {
		return x.MyUnion
	}
	return nil
}

func (x *UnionDuelFightInfo) GetOppoUnion() *UnionDuelBaseMsg {
	if x != nil {
		return x.OppoUnion
	}
	return nil
}

func (x *UnionDuelFightInfo) GetCurLeftTime() int32 {
	if x != nil && x.CurLeftTime != nil {
		return *x.CurLeftTime
	}
	return 0
}

func (x *UnionDuelFightInfo) GetRecord() []*UnionDuelFightRecordMsg {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *UnionDuelFightInfo) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

type UnionDuelBaseMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId     *int64                     `protobuf:"varint,1,opt,name=unionId" json:"unionId,omitempty"`
	UnionName   *string                    `protobuf:"bytes,2,opt,name=unionName" json:"unionName,omitempty"`
	Flag        *int32                     `protobuf:"varint,3,opt,name=flag" json:"flag,omitempty"`
	Power       *int64                     `protobuf:"varint,4,opt,name=power" json:"power,omitempty"`
	Star        *int32                     `protobuf:"varint,5,opt,name=star" json:"star,omitempty"`
	CurPeople   *int32                     `protobuf:"varint,6,opt,name=curPeople" json:"curPeople,omitempty"`
	MaxPeople   *int32                     `protobuf:"varint,7,opt,name=maxPeople" json:"maxPeople,omitempty"`
	CloudMember []*UnionDuelCloudMemberMsg `protobuf:"bytes,8,rep,name=cloudMember" json:"cloudMember,omitempty"`
	ServerId    *int64                     `protobuf:"varint,9,opt,name=serverId" json:"serverId,omitempty"`
}

func (x *UnionDuelBaseMsg) Reset() {
	*x = UnionDuelBaseMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionDuelBaseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionDuelBaseMsg) ProtoMessage() {}

func (x *UnionDuelBaseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionDuelBaseMsg.ProtoReflect.Descriptor instead.
func (*UnionDuelBaseMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{9}
}

func (x *UnionDuelBaseMsg) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

func (x *UnionDuelBaseMsg) GetUnionName() string {
	if x != nil && x.UnionName != nil {
		return *x.UnionName
	}
	return ""
}

func (x *UnionDuelBaseMsg) GetFlag() int32 {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return 0
}

func (x *UnionDuelBaseMsg) GetPower() int64 {
	if x != nil && x.Power != nil {
		return *x.Power
	}
	return 0
}

func (x *UnionDuelBaseMsg) GetStar() int32 {
	if x != nil && x.Star != nil {
		return *x.Star
	}
	return 0
}

func (x *UnionDuelBaseMsg) GetCurPeople() int32 {
	if x != nil && x.CurPeople != nil {
		return *x.CurPeople
	}
	return 0
}

func (x *UnionDuelBaseMsg) GetMaxPeople() int32 {
	if x != nil && x.MaxPeople != nil {
		return *x.MaxPeople
	}
	return 0
}

func (x *UnionDuelBaseMsg) GetCloudMember() []*UnionDuelCloudMemberMsg {
	if x != nil {
		return x.CloudMember
	}
	return nil
}

func (x *UnionDuelBaseMsg) GetServerId() int64 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

type UnionDuelCloudMemberMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAlive            *bool   `protobuf:"varint,1,opt,name=isAlive" json:"isAlive,omitempty"`
	HeadIcon           *int32  `protobuf:"varint,2,opt,name=headIcon" json:"headIcon,omitempty"`
	WxHeadUrl          *string `protobuf:"bytes,3,opt,name=wxHeadUrl" json:"wxHeadUrl,omitempty"`
	AppearanceId       *int32  `protobuf:"varint,4,opt,name=appearanceId" json:"appearanceId,omitempty"`
	EquipHeadIconFrame *int32  `protobuf:"varint,5,opt,name=equipHeadIconFrame" json:"equipHeadIconFrame,omitempty"`
	Level              *int32  `protobuf:"varint,6,opt,name=level" json:"level,omitempty"`
	PlayerId           *int64  `protobuf:"varint,7,opt,name=playerId" json:"playerId,omitempty"`
}

func (x *UnionDuelCloudMemberMsg) Reset() {
	*x = UnionDuelCloudMemberMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionDuelCloudMemberMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionDuelCloudMemberMsg) ProtoMessage() {}

func (x *UnionDuelCloudMemberMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionDuelCloudMemberMsg.ProtoReflect.Descriptor instead.
func (*UnionDuelCloudMemberMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{10}
}

func (x *UnionDuelCloudMemberMsg) GetIsAlive() bool {
	if x != nil && x.IsAlive != nil {
		return *x.IsAlive
	}
	return false
}

func (x *UnionDuelCloudMemberMsg) GetHeadIcon() int32 {
	if x != nil && x.HeadIcon != nil {
		return *x.HeadIcon
	}
	return 0
}

func (x *UnionDuelCloudMemberMsg) GetWxHeadUrl() string {
	if x != nil && x.WxHeadUrl != nil {
		return *x.WxHeadUrl
	}
	return ""
}

func (x *UnionDuelCloudMemberMsg) GetAppearanceId() int32 {
	if x != nil && x.AppearanceId != nil {
		return *x.AppearanceId
	}
	return 0
}

func (x *UnionDuelCloudMemberMsg) GetEquipHeadIconFrame() int32 {
	if x != nil && x.EquipHeadIconFrame != nil {
		return *x.EquipHeadIconFrame
	}
	return 0
}

func (x *UnionDuelCloudMemberMsg) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *UnionDuelCloudMemberMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type UnionDuelFightRecordMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time      *int64 `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	MyLevel   *int32 `protobuf:"varint,2,opt,name=myLevel" json:"myLevel,omitempty"`
	OppoLevel *int32 `protobuf:"varint,3,opt,name=oppoLevel" json:"oppoLevel,omitempty"`
	Type      *int32 `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
}

func (x *UnionDuelFightRecordMsg) Reset() {
	*x = UnionDuelFightRecordMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionDuelFightRecordMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionDuelFightRecordMsg) ProtoMessage() {}

func (x *UnionDuelFightRecordMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionDuelFightRecordMsg.ProtoReflect.Descriptor instead.
func (*UnionDuelFightRecordMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{11}
}

func (x *UnionDuelFightRecordMsg) GetTime() int64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *UnionDuelFightRecordMsg) GetMyLevel() int32 {
	if x != nil && x.MyLevel != nil {
		return *x.MyLevel
	}
	return 0
}

func (x *UnionDuelFightRecordMsg) GetOppoLevel() int32 {
	if x != nil && x.OppoLevel != nil {
		return *x.OppoLevel
	}
	return 0
}

func (x *UnionDuelFightRecordMsg) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type RuleTrialDataTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *RuleTrialType `protobuf:"varint,1,req,name=type,enum=com.yq.msg.CityMsg.RuleTrialType" json:"type,omitempty"`
	IsUnlock *bool          `protobuf:"varint,2,req,name=isUnlock" json:"isUnlock,omitempty"`
	BossId   *int32         `protobuf:"varint,3,req,name=bossId" json:"bossId,omitempty"`
}

func (x *RuleTrialDataTemp) Reset() {
	*x = RuleTrialDataTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleTrialDataTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleTrialDataTemp) ProtoMessage() {}

func (x *RuleTrialDataTemp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleTrialDataTemp.ProtoReflect.Descriptor instead.
func (*RuleTrialDataTemp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{12}
}

func (x *RuleTrialDataTemp) GetType() RuleTrialType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return RuleTrialType_Gold
}

func (x *RuleTrialDataTemp) GetIsUnlock() bool {
	if x != nil && x.IsUnlock != nil {
		return *x.IsUnlock
	}
	return false
}

func (x *RuleTrialDataTemp) GetBossId() int32 {
	if x != nil && x.BossId != nil {
		return *x.BossId
	}
	return 0
}

type RuleTrialDataSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data                []*RuleTrialDataTemp `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	TotalChallengeTimes *int32               `protobuf:"varint,2,req,name=totalChallengeTimes" json:"totalChallengeTimes,omitempty"`
	BestBoosId          *int32               `protobuf:"varint,3,req,name=bestBoosId" json:"bestBoosId,omitempty"`
	IsRepeated          *bool                `protobuf:"varint,4,req,name=isRepeated" json:"isRepeated,omitempty"`
	SysUnlockTime       *int64               `protobuf:"varint,5,req,name=sysUnlockTime" json:"sysUnlockTime,omitempty"`
}

func (x *RuleTrialDataSync) Reset() {
	*x = RuleTrialDataSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleTrialDataSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleTrialDataSync) ProtoMessage() {}

func (x *RuleTrialDataSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleTrialDataSync.ProtoReflect.Descriptor instead.
func (*RuleTrialDataSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{13}
}

func (x *RuleTrialDataSync) GetData() []*RuleTrialDataTemp {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RuleTrialDataSync) GetTotalChallengeTimes() int32 {
	if x != nil && x.TotalChallengeTimes != nil {
		return *x.TotalChallengeTimes
	}
	return 0
}

func (x *RuleTrialDataSync) GetBestBoosId() int32 {
	if x != nil && x.BestBoosId != nil {
		return *x.BestBoosId
	}
	return 0
}

func (x *RuleTrialDataSync) GetIsRepeated() bool {
	if x != nil && x.IsRepeated != nil {
		return *x.IsRepeated
	}
	return false
}

func (x *RuleTrialDataSync) GetSysUnlockTime() int64 {
	if x != nil && x.SysUnlockTime != nil {
		return *x.SysUnlockTime
	}
	return 0
}

type RuleTrialBossPowerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BossId *int32 `protobuf:"varint,1,req,name=bossId" json:"bossId,omitempty"`
	Power  *int64 `protobuf:"varint,2,req,name=power" json:"power,omitempty"`
}

func (x *RuleTrialBossPowerData) Reset() {
	*x = RuleTrialBossPowerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleTrialBossPowerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleTrialBossPowerData) ProtoMessage() {}

func (x *RuleTrialBossPowerData) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleTrialBossPowerData.ProtoReflect.Descriptor instead.
func (*RuleTrialBossPowerData) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{14}
}

func (x *RuleTrialBossPowerData) GetBossId() int32 {
	if x != nil && x.BossId != nil {
		return *x.BossId
	}
	return 0
}

func (x *RuleTrialBossPowerData) GetPower() int64 {
	if x != nil && x.Power != nil {
		return *x.Power
	}
	return 0
}

type RuleTrialBossConfigSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*RuleTrialBossPowerData `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (x *RuleTrialBossConfigSyncMsg) Reset() {
	*x = RuleTrialBossConfigSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleTrialBossConfigSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleTrialBossConfigSyncMsg) ProtoMessage() {}

func (x *RuleTrialBossConfigSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleTrialBossConfigSyncMsg.ProtoReflect.Descriptor instead.
func (*RuleTrialBossConfigSyncMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{15}
}

func (x *RuleTrialBossConfigSyncMsg) GetData() []*RuleTrialBossPowerData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MountainSeaJoinTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId *int64 `protobuf:"varint,1,req,name=teamId" json:"teamId,omitempty"`
}

func (x *MountainSeaJoinTeamReq) Reset() {
	*x = MountainSeaJoinTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountainSeaJoinTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountainSeaJoinTeamReq) ProtoMessage() {}

func (x *MountainSeaJoinTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountainSeaJoinTeamReq.ProtoReflect.Descriptor instead.
func (*MountainSeaJoinTeamReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{16}
}

func (x *MountainSeaJoinTeamReq) GetTeamId() int64 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

type MountainSeaJoinTeamRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *MountainSeaJoinTeamRsp) Reset() {
	*x = MountainSeaJoinTeamRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountainSeaJoinTeamRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountainSeaJoinTeamRsp) ProtoMessage() {}

func (x *MountainSeaJoinTeamRsp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountainSeaJoinTeamRsp.ProtoReflect.Descriptor instead.
func (*MountainSeaJoinTeamRsp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{17}
}

func (x *MountainSeaJoinTeamRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type MountainSeaChallengeTimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MountainSeaChallengeTimeReq) Reset() {
	*x = MountainSeaChallengeTimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountainSeaChallengeTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountainSeaChallengeTimeReq) ProtoMessage() {}

func (x *MountainSeaChallengeTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountainSeaChallengeTimeReq.ProtoReflect.Descriptor instead.
func (*MountainSeaChallengeTimeReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{18}
}

type MountainSeaChallengeTimeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret            *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	ChallengeTimes *int32 `protobuf:"varint,2,opt,name=challengeTimes" json:"challengeTimes,omitempty"`
}

func (x *MountainSeaChallengeTimeRsp) Reset() {
	*x = MountainSeaChallengeTimeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MountainSeaChallengeTimeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountainSeaChallengeTimeRsp) ProtoMessage() {}

func (x *MountainSeaChallengeTimeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountainSeaChallengeTimeRsp.ProtoReflect.Descriptor instead.
func (*MountainSeaChallengeTimeRsp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{19}
}

func (x *MountainSeaChallengeTimeRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *MountainSeaChallengeTimeRsp) GetChallengeTimes() int32 {
	if x != nil && x.ChallengeTimes != nil {
		return *x.ChallengeTimes
	}
	return 0
}

type PlanesTrialJoinTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId   *int64 `protobuf:"varint,1,req,name=teamId" json:"teamId,omitempty"`
	RealmsId *int32 `protobuf:"varint,2,opt,name=realmsId" json:"realmsId,omitempty"`
}

func (x *PlanesTrialJoinTeamReq) Reset() {
	*x = PlanesTrialJoinTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanesTrialJoinTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanesTrialJoinTeamReq) ProtoMessage() {}

func (x *PlanesTrialJoinTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanesTrialJoinTeamReq.ProtoReflect.Descriptor instead.
func (*PlanesTrialJoinTeamReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{20}
}

func (x *PlanesTrialJoinTeamReq) GetTeamId() int64 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

func (x *PlanesTrialJoinTeamReq) GetRealmsId() int32 {
	if x != nil && x.RealmsId != nil {
		return *x.RealmsId
	}
	return 0
}

type PlanesTrialJoinTeamRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *PlanesTrialJoinTeamRsp) Reset() {
	*x = PlanesTrialJoinTeamRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanesTrialJoinTeamRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanesTrialJoinTeamRsp) ProtoMessage() {}

func (x *PlanesTrialJoinTeamRsp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanesTrialJoinTeamRsp.ProtoReflect.Descriptor instead.
func (*PlanesTrialJoinTeamRsp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{21}
}

func (x *PlanesTrialJoinTeamRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type PlanesTrialChallengeTimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlanesTrialChallengeTimeReq) Reset() {
	*x = PlanesTrialChallengeTimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanesTrialChallengeTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanesTrialChallengeTimeReq) ProtoMessage() {}

func (x *PlanesTrialChallengeTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanesTrialChallengeTimeReq.ProtoReflect.Descriptor instead.
func (*PlanesTrialChallengeTimeReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{22}
}

type PlanesTrialChallengeTimeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret            *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	ChallengeTimes *int32 `protobuf:"varint,2,opt,name=challengeTimes" json:"challengeTimes,omitempty"`
	StageId        *int32 `protobuf:"varint,3,opt,name=stageId" json:"stageId,omitempty"`
	Type           *int32 `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
	IsGroup        *bool  `protobuf:"varint,5,opt,name=isGroup" json:"isGroup,omitempty"`
	AchiRewardRed  *bool  `protobuf:"varint,6,opt,name=achiRewardRed" json:"achiRewardRed,omitempty"`
}

func (x *PlanesTrialChallengeTimeRsp) Reset() {
	*x = PlanesTrialChallengeTimeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanesTrialChallengeTimeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanesTrialChallengeTimeRsp) ProtoMessage() {}

func (x *PlanesTrialChallengeTimeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanesTrialChallengeTimeRsp.ProtoReflect.Descriptor instead.
func (*PlanesTrialChallengeTimeRsp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{23}
}

func (x *PlanesTrialChallengeTimeRsp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PlanesTrialChallengeTimeRsp) GetChallengeTimes() int32 {
	if x != nil && x.ChallengeTimes != nil {
		return *x.ChallengeTimes
	}
	return 0
}

func (x *PlanesTrialChallengeTimeRsp) GetStageId() int32 {
	if x != nil && x.StageId != nil {
		return *x.StageId
	}
	return 0
}

func (x *PlanesTrialChallengeTimeRsp) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *PlanesTrialChallengeTimeRsp) GetIsGroup() bool {
	if x != nil && x.IsGroup != nil {
		return *x.IsGroup
	}
	return false
}

func (x *PlanesTrialChallengeTimeRsp) GetAchiRewardRed() bool {
	if x != nil && x.AchiRewardRed != nil {
		return *x.AchiRewardRed
	}
	return false
}

type HolyLandBattleApplyDataSyncReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HolyLandBattleApplyDataSyncReq) Reset() {
	*x = HolyLandBattleApplyDataSyncReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HolyLandBattleApplyDataSyncReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HolyLandBattleApplyDataSyncReq) ProtoMessage() {}

func (x *HolyLandBattleApplyDataSyncReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HolyLandBattleApplyDataSyncReq.ProtoReflect.Descriptor instead.
func (*HolyLandBattleApplyDataSyncReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{24}
}

type HolyLandBattleApplyDataSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret               *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	IsApply           *bool   `protobuf:"varint,2,opt,name=isApply" json:"isApply,omitempty"`
	HasQuality        *bool   `protobuf:"varint,3,opt,name=hasQuality" json:"hasQuality,omitempty"`
	IsOpen            *bool   `protobuf:"varint,4,opt,name=isOpen" json:"isOpen,omitempty"`
	RoundId           *int32  `protobuf:"varint,5,opt,name=roundId" json:"roundId,omitempty"`
	ScheduleTimestamp []int64 `protobuf:"varint,6,rep,name=scheduleTimestamp" json:"scheduleTimestamp,omitempty"`
	NotFoundCrossId   *bool   `protobuf:"varint,7,opt,name=notFoundCrossId" json:"notFoundCrossId,omitempty"`
}

func (x *HolyLandBattleApplyDataSync) Reset() {
	*x = HolyLandBattleApplyDataSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HolyLandBattleApplyDataSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HolyLandBattleApplyDataSync) ProtoMessage() {}

func (x *HolyLandBattleApplyDataSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HolyLandBattleApplyDataSync.ProtoReflect.Descriptor instead.
func (*HolyLandBattleApplyDataSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{25}
}

func (x *HolyLandBattleApplyDataSync) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *HolyLandBattleApplyDataSync) GetIsApply() bool {
	if x != nil && x.IsApply != nil {
		return *x.IsApply
	}
	return false
}

func (x *HolyLandBattleApplyDataSync) GetHasQuality() bool {
	if x != nil && x.HasQuality != nil {
		return *x.HasQuality
	}
	return false
}

func (x *HolyLandBattleApplyDataSync) GetIsOpen() bool {
	if x != nil && x.IsOpen != nil {
		return *x.IsOpen
	}
	return false
}

func (x *HolyLandBattleApplyDataSync) GetRoundId() int32 {
	if x != nil && x.RoundId != nil {
		return *x.RoundId
	}
	return 0
}

func (x *HolyLandBattleApplyDataSync) GetScheduleTimestamp() []int64 {
	if x != nil {
		return x.ScheduleTimestamp
	}
	return nil
}

func (x *HolyLandBattleApplyDataSync) GetNotFoundCrossId() bool {
	if x != nil && x.NotFoundCrossId != nil {
		return *x.NotFoundCrossId
	}
	return false
}

type HolyLandBattleTimeStampsDataSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret               *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	ScheduleTimestamp []int64 `protobuf:"varint,2,rep,name=scheduleTimestamp" json:"scheduleTimestamp,omitempty"`
}

func (x *HolyLandBattleTimeStampsDataSync) Reset() {
	*x = HolyLandBattleTimeStampsDataSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HolyLandBattleTimeStampsDataSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HolyLandBattleTimeStampsDataSync) ProtoMessage() {}

func (x *HolyLandBattleTimeStampsDataSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HolyLandBattleTimeStampsDataSync.ProtoReflect.Descriptor instead.
func (*HolyLandBattleTimeStampsDataSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{26}
}

func (x *HolyLandBattleTimeStampsDataSync) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *HolyLandBattleTimeStampsDataSync) GetScheduleTimestamp() []int64 {
	if x != nil {
		return x.ScheduleTimestamp
	}
	return nil
}

type PlayerSoulLiQuidDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lv                    *int32 `protobuf:"varint,1,req,name=lv" json:"lv,omitempty"`
	DailyAura             *int64 `protobuf:"varint,2,req,name=dailyAura" json:"dailyAura,omitempty"`
	DreamItemCostTotalNum *int64 `protobuf:"varint,3,opt,name=dreamItemCostTotalNum" json:"dreamItemCostTotalNum,omitempty"`
	RemainTimes           *int32 `protobuf:"varint,4,opt,name=remainTimes" json:"remainTimes,omitempty"`
}

func (x *PlayerSoulLiQuidDataMsg) Reset() {
	*x = PlayerSoulLiQuidDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSoulLiQuidDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSoulLiQuidDataMsg) ProtoMessage() {}

func (x *PlayerSoulLiQuidDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSoulLiQuidDataMsg.ProtoReflect.Descriptor instead.
func (*PlayerSoulLiQuidDataMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{27}
}

func (x *PlayerSoulLiQuidDataMsg) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *PlayerSoulLiQuidDataMsg) GetDailyAura() int64 {
	if x != nil && x.DailyAura != nil {
		return *x.DailyAura
	}
	return 0
}

func (x *PlayerSoulLiQuidDataMsg) GetDreamItemCostTotalNum() int64 {
	if x != nil && x.DreamItemCostTotalNum != nil {
		return *x.DreamItemCostTotalNum
	}
	return 0
}

func (x *PlayerSoulLiQuidDataMsg) GetRemainTimes() int32 {
	if x != nil && x.RemainTimes != nil {
		return *x.RemainTimes
	}
	return 0
}

type AskDingConfigSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaceConfig []*AskDingPlaceConfigTemp `protobuf:"bytes,1,rep,name=placeConfig" json:"placeConfig,omitempty"`
	TimeConf    []*AskDingTimeConfigMsg   `protobuf:"bytes,2,rep,name=timeConf" json:"timeConf,omitempty"`
}

func (x *AskDingConfigSyncMsg) Reset() {
	*x = AskDingConfigSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskDingConfigSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskDingConfigSyncMsg) ProtoMessage() {}

func (x *AskDingConfigSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskDingConfigSyncMsg.ProtoReflect.Descriptor instead.
func (*AskDingConfigSyncMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{28}
}

func (x *AskDingConfigSyncMsg) GetPlaceConfig() []*AskDingPlaceConfigTemp {
	if x != nil {
		return x.PlaceConfig
	}
	return nil
}

func (x *AskDingConfigSyncMsg) GetTimeConf() []*AskDingTimeConfigMsg {
	if x != nil {
		return x.TimeConf
	}
	return nil
}

type AskDingPlaceConfigTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId   *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Id           *int32  `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Type         *int32  `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
	Name         *string `protobuf:"bytes,4,req,name=name" json:"name,omitempty"`
	Level        *int32  `protobuf:"varint,5,req,name=level" json:"level,omitempty"`
	Radius       *int32  `protobuf:"varint,6,req,name=radius" json:"radius,omitempty"`
	SeizeScore   *int32  `protobuf:"varint,7,req,name=seizeScore" json:"seizeScore,omitempty"`
	SeizeProduce *int32  `protobuf:"varint,8,req,name=seizeProduce" json:"seizeProduce,omitempty"`
}

func (x *AskDingPlaceConfigTemp) Reset() {
	*x = AskDingPlaceConfigTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskDingPlaceConfigTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskDingPlaceConfigTemp) ProtoMessage() {}

func (x *AskDingPlaceConfigTemp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskDingPlaceConfigTemp.ProtoReflect.Descriptor instead.
func (*AskDingPlaceConfigTemp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{29}
}

func (x *AskDingPlaceConfigTemp) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *AskDingPlaceConfigTemp) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *AskDingPlaceConfigTemp) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *AskDingPlaceConfigTemp) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AskDingPlaceConfigTemp) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *AskDingPlaceConfigTemp) GetRadius() int32 {
	if x != nil && x.Radius != nil {
		return *x.Radius
	}
	return 0
}

func (x *AskDingPlaceConfigTemp) GetSeizeScore() int32 {
	if x != nil && x.SeizeScore != nil {
		return *x.SeizeScore
	}
	return 0
}

func (x *AskDingPlaceConfigTemp) GetSeizeProduce() int32 {
	if x != nil && x.SeizeProduce != nil {
		return *x.SeizeProduce
	}
	return 0
}

type AskDingTimeConfigMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId       *int32  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	TimeId           *int32  `protobuf:"varint,2,req,name=timeId" json:"timeId,omitempty"`
	Type             *int32  `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
	Session          *int32  `protobuf:"varint,4,req,name=session" json:"session,omitempty"`
	BeginDay         *int32  `protobuf:"varint,5,req,name=beginDay" json:"beginDay,omitempty"`
	BeginTime        *int32  `protobuf:"varint,6,req,name=beginTime" json:"beginTime,omitempty"`
	Seat             *int32  `protobuf:"varint,7,req,name=seat" json:"seat,omitempty"`
	DurTime          *int32  `protobuf:"varint,8,req,name=durTime" json:"durTime,omitempty"`
	Score            *string `protobuf:"bytes,9,req,name=score" json:"score,omitempty"`
	RewardsPresident *string `protobuf:"bytes,10,opt,name=rewardsPresident" json:"rewardsPresident,omitempty"`
	RewardsMember    *string `protobuf:"bytes,11,opt,name=rewardsMember" json:"rewardsMember,omitempty"`
	Params           *string `protobuf:"bytes,12,opt,name=params" json:"params,omitempty"`
	GuessParam       *int32  `protobuf:"varint,13,opt,name=guessParam" json:"guessParam,omitempty"`
}

func (x *AskDingTimeConfigMsg) Reset() {
	*x = AskDingTimeConfigMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskDingTimeConfigMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskDingTimeConfigMsg) ProtoMessage() {}

func (x *AskDingTimeConfigMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskDingTimeConfigMsg.ProtoReflect.Descriptor instead.
func (*AskDingTimeConfigMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{30}
}

func (x *AskDingTimeConfigMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *AskDingTimeConfigMsg) GetTimeId() int32 {
	if x != nil && x.TimeId != nil {
		return *x.TimeId
	}
	return 0
}

func (x *AskDingTimeConfigMsg) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *AskDingTimeConfigMsg) GetSession() int32 {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return 0
}

func (x *AskDingTimeConfigMsg) GetBeginDay() int32 {
	if x != nil && x.BeginDay != nil {
		return *x.BeginDay
	}
	return 0
}

func (x *AskDingTimeConfigMsg) GetBeginTime() int32 {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return 0
}

func (x *AskDingTimeConfigMsg) GetSeat() int32 {
	if x != nil && x.Seat != nil {
		return *x.Seat
	}
	return 0
}

func (x *AskDingTimeConfigMsg) GetDurTime() int32 {
	if x != nil && x.DurTime != nil {
		return *x.DurTime
	}
	return 0
}

func (x *AskDingTimeConfigMsg) GetScore() string {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return ""
}

func (x *AskDingTimeConfigMsg) GetRewardsPresident() string {
	if x != nil && x.RewardsPresident != nil {
		return *x.RewardsPresident
	}
	return ""
}

func (x *AskDingTimeConfigMsg) GetRewardsMember() string {
	if x != nil && x.RewardsMember != nil {
		return *x.RewardsMember
	}
	return ""
}

func (x *AskDingTimeConfigMsg) GetParams() string {
	if x != nil && x.Params != nil {
		return *x.Params
	}
	return ""
}

func (x *AskDingTimeConfigMsg) GetGuessParam() int32 {
	if x != nil && x.GuessParam != nil {
		return *x.GuessParam
	}
	return 0
}

type AskDingGetChampionInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *AskDingGetChampionInfoReq) Reset() {
	*x = AskDingGetChampionInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskDingGetChampionInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskDingGetChampionInfoReq) ProtoMessage() {}

func (x *AskDingGetChampionInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskDingGetChampionInfoReq.ProtoReflect.Descriptor instead.
func (*AskDingGetChampionInfoReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{31}
}

func (x *AskDingGetChampionInfoReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type AskDingGetChampionInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32                       `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	ActivityId    *int32                       `protobuf:"varint,2,opt,name=activityId" json:"activityId,omitempty"`
	ChampionUnion *UnionBaseData               `protobuf:"bytes,3,opt,name=championUnion" json:"championUnion,omitempty"`
	Leaders       []*AskDingChampionLeadersMsg `protobuf:"bytes,4,rep,name=leaders" json:"leaders,omitempty"`
}

func (x *AskDingGetChampionInfoResp) Reset() {
	*x = AskDingGetChampionInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskDingGetChampionInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskDingGetChampionInfoResp) ProtoMessage() {}

func (x *AskDingGetChampionInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskDingGetChampionInfoResp.ProtoReflect.Descriptor instead.
func (*AskDingGetChampionInfoResp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{32}
}

func (x *AskDingGetChampionInfoResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *AskDingGetChampionInfoResp) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *AskDingGetChampionInfoResp) GetChampionUnion() *UnionBaseData {
	if x != nil {
		return x.ChampionUnion
	}
	return nil
}

func (x *AskDingGetChampionInfoResp) GetLeaders() []*AskDingChampionLeadersMsg {
	if x != nil {
		return x.Leaders
	}
	return nil
}

type AskDingChampionLeadersMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId     *int64  `protobuf:"varint,1,opt,name=playerId" json:"playerId,omitempty"`
	AppearanceId *int32  `protobuf:"varint,2,opt,name=appearanceId" json:"appearanceId,omitempty"`
	EquipCloudId *int32  `protobuf:"varint,3,opt,name=equipCloudId" json:"equipCloudId,omitempty"`
	Position     *int32  `protobuf:"varint,4,opt,name=position" json:"position,omitempty"`
	NickName     *string `protobuf:"bytes,5,opt,name=nickName" json:"nickName,omitempty"`
}

func (x *AskDingChampionLeadersMsg) Reset() {
	*x = AskDingChampionLeadersMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskDingChampionLeadersMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskDingChampionLeadersMsg) ProtoMessage() {}

func (x *AskDingChampionLeadersMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskDingChampionLeadersMsg.ProtoReflect.Descriptor instead.
func (*AskDingChampionLeadersMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{33}
}

func (x *AskDingChampionLeadersMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *AskDingChampionLeadersMsg) GetAppearanceId() int32 {
	if x != nil && x.AppearanceId != nil {
		return *x.AppearanceId
	}
	return 0
}

func (x *AskDingChampionLeadersMsg) GetEquipCloudId() int32 {
	if x != nil && x.EquipCloudId != nil {
		return *x.EquipCloudId
	}
	return 0
}

func (x *AskDingChampionLeadersMsg) GetPosition() int32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *AskDingChampionLeadersMsg) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

type AskDingSyncPlayerJoinMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Joined     *bool  `protobuf:"varint,2,opt,name=joined" json:"joined,omitempty"`
}

func (x *AskDingSyncPlayerJoinMsg) Reset() {
	*x = AskDingSyncPlayerJoinMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskDingSyncPlayerJoinMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskDingSyncPlayerJoinMsg) ProtoMessage() {}

func (x *AskDingSyncPlayerJoinMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskDingSyncPlayerJoinMsg.ProtoReflect.Descriptor instead.
func (*AskDingSyncPlayerJoinMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{34}
}

func (x *AskDingSyncPlayerJoinMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *AskDingSyncPlayerJoinMsg) GetJoined() bool {
	if x != nil && x.Joined != nil {
		return *x.Joined
	}
	return false
}

type SkyPresentDataSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataList []*SkyPresentPresentData `protobuf:"bytes,1,rep,name=dataList" json:"dataList,omitempty"`
	IsLogin  *bool                    `protobuf:"varint,2,opt,name=isLogin" json:"isLogin,omitempty"`
}

func (x *SkyPresentDataSync) Reset() {
	*x = SkyPresentDataSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkyPresentDataSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkyPresentDataSync) ProtoMessage() {}

func (x *SkyPresentDataSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkyPresentDataSync.ProtoReflect.Descriptor instead.
func (*SkyPresentDataSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{35}
}

func (x *SkyPresentDataSync) GetDataList() []*SkyPresentPresentData {
	if x != nil {
		return x.DataList
	}
	return nil
}

func (x *SkyPresentDataSync) GetIsLogin() bool {
	if x != nil && x.IsLogin != nil {
		return *x.IsLogin
	}
	return false
}

type SkyPresentPresentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeParam  *int32 `protobuf:"varint,1,opt,name=typeParam" json:"typeParam,omitempty"`
	MallId     *int32 `protobuf:"varint,2,opt,name=mallId" json:"mallId,omitempty"`
	BeginTimes *int64 `protobuf:"varint,3,opt,name=beginTimes" json:"beginTimes,omitempty"`
	EndTimes   *int64 `protobuf:"varint,4,opt,name=endTimes" json:"endTimes,omitempty"`
}

func (x *SkyPresentPresentData) Reset() {
	*x = SkyPresentPresentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkyPresentPresentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkyPresentPresentData) ProtoMessage() {}

func (x *SkyPresentPresentData) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkyPresentPresentData.ProtoReflect.Descriptor instead.
func (*SkyPresentPresentData) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{36}
}

func (x *SkyPresentPresentData) GetTypeParam() int32 {
	if x != nil && x.TypeParam != nil {
		return *x.TypeParam
	}
	return 0
}

func (x *SkyPresentPresentData) GetMallId() int32 {
	if x != nil && x.MallId != nil {
		return *x.MallId
	}
	return 0
}

func (x *SkyPresentPresentData) GetBeginTimes() int64 {
	if x != nil && x.BeginTimes != nil {
		return *x.BeginTimes
	}
	return 0
}

func (x *SkyPresentPresentData) GetEndTimes() int64 {
	if x != nil && x.EndTimes != nil {
		return *x.EndTimes
	}
	return 0
}

type AuspiciousBlessDataSyncResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	ActivityId    *int32 `protobuf:"varint,2,req,name=activityId" json:"activityId,omitempty"`
	SumDraw       *int32 `protobuf:"varint,3,req,name=sumDraw" json:"sumDraw,omitempty"`
	DailyCount    *int32 `protobuf:"varint,4,req,name=dailyCount" json:"dailyCount,omitempty"`
	DailySumCount *int32 `protobuf:"varint,5,req,name=dailySumCount" json:"dailySumCount,omitempty"`
	CdEndTime     *int64 `protobuf:"varint,6,req,name=cdEndTime" json:"cdEndTime,omitempty"`
	RestTime      *int64 `protobuf:"varint,7,req,name=restTime" json:"restTime,omitempty"`
	RareRewardId  *int32 `protobuf:"varint,8,req,name=rareRewardId" json:"rareRewardId,omitempty"`
}

func (x *AuspiciousBlessDataSyncResp) Reset() {
	*x = AuspiciousBlessDataSyncResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuspiciousBlessDataSyncResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuspiciousBlessDataSyncResp) ProtoMessage() {}

func (x *AuspiciousBlessDataSyncResp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuspiciousBlessDataSyncResp.ProtoReflect.Descriptor instead.
func (*AuspiciousBlessDataSyncResp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{37}
}

func (x *AuspiciousBlessDataSyncResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *AuspiciousBlessDataSyncResp) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *AuspiciousBlessDataSyncResp) GetSumDraw() int32 {
	if x != nil && x.SumDraw != nil {
		return *x.SumDraw
	}
	return 0
}

func (x *AuspiciousBlessDataSyncResp) GetDailyCount() int32 {
	if x != nil && x.DailyCount != nil {
		return *x.DailyCount
	}
	return 0
}

func (x *AuspiciousBlessDataSyncResp) GetDailySumCount() int32 {
	if x != nil && x.DailySumCount != nil {
		return *x.DailySumCount
	}
	return 0
}

func (x *AuspiciousBlessDataSyncResp) GetCdEndTime() int64 {
	if x != nil && x.CdEndTime != nil {
		return *x.CdEndTime
	}
	return 0
}

func (x *AuspiciousBlessDataSyncResp) GetRestTime() int64 {
	if x != nil && x.RestTime != nil {
		return *x.RestTime
	}
	return 0
}

func (x *AuspiciousBlessDataSyncResp) GetRareRewardId() int32 {
	if x != nil && x.RareRewardId != nil {
		return *x.RareRewardId
	}
	return 0
}

type RecallPlayerDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId      *int32  `protobuf:"varint,1,opt,name=activityId" json:"activityId,omitempty"`
	TriggerTime     *int64  `protobuf:"varint,2,opt,name=triggerTime" json:"triggerTime,omitempty"`
	EndTime         *int64  `protobuf:"varint,3,opt,name=endTime" json:"endTime,omitempty"`
	OfflineDay      *int32  `protobuf:"varint,4,opt,name=offlineDay" json:"offlineDay,omitempty"`
	SystemId        []int32 `protobuf:"varint,5,rep,name=systemId" json:"systemId,omitempty"`
	RecallCode      *string `protobuf:"bytes,6,opt,name=recallCode" json:"recallCode,omitempty"`
	IsMonthCardFree *bool   `protobuf:"varint,7,opt,name=isMonthCardFree" json:"isMonthCardFree,omitempty"`
	IsMouseFree     *bool   `protobuf:"varint,8,opt,name=isMouseFree" json:"isMouseFree,omitempty"`
	IsWhite         *int32  `protobuf:"varint,9,opt,name=isWhite" json:"isWhite,omitempty"`
}

func (x *RecallPlayerDataMsg) Reset() {
	*x = RecallPlayerDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecallPlayerDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecallPlayerDataMsg) ProtoMessage() {}

func (x *RecallPlayerDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecallPlayerDataMsg.ProtoReflect.Descriptor instead.
func (*RecallPlayerDataMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{38}
}

func (x *RecallPlayerDataMsg) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *RecallPlayerDataMsg) GetTriggerTime() int64 {
	if x != nil && x.TriggerTime != nil {
		return *x.TriggerTime
	}
	return 0
}

func (x *RecallPlayerDataMsg) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *RecallPlayerDataMsg) GetOfflineDay() int32 {
	if x != nil && x.OfflineDay != nil {
		return *x.OfflineDay
	}
	return 0
}

func (x *RecallPlayerDataMsg) GetSystemId() []int32 {
	if x != nil {
		return x.SystemId
	}
	return nil
}

func (x *RecallPlayerDataMsg) GetRecallCode() string {
	if x != nil && x.RecallCode != nil {
		return *x.RecallCode
	}
	return ""
}

func (x *RecallPlayerDataMsg) GetIsMonthCardFree() bool {
	if x != nil && x.IsMonthCardFree != nil {
		return *x.IsMonthCardFree
	}
	return false
}

func (x *RecallPlayerDataMsg) GetIsMouseFree() bool {
	if x != nil && x.IsMouseFree != nil {
		return *x.IsMouseFree
	}
	return false
}

func (x *RecallPlayerDataMsg) GetIsWhite() int32 {
	if x != nil && x.IsWhite != nil {
		return *x.IsWhite
	}
	return 0
}

type RegressionActivePlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LotteryTimes           *int32                    `protobuf:"varint,1,opt,name=lotteryTimes" json:"lotteryTimes,omitempty"`
	RecallCode             *string                   `protobuf:"bytes,2,opt,name=recallCode" json:"recallCode,omitempty"`
	HasRewardIds           []int32                   `protobuf:"varint,3,rep,name=hasRewardIds" json:"hasRewardIds,omitempty"`
	IsFirstShare           *bool                     `protobuf:"varint,4,opt,name=isFirstShare" json:"isFirstShare,omitempty"`
	RegressionSelectReward []*RegressionSelectReward `protobuf:"bytes,5,rep,name=regressionSelectReward" json:"regressionSelectReward,omitempty"`
}

func (x *RegressionActivePlayerData) Reset() {
	*x = RegressionActivePlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegressionActivePlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegressionActivePlayerData) ProtoMessage() {}

func (x *RegressionActivePlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegressionActivePlayerData.ProtoReflect.Descriptor instead.
func (*RegressionActivePlayerData) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{39}
}

func (x *RegressionActivePlayerData) GetLotteryTimes() int32 {
	if x != nil && x.LotteryTimes != nil {
		return *x.LotteryTimes
	}
	return 0
}

func (x *RegressionActivePlayerData) GetRecallCode() string {
	if x != nil && x.RecallCode != nil {
		return *x.RecallCode
	}
	return ""
}

func (x *RegressionActivePlayerData) GetHasRewardIds() []int32 {
	if x != nil {
		return x.HasRewardIds
	}
	return nil
}

func (x *RegressionActivePlayerData) GetIsFirstShare() bool {
	if x != nil && x.IsFirstShare != nil {
		return *x.IsFirstShare
	}
	return false
}

func (x *RegressionActivePlayerData) GetRegressionSelectReward() []*RegressionSelectReward {
	if x != nil {
		return x.RegressionSelectReward
	}
	return nil
}

type RegressionSelectReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  *int32  `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Reward *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
}

func (x *RegressionSelectReward) Reset() {
	*x = RegressionSelectReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegressionSelectReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegressionSelectReward) ProtoMessage() {}

func (x *RegressionSelectReward) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegressionSelectReward.ProtoReflect.Descriptor instead.
func (*RegressionSelectReward) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{40}
}

func (x *RegressionSelectReward) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *RegressionSelectReward) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type RenewNewPlayerDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RenewPlayerInfo *RenewPlayerInfo `protobuf:"bytes,1,opt,name=RenewPlayerInfo" json:"RenewPlayerInfo,omitempty"`
	TriggerTime     *int64           `protobuf:"varint,2,opt,name=triggerTime" json:"triggerTime,omitempty"`
	EndTime         *int64           `protobuf:"varint,3,opt,name=endTime" json:"endTime,omitempty"`
}

func (x *RenewNewPlayerDataMsg) Reset() {
	*x = RenewNewPlayerDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewNewPlayerDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewNewPlayerDataMsg) ProtoMessage() {}

func (x *RenewNewPlayerDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewNewPlayerDataMsg.ProtoReflect.Descriptor instead.
func (*RenewNewPlayerDataMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{41}
}

func (x *RenewNewPlayerDataMsg) GetRenewPlayerInfo() *RenewPlayerInfo {
	if x != nil {
		return x.RenewPlayerInfo
	}
	return nil
}

func (x *RenewNewPlayerDataMsg) GetTriggerTime() int64 {
	if x != nil && x.TriggerTime != nil {
		return *x.TriggerTime
	}
	return 0
}

func (x *RenewNewPlayerDataMsg) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

type RenewPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerBaseDataMsg *PlayerBaseDataMsg `protobuf:"bytes,1,opt,name=playerBaseDataMsg" json:"playerBaseDataMsg,omitempty"`
	IsActive          *bool              `protobuf:"varint,2,opt,name=isActive" json:"isActive,omitempty"`
	IsWhite           *bool              `protobuf:"varint,3,opt,name=isWhite" json:"isWhite,omitempty"`
	ReamsId           *int32             `protobuf:"varint,4,opt,name=reamsId" json:"reamsId,omitempty"`
}

func (x *RenewPlayerInfo) Reset() {
	*x = RenewPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewPlayerInfo) ProtoMessage() {}

func (x *RenewPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewPlayerInfo.ProtoReflect.Descriptor instead.
func (*RenewPlayerInfo) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{42}
}

func (x *RenewPlayerInfo) GetPlayerBaseDataMsg() *PlayerBaseDataMsg {
	if x != nil {
		return x.PlayerBaseDataMsg
	}
	return nil
}

func (x *RenewPlayerInfo) GetIsActive() bool {
	if x != nil && x.IsActive != nil {
		return *x.IsActive
	}
	return false
}

func (x *RenewPlayerInfo) GetIsWhite() bool {
	if x != nil && x.IsWhite != nil {
		return *x.IsWhite
	}
	return false
}

func (x *RenewPlayerInfo) GetReamsId() int32 {
	if x != nil && x.ReamsId != nil {
		return *x.ReamsId
	}
	return 0
}

type DoubleDemonsDataLoginSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteData  []*DoubleDemonsInviteData  `protobuf:"bytes,1,rep,name=inviteData" json:"inviteData,omitempty"`
	PresentData []*DoubleDemonsPresentData `protobuf:"bytes,2,rep,name=presentData" json:"presentData,omitempty"`
}

func (x *DoubleDemonsDataLoginSync) Reset() {
	*x = DoubleDemonsDataLoginSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleDemonsDataLoginSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleDemonsDataLoginSync) ProtoMessage() {}

func (x *DoubleDemonsDataLoginSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleDemonsDataLoginSync.ProtoReflect.Descriptor instead.
func (*DoubleDemonsDataLoginSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{43}
}

func (x *DoubleDemonsDataLoginSync) GetInviteData() []*DoubleDemonsInviteData {
	if x != nil {
		return x.InviteData
	}
	return nil
}

func (x *DoubleDemonsDataLoginSync) GetPresentData() []*DoubleDemonsPresentData {
	if x != nil {
		return x.PresentData
	}
	return nil
}

type DoubleDemonsInviteData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteTime     *int64             `protobuf:"varint,1,opt,name=inviteTime" json:"inviteTime,omitempty"`
	PlayerBaseData *PlayerBaseDataMsg `protobuf:"bytes,2,opt,name=playerBaseData" json:"playerBaseData,omitempty"`
}

func (x *DoubleDemonsInviteData) Reset() {
	*x = DoubleDemonsInviteData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleDemonsInviteData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleDemonsInviteData) ProtoMessage() {}

func (x *DoubleDemonsInviteData) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleDemonsInviteData.ProtoReflect.Descriptor instead.
func (*DoubleDemonsInviteData) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{44}
}

func (x *DoubleDemonsInviteData) GetInviteTime() int64 {
	if x != nil && x.InviteTime != nil {
		return *x.InviteTime
	}
	return 0
}

func (x *DoubleDemonsInviteData) GetPlayerBaseData() *PlayerBaseDataMsg {
	if x != nil {
		return x.PlayerBaseData
	}
	return nil
}

type DoubleDemonsPresentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerShowData *PlayerCharacterImageMsg `protobuf:"bytes,1,opt,name=playerShowData" json:"playerShowData,omitempty"`
	Words          *string                  `protobuf:"bytes,2,opt,name=words" json:"words,omitempty"`
	Rewards        *string                  `protobuf:"bytes,3,opt,name=rewards" json:"rewards,omitempty"`
}

func (x *DoubleDemonsPresentData) Reset() {
	*x = DoubleDemonsPresentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleDemonsPresentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleDemonsPresentData) ProtoMessage() {}

func (x *DoubleDemonsPresentData) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleDemonsPresentData.ProtoReflect.Descriptor instead.
func (*DoubleDemonsPresentData) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{45}
}

func (x *DoubleDemonsPresentData) GetPlayerShowData() *PlayerCharacterImageMsg {
	if x != nil {
		return x.PlayerShowData
	}
	return nil
}

func (x *DoubleDemonsPresentData) GetWords() string {
	if x != nil && x.Words != nil {
		return *x.Words
	}
	return ""
}

func (x *DoubleDemonsPresentData) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

type DoubleDemonsAgreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	ActivityId *int32 `protobuf:"varint,2,req,name=activityId" json:"activityId,omitempty"`
}

func (x *DoubleDemonsAgreeReq) Reset() {
	*x = DoubleDemonsAgreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleDemonsAgreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleDemonsAgreeReq) ProtoMessage() {}

func (x *DoubleDemonsAgreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleDemonsAgreeReq.ProtoReflect.Descriptor instead.
func (*DoubleDemonsAgreeReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{46}
}

func (x *DoubleDemonsAgreeReq) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *DoubleDemonsAgreeReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type DoubleDemonsAgreeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *DoubleDemonsAgreeResp) Reset() {
	*x = DoubleDemonsAgreeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleDemonsAgreeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleDemonsAgreeResp) ProtoMessage() {}

func (x *DoubleDemonsAgreeResp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleDemonsAgreeResp.ProtoReflect.Descriptor instead.
func (*DoubleDemonsAgreeResp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{47}
}

func (x *DoubleDemonsAgreeResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type DoubleDemonsRefuseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
}

func (x *DoubleDemonsRefuseReq) Reset() {
	*x = DoubleDemonsRefuseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleDemonsRefuseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleDemonsRefuseReq) ProtoMessage() {}

func (x *DoubleDemonsRefuseReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleDemonsRefuseReq.ProtoReflect.Descriptor instead.
func (*DoubleDemonsRefuseReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{48}
}

func (x *DoubleDemonsRefuseReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type DoubleDemonsRefuseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *DoubleDemonsRefuseResp) Reset() {
	*x = DoubleDemonsRefuseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleDemonsRefuseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleDemonsRefuseResp) ProtoMessage() {}

func (x *DoubleDemonsRefuseResp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleDemonsRefuseResp.ProtoReflect.Descriptor instead.
func (*DoubleDemonsRefuseResp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{49}
}

func (x *DoubleDemonsRefuseResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type DoubleDemonsReceivePresentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	ActivityId *int32 `protobuf:"varint,2,req,name=activityId" json:"activityId,omitempty"`
}

func (x *DoubleDemonsReceivePresentReq) Reset() {
	*x = DoubleDemonsReceivePresentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleDemonsReceivePresentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleDemonsReceivePresentReq) ProtoMessage() {}

func (x *DoubleDemonsReceivePresentReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleDemonsReceivePresentReq.ProtoReflect.Descriptor instead.
func (*DoubleDemonsReceivePresentReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{50}
}

func (x *DoubleDemonsReceivePresentReq) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *DoubleDemonsReceivePresentReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

type DoubleDemonsReceivePresentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *DoubleDemonsReceivePresentResp) Reset() {
	*x = DoubleDemonsReceivePresentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleDemonsReceivePresentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleDemonsReceivePresentResp) ProtoMessage() {}

func (x *DoubleDemonsReceivePresentResp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleDemonsReceivePresentResp.ProtoReflect.Descriptor instead.
func (*DoubleDemonsReceivePresentResp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{51}
}

func (x *DoubleDemonsReceivePresentResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type DoubleDemonsAppointInviteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	PlayerId   *int64 `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
}

func (x *DoubleDemonsAppointInviteReq) Reset() {
	*x = DoubleDemonsAppointInviteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleDemonsAppointInviteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleDemonsAppointInviteReq) ProtoMessage() {}

func (x *DoubleDemonsAppointInviteReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleDemonsAppointInviteReq.ProtoReflect.Descriptor instead.
func (*DoubleDemonsAppointInviteReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{52}
}

func (x *DoubleDemonsAppointInviteReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *DoubleDemonsAppointInviteReq) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type DoubleDemonsAppointInviteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *DoubleDemonsAppointInviteResp) Reset() {
	*x = DoubleDemonsAppointInviteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleDemonsAppointInviteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleDemonsAppointInviteResp) ProtoMessage() {}

func (x *DoubleDemonsAppointInviteResp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleDemonsAppointInviteResp.ProtoReflect.Descriptor instead.
func (*DoubleDemonsAppointInviteResp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{53}
}

func (x *DoubleDemonsAppointInviteResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type PupilSystemLoginSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SectLv                 *int32                     `protobuf:"varint,1,opt,name=sectLv" json:"sectLv,omitempty"`
	TrainInfo              []*CurrentTrainTimeInfoMsg `protobuf:"bytes,2,rep,name=trainInfo" json:"trainInfo,omitempty"`
	UnEducatedPupilNums    *int32                     `protobuf:"varint,3,opt,name=unEducatedPupilNums" json:"unEducatedPupilNums,omitempty"`
	HavePupilSiteIndexList []int32                    `protobuf:"varint,4,rep,name=havePupilSiteIndexList" json:"havePupilSiteIndexList,omitempty"`
}

func (x *PupilSystemLoginSync) Reset() {
	*x = PupilSystemLoginSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilSystemLoginSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilSystemLoginSync) ProtoMessage() {}

func (x *PupilSystemLoginSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilSystemLoginSync.ProtoReflect.Descriptor instead.
func (*PupilSystemLoginSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{54}
}

func (x *PupilSystemLoginSync) GetSectLv() int32 {
	if x != nil && x.SectLv != nil {
		return *x.SectLv
	}
	return 0
}

func (x *PupilSystemLoginSync) GetTrainInfo() []*CurrentTrainTimeInfoMsg {
	if x != nil {
		return x.TrainInfo
	}
	return nil
}

func (x *PupilSystemLoginSync) GetUnEducatedPupilNums() int32 {
	if x != nil && x.UnEducatedPupilNums != nil {
		return *x.UnEducatedPupilNums
	}
	return 0
}

func (x *PupilSystemLoginSync) GetHavePupilSiteIndexList() []int32 {
	if x != nil {
		return x.HavePupilSiteIndexList
	}
	return nil
}

type CurrentTrainTimeInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index            *int32 `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	TrainTimes       *int32 `protobuf:"varint,2,opt,name=trainTimes" json:"trainTimes,omitempty"`
	RemainTrainTimes *int32 `protobuf:"varint,3,opt,name=remainTrainTimes" json:"remainTrainTimes,omitempty"`
	LastRestoreTime  *int64 `protobuf:"varint,4,opt,name=lastRestoreTime" json:"lastRestoreTime,omitempty"`
}

func (x *CurrentTrainTimeInfoMsg) Reset() {
	*x = CurrentTrainTimeInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentTrainTimeInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentTrainTimeInfoMsg) ProtoMessage() {}

func (x *CurrentTrainTimeInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentTrainTimeInfoMsg.ProtoReflect.Descriptor instead.
func (*CurrentTrainTimeInfoMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{55}
}

func (x *CurrentTrainTimeInfoMsg) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *CurrentTrainTimeInfoMsg) GetTrainTimes() int32 {
	if x != nil && x.TrainTimes != nil {
		return *x.TrainTimes
	}
	return 0
}

func (x *CurrentTrainTimeInfoMsg) GetRemainTrainTimes() int32 {
	if x != nil && x.RemainTrainTimes != nil {
		return *x.RemainTrainTimes
	}
	return 0
}

func (x *CurrentTrainTimeInfoMsg) GetLastRestoreTime() int64 {
	if x != nil && x.LastRestoreTime != nil {
		return *x.LastRestoreTime
	}
	return 0
}

type MarriageRecordTempSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reward       *string `protobuf:"bytes,1,opt,name=reward" json:"reward,omitempty"`
	MarriageData []byte  `protobuf:"bytes,2,opt,name=marriageData" json:"marriageData,omitempty"`
}

func (x *MarriageRecordTempSync) Reset() {
	*x = MarriageRecordTempSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageRecordTempSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageRecordTempSync) ProtoMessage() {}

func (x *MarriageRecordTempSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageRecordTempSync.ProtoReflect.Descriptor instead.
func (*MarriageRecordTempSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{56}
}

func (x *MarriageRecordTempSync) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *MarriageRecordTempSync) GetMarriageData() []byte {
	if x != nil {
		return x.MarriageData
	}
	return nil
}

type MarriageGetAppointApplyTimeSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestMarryTime []int64 `protobuf:"varint,1,rep,name=requestMarryTime" json:"requestMarryTime,omitempty"`
}

func (x *MarriageGetAppointApplyTimeSync) Reset() {
	*x = MarriageGetAppointApplyTimeSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageGetAppointApplyTimeSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageGetAppointApplyTimeSync) ProtoMessage() {}

func (x *MarriageGetAppointApplyTimeSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageGetAppointApplyTimeSync.ProtoReflect.Descriptor instead.
func (*MarriageGetAppointApplyTimeSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{57}
}

func (x *MarriageGetAppointApplyTimeSync) GetRequestMarryTime() []int64 {
	if x != nil {
		return x.RequestMarryTime
	}
	return nil
}

type TownDemonApplyDataSyncReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TownDemonApplyDataSyncReq) Reset() {
	*x = TownDemonApplyDataSyncReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TownDemonApplyDataSyncReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TownDemonApplyDataSyncReq) ProtoMessage() {}

func (x *TownDemonApplyDataSyncReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TownDemonApplyDataSyncReq.ProtoReflect.Descriptor instead.
func (*TownDemonApplyDataSyncReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{58}
}

type TownDemonApplyDataSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                 *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	UnionQualification  *bool   `protobuf:"varint,2,opt,name=unionQualification" json:"unionQualification,omitempty"`
	PlayerQualification *bool   `protobuf:"varint,3,opt,name=playerQualification" json:"playerQualification,omitempty"`
	IsOpen              *bool   `protobuf:"varint,4,opt,name=isOpen" json:"isOpen,omitempty"`
	RoundId             *int32  `protobuf:"varint,5,opt,name=roundId" json:"roundId,omitempty"`
	ScheduleTimestamp   []int64 `protobuf:"varint,6,rep,name=scheduleTimestamp" json:"scheduleTimestamp,omitempty"`
	TipType             *int32  `protobuf:"varint,7,opt,name=tipType" json:"tipType,omitempty"`
}

func (x *TownDemonApplyDataSync) Reset() {
	*x = TownDemonApplyDataSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TownDemonApplyDataSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TownDemonApplyDataSync) ProtoMessage() {}

func (x *TownDemonApplyDataSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TownDemonApplyDataSync.ProtoReflect.Descriptor instead.
func (*TownDemonApplyDataSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{59}
}

func (x *TownDemonApplyDataSync) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *TownDemonApplyDataSync) GetUnionQualification() bool {
	if x != nil && x.UnionQualification != nil {
		return *x.UnionQualification
	}
	return false
}

func (x *TownDemonApplyDataSync) GetPlayerQualification() bool {
	if x != nil && x.PlayerQualification != nil {
		return *x.PlayerQualification
	}
	return false
}

func (x *TownDemonApplyDataSync) GetIsOpen() bool {
	if x != nil && x.IsOpen != nil {
		return *x.IsOpen
	}
	return false
}

func (x *TownDemonApplyDataSync) GetRoundId() int32 {
	if x != nil && x.RoundId != nil {
		return *x.RoundId
	}
	return 0
}

func (x *TownDemonApplyDataSync) GetScheduleTimestamp() []int64 {
	if x != nil {
		return x.ScheduleTimestamp
	}
	return nil
}

func (x *TownDemonApplyDataSync) GetTipType() int32 {
	if x != nil && x.TipType != nil {
		return *x.TipType
	}
	return 0
}

type TownDemonTimeStampsDataSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret               *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	ScheduleTimestamp []int64 `protobuf:"varint,2,rep,name=scheduleTimestamp" json:"scheduleTimestamp,omitempty"`
}

func (x *TownDemonTimeStampsDataSync) Reset() {
	*x = TownDemonTimeStampsDataSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TownDemonTimeStampsDataSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TownDemonTimeStampsDataSync) ProtoMessage() {}

func (x *TownDemonTimeStampsDataSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TownDemonTimeStampsDataSync.ProtoReflect.Descriptor instead.
func (*TownDemonTimeStampsDataSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{60}
}

func (x *TownDemonTimeStampsDataSync) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *TownDemonTimeStampsDataSync) GetScheduleTimestamp() []int64 {
	if x != nil {
		return x.ScheduleTimestamp
	}
	return nil
}

type PeachBanquetLoginSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndShowTime *int64 `protobuf:"varint,1,opt,name=endShowTime" json:"endShowTime,omitempty"`
}

func (x *PeachBanquetLoginSync) Reset() {
	*x = PeachBanquetLoginSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeachBanquetLoginSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeachBanquetLoginSync) ProtoMessage() {}

func (x *PeachBanquetLoginSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeachBanquetLoginSync.ProtoReflect.Descriptor instead.
func (*PeachBanquetLoginSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{61}
}

func (x *PeachBanquetLoginSync) GetEndShowTime() int64 {
	if x != nil && x.EndShowTime != nil {
		return *x.EndShowTime
	}
	return 0
}

type PeachBanquetBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BanquetId *string `protobuf:"bytes,1,req,name=banquetId" json:"banquetId,omitempty"`
	BanquetLv *int32  `protobuf:"varint,2,req,name=banquetLv" json:"banquetLv,omitempty"`
}

func (x *PeachBanquetBaseInfo) Reset() {
	*x = PeachBanquetBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeachBanquetBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeachBanquetBaseInfo) ProtoMessage() {}

func (x *PeachBanquetBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeachBanquetBaseInfo.ProtoReflect.Descriptor instead.
func (*PeachBanquetBaseInfo) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{62}
}

func (x *PeachBanquetBaseInfo) GetBanquetId() string {
	if x != nil && x.BanquetId != nil {
		return *x.BanquetId
	}
	return ""
}

func (x *PeachBanquetBaseInfo) GetBanquetLv() int32 {
	if x != nil && x.BanquetLv != nil {
		return *x.BanquetLv
	}
	return 0
}

type PeachBanquetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseInfo           *PeachBanquetBaseInfo `protobuf:"bytes,1,req,name=baseInfo" json:"baseInfo,omitempty"`
	OwnerInfo          *PlayerBaseDataMsg    `protobuf:"bytes,2,req,name=ownerInfo" json:"ownerInfo,omitempty"`
	EndTime            *int64                `protobuf:"varint,3,req,name=endTime" json:"endTime,omitempty"`
	SeniorSeatEmptyNum *int32                `protobuf:"varint,4,opt,name=seniorSeatEmptyNum" json:"seniorSeatEmptyNum,omitempty"`
	HaveReward         *bool                 `protobuf:"varint,5,opt,name=haveReward" json:"haveReward,omitempty"`
	HaveApply          *bool                 `protobuf:"varint,6,opt,name=haveApply" json:"haveApply,omitempty"`
}

func (x *PeachBanquetInfo) Reset() {
	*x = PeachBanquetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeachBanquetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeachBanquetInfo) ProtoMessage() {}

func (x *PeachBanquetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeachBanquetInfo.ProtoReflect.Descriptor instead.
func (*PeachBanquetInfo) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{63}
}

func (x *PeachBanquetInfo) GetBaseInfo() *PeachBanquetBaseInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *PeachBanquetInfo) GetOwnerInfo() *PlayerBaseDataMsg {
	if x != nil {
		return x.OwnerInfo
	}
	return nil
}

func (x *PeachBanquetInfo) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *PeachBanquetInfo) GetSeniorSeatEmptyNum() int32 {
	if x != nil && x.SeniorSeatEmptyNum != nil {
		return *x.SeniorSeatEmptyNum
	}
	return 0
}

func (x *PeachBanquetInfo) GetHaveReward() bool {
	if x != nil && x.HaveReward != nil {
		return *x.HaveReward
	}
	return false
}

func (x *PeachBanquetInfo) GetHaveApply() bool {
	if x != nil && x.HaveApply != nil {
		return *x.HaveApply
	}
	return false
}

type PeachBanquetOpenSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BanquetList []*PeachBanquetInfo `protobuf:"bytes,1,rep,name=banquetList" json:"banquetList,omitempty"`
}

func (x *PeachBanquetOpenSync) Reset() {
	*x = PeachBanquetOpenSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeachBanquetOpenSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeachBanquetOpenSync) ProtoMessage() {}

func (x *PeachBanquetOpenSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeachBanquetOpenSync.ProtoReflect.Descriptor instead.
func (*PeachBanquetOpenSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{64}
}

func (x *PeachBanquetOpenSync) GetBanquetList() []*PeachBanquetInfo {
	if x != nil {
		return x.BanquetList
	}
	return nil
}

type PeachBanquetItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          *int32  `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	ItemId       *int32  `protobuf:"varint,2,req,name=itemId" json:"itemId,omitempty"`
	ServerIdList []int64 `protobuf:"varint,3,rep,name=serverIdList" json:"serverIdList,omitempty"`
}

func (x *PeachBanquetItemInfo) Reset() {
	*x = PeachBanquetItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeachBanquetItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeachBanquetItemInfo) ProtoMessage() {}

func (x *PeachBanquetItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeachBanquetItemInfo.ProtoReflect.Descriptor instead.
func (*PeachBanquetItemInfo) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{65}
}

func (x *PeachBanquetItemInfo) GetUid() int32 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

func (x *PeachBanquetItemInfo) GetItemId() int32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *PeachBanquetItemInfo) GetServerIdList() []int64 {
	if x != nil {
		return x.ServerIdList
	}
	return nil
}

type PeachBanquetItemSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemList []*PeachBanquetItemInfo `protobuf:"bytes,1,rep,name=itemList" json:"itemList,omitempty"`
}

func (x *PeachBanquetItemSync) Reset() {
	*x = PeachBanquetItemSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeachBanquetItemSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeachBanquetItemSync) ProtoMessage() {}

func (x *PeachBanquetItemSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeachBanquetItemSync.ProtoReflect.Descriptor instead.
func (*PeachBanquetItemSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{66}
}

func (x *PeachBanquetItemSync) GetItemList() []*PeachBanquetItemInfo {
	if x != nil {
		return x.ItemList
	}
	return nil
}

type UsePeachBanquetItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid *int32 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
}

func (x *UsePeachBanquetItemReq) Reset() {
	*x = UsePeachBanquetItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsePeachBanquetItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsePeachBanquetItemReq) ProtoMessage() {}

func (x *UsePeachBanquetItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsePeachBanquetItemReq.ProtoReflect.Descriptor instead.
func (*UsePeachBanquetItemReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{67}
}

func (x *UsePeachBanquetItemReq) GetUid() int32 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

type UsePeachBanquetItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Reward *string `protobuf:"bytes,2,opt,name=reward" json:"reward,omitempty"`
}

func (x *UsePeachBanquetItemResp) Reset() {
	*x = UsePeachBanquetItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsePeachBanquetItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsePeachBanquetItemResp) ProtoMessage() {}

func (x *UsePeachBanquetItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsePeachBanquetItemResp.ProtoReflect.Descriptor instead.
func (*UsePeachBanquetItemResp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{68}
}

func (x *UsePeachBanquetItemResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *UsePeachBanquetItemResp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

type FriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerBaseData *PlayerBaseDataMsg   `protobuf:"bytes,1,opt,name=playerBaseData" json:"playerBaseData,omitempty"`
	MarryNum       *int32               `protobuf:"varint,2,opt,name=marryNum" json:"marryNum,omitempty"`
	Online         *int32               `protobuf:"varint,3,opt,name=online" json:"online,omitempty"`
	LastLoginTime  *int64               `protobuf:"varint,4,opt,name=lastLoginTime" json:"lastLoginTime,omitempty"`
	IsSendOther    *bool                `protobuf:"varint,5,opt,name=isSendOther" json:"isSendOther,omitempty"`
	IsSendMe       *bool                `protobuf:"varint,6,opt,name=isSendMe" json:"isSendMe,omitempty"`
	IsReceive      *bool                `protobuf:"varint,7,opt,name=isReceive" json:"isReceive,omitempty"`
	LastMessage    *WorldMessageTempMsg `protobuf:"bytes,8,opt,name=lastMessage" json:"lastMessage,omitempty"`
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{69}
}

func (x *FriendInfo) GetPlayerBaseData() *PlayerBaseDataMsg {
	if x != nil {
		return x.PlayerBaseData
	}
	return nil
}

func (x *FriendInfo) GetMarryNum() int32 {
	if x != nil && x.MarryNum != nil {
		return *x.MarryNum
	}
	return 0
}

func (x *FriendInfo) GetOnline() int32 {
	if x != nil && x.Online != nil {
		return *x.Online
	}
	return 0
}

func (x *FriendInfo) GetLastLoginTime() int64 {
	if x != nil && x.LastLoginTime != nil {
		return *x.LastLoginTime
	}
	return 0
}

func (x *FriendInfo) GetIsSendOther() bool {
	if x != nil && x.IsSendOther != nil {
		return *x.IsSendOther
	}
	return false
}

func (x *FriendInfo) GetIsSendMe() bool {
	if x != nil && x.IsSendMe != nil {
		return *x.IsSendMe
	}
	return false
}

func (x *FriendInfo) GetIsReceive() bool {
	if x != nil && x.IsReceive != nil {
		return *x.IsReceive
	}
	return false
}

func (x *FriendInfo) GetLastMessage() *WorldMessageTempMsg {
	if x != nil {
		return x.LastMessage
	}
	return nil
}

type SyncFriendList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendList      []*FriendInfo `protobuf:"bytes,1,rep,name=friendList" json:"friendList,omitempty"`
	ReceiveNumToday *int32        `protobuf:"varint,2,opt,name=receiveNumToday" json:"receiveNumToday,omitempty"`
}

func (x *SyncFriendList) Reset() {
	*x = SyncFriendList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncFriendList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncFriendList) ProtoMessage() {}

func (x *SyncFriendList) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncFriendList.ProtoReflect.Descriptor instead.
func (*SyncFriendList) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{70}
}

func (x *SyncFriendList) GetFriendList() []*FriendInfo {
	if x != nil {
		return x.FriendList
	}
	return nil
}

func (x *SyncFriendList) GetReceiveNumToday() int32 {
	if x != nil && x.ReceiveNumToday != nil {
		return *x.ReceiveNumToday
	}
	return 0
}

type SyncFriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendInfo      *FriendInfo `protobuf:"bytes,1,opt,name=friendInfo" json:"friendInfo,omitempty"`
	Type            *int32      `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	ReceiveNumToday *int32      `protobuf:"varint,3,opt,name=receiveNumToday" json:"receiveNumToday,omitempty"`
}

func (x *SyncFriendInfo) Reset() {
	*x = SyncFriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncFriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncFriendInfo) ProtoMessage() {}

func (x *SyncFriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncFriendInfo.ProtoReflect.Descriptor instead.
func (*SyncFriendInfo) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{71}
}

func (x *SyncFriendInfo) GetFriendInfo() *FriendInfo {
	if x != nil {
		return x.FriendInfo
	}
	return nil
}

func (x *SyncFriendInfo) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SyncFriendInfo) GetReceiveNumToday() int32 {
	if x != nil && x.ReceiveNumToday != nil {
		return *x.ReceiveNumToday
	}
	return 0
}

type UniverseDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level                     *int32                      `protobuf:"varint,1,req,name=level" json:"level,omitempty"`
	StoneNum                  *int32                      `protobuf:"varint,2,req,name=stoneNum" json:"stoneNum,omitempty"`
	LastStoneRecoverTime      *int64                      `protobuf:"varint,3,opt,name=lastStoneRecoverTime" json:"lastStoneRecoverTime,omitempty"`
	UniverseSkillList         []*UniverseSkillDataMsg     `protobuf:"bytes,4,rep,name=universeSkillList" json:"universeSkillList,omitempty"`
	UniverseSkillLCombineList []*UniverseSkillLCombineMsg `protobuf:"bytes,5,rep,name=universeSkillLCombineList" json:"universeSkillLCombineList,omitempty"`
	ProtectTimes              *int32                      `protobuf:"varint,6,opt,name=protectTimes" json:"protectTimes,omitempty"`
	FreeDrawTimes             *int32                      `protobuf:"varint,7,opt,name=freeDrawTimes" json:"freeDrawTimes,omitempty"`
	EquipUniverseData         []*EquipUniverseSkillMsg    `protobuf:"bytes,8,rep,name=equipUniverseData" json:"equipUniverseData,omitempty"`
	PieceShopOpen             *bool                       `protobuf:"varint,9,opt,name=pieceShopOpen" json:"pieceShopOpen,omitempty"`
	DrawTimes                 *int32                      `protobuf:"varint,10,opt,name=drawTimes" json:"drawTimes,omitempty"`
	DrawTwiceData             *UniverseDrawTwiceMsg       `protobuf:"bytes,11,opt,name=drawTwiceData" json:"drawTwiceData,omitempty"`
}

func (x *UniverseDataMsg) Reset() {
	*x = UniverseDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniverseDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniverseDataMsg) ProtoMessage() {}

func (x *UniverseDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniverseDataMsg.ProtoReflect.Descriptor instead.
func (*UniverseDataMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{72}
}

func (x *UniverseDataMsg) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *UniverseDataMsg) GetStoneNum() int32 {
	if x != nil && x.StoneNum != nil {
		return *x.StoneNum
	}
	return 0
}

func (x *UniverseDataMsg) GetLastStoneRecoverTime() int64 {
	if x != nil && x.LastStoneRecoverTime != nil {
		return *x.LastStoneRecoverTime
	}
	return 0
}

func (x *UniverseDataMsg) GetUniverseSkillList() []*UniverseSkillDataMsg {
	if x != nil {
		return x.UniverseSkillList
	}
	return nil
}

func (x *UniverseDataMsg) GetUniverseSkillLCombineList() []*UniverseSkillLCombineMsg {
	if x != nil {
		return x.UniverseSkillLCombineList
	}
	return nil
}

func (x *UniverseDataMsg) GetProtectTimes() int32 {
	if x != nil && x.ProtectTimes != nil {
		return *x.ProtectTimes
	}
	return 0
}

func (x *UniverseDataMsg) GetFreeDrawTimes() int32 {
	if x != nil && x.FreeDrawTimes != nil {
		return *x.FreeDrawTimes
	}
	return 0
}

func (x *UniverseDataMsg) GetEquipUniverseData() []*EquipUniverseSkillMsg {
	if x != nil {
		return x.EquipUniverseData
	}
	return nil
}

func (x *UniverseDataMsg) GetPieceShopOpen() bool {
	if x != nil && x.PieceShopOpen != nil {
		return *x.PieceShopOpen
	}
	return false
}

func (x *UniverseDataMsg) GetDrawTimes() int32 {
	if x != nil && x.DrawTimes != nil {
		return *x.DrawTimes
	}
	return 0
}

func (x *UniverseDataMsg) GetDrawTwiceData() *UniverseDrawTwiceMsg {
	if x != nil {
		return x.DrawTwiceData
	}
	return nil
}

type UniverseDrawTwiceMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrawStatus      *int32             `protobuf:"varint,1,opt,name=drawStatus" json:"drawStatus,omitempty"`
	UniverseLookMsg *UniverseLookMsg   `protobuf:"bytes,2,opt,name=universeLookMsg" json:"universeLookMsg,omitempty"`
	DrawMap         []*UniverseDrawMap `protobuf:"bytes,3,rep,name=drawMap" json:"drawMap,omitempty"`
}

func (x *UniverseDrawTwiceMsg) Reset() {
	*x = UniverseDrawTwiceMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniverseDrawTwiceMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniverseDrawTwiceMsg) ProtoMessage() {}

func (x *UniverseDrawTwiceMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniverseDrawTwiceMsg.ProtoReflect.Descriptor instead.
func (*UniverseDrawTwiceMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{73}
}

func (x *UniverseDrawTwiceMsg) GetDrawStatus() int32 {
	if x != nil && x.DrawStatus != nil {
		return *x.DrawStatus
	}
	return 0
}

func (x *UniverseDrawTwiceMsg) GetUniverseLookMsg() *UniverseLookMsg {
	if x != nil {
		return x.UniverseLookMsg
	}
	return nil
}

func (x *UniverseDrawTwiceMsg) GetDrawMap() []*UniverseDrawMap {
	if x != nil {
		return x.DrawMap
	}
	return nil
}

type UniverseDrawMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos   *int32 `protobuf:"varint,1,opt,name=pos" json:"pos,omitempty"`
	Index *int32 `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
}

func (x *UniverseDrawMap) Reset() {
	*x = UniverseDrawMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniverseDrawMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniverseDrawMap) ProtoMessage() {}

func (x *UniverseDrawMap) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniverseDrawMap.ProtoReflect.Descriptor instead.
func (*UniverseDrawMap) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{74}
}

func (x *UniverseDrawMap) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *UniverseDrawMap) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type UniverseDataMsgSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniverseDataMsg *UniverseDataMsg `protobuf:"bytes,1,req,name=universeDataMsg" json:"universeDataMsg,omitempty"`
}

func (x *UniverseDataMsgSync) Reset() {
	*x = UniverseDataMsgSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniverseDataMsgSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniverseDataMsgSync) ProtoMessage() {}

func (x *UniverseDataMsgSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniverseDataMsgSync.ProtoReflect.Descriptor instead.
func (*UniverseDataMsgSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{75}
}

func (x *UniverseDataMsgSync) GetUniverseDataMsg() *UniverseDataMsg {
	if x != nil {
		return x.UniverseDataMsg
	}
	return nil
}

type UniverseSkillDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuneId *int32 `protobuf:"varint,1,req,name=runeId" json:"runeId,omitempty"`
	Lv     *int32 `protobuf:"varint,2,req,name=lv" json:"lv,omitempty"`
}

func (x *UniverseSkillDataMsg) Reset() {
	*x = UniverseSkillDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniverseSkillDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniverseSkillDataMsg) ProtoMessage() {}

func (x *UniverseSkillDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniverseSkillDataMsg.ProtoReflect.Descriptor instead.
func (*UniverseSkillDataMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{76}
}

func (x *UniverseSkillDataMsg) GetRuneId() int32 {
	if x != nil && x.RuneId != nil {
		return *x.RuneId
	}
	return 0
}

func (x *UniverseSkillDataMsg) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

type UniverseSkillLCombineMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CombineId *int32 `protobuf:"varint,1,req,name=combineId" json:"combineId,omitempty"`
	Lv        *int32 `protobuf:"varint,2,req,name=lv" json:"lv,omitempty"`
}

func (x *UniverseSkillLCombineMsg) Reset() {
	*x = UniverseSkillLCombineMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniverseSkillLCombineMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniverseSkillLCombineMsg) ProtoMessage() {}

func (x *UniverseSkillLCombineMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniverseSkillLCombineMsg.ProtoReflect.Descriptor instead.
func (*UniverseSkillLCombineMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{77}
}

func (x *UniverseSkillLCombineMsg) GetCombineId() int32 {
	if x != nil && x.CombineId != nil {
		return *x.CombineId
	}
	return 0
}

func (x *UniverseSkillLCombineMsg) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

type UniverseLookMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniverseLv *int32                `protobuf:"varint,1,opt,name=universeLv" json:"universeLv,omitempty"`
	HeadInfo   *PlayerHeadAndNameMsg `protobuf:"bytes,2,opt,name=headInfo" json:"headInfo,omitempty"`
	RobotId    *int32                `protobuf:"varint,3,opt,name=robotId" json:"robotId,omitempty"`
	IsTop      *bool                 `protobuf:"varint,4,opt,name=isTop" json:"isTop,omitempty"`
}

func (x *UniverseLookMsg) Reset() {
	*x = UniverseLookMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniverseLookMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniverseLookMsg) ProtoMessage() {}

func (x *UniverseLookMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniverseLookMsg.ProtoReflect.Descriptor instead.
func (*UniverseLookMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{78}
}

func (x *UniverseLookMsg) GetUniverseLv() int32 {
	if x != nil && x.UniverseLv != nil {
		return *x.UniverseLv
	}
	return 0
}

func (x *UniverseLookMsg) GetHeadInfo() *PlayerHeadAndNameMsg {
	if x != nil {
		return x.HeadInfo
	}
	return nil
}

func (x *UniverseLookMsg) GetRobotId() int32 {
	if x != nil && x.RobotId != nil {
		return *x.RobotId
	}
	return 0
}

func (x *UniverseLookMsg) GetIsTop() bool {
	if x != nil && x.IsTop != nil {
		return *x.IsTop
	}
	return false
}

type PlayerFairyLandDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoarStatus     *int32                   `protobuf:"varint,1,req,name=soarStatus" json:"soarStatus,omitempty"`
	HeartDevilInfo *FairyLandHeartDevilInfo `protobuf:"bytes,2,opt,name=heartDevilInfo" json:"heartDevilInfo,omitempty"`
	BattleInfo     *FairyLandBattleInfo     `protobuf:"bytes,3,opt,name=battleInfo" json:"battleInfo,omitempty"`
	HelpTimes      *int32                   `protobuf:"varint,4,opt,name=helpTimes" json:"helpTimes,omitempty"`
}

func (x *PlayerFairyLandDataMsg) Reset() {
	*x = PlayerFairyLandDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerFairyLandDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerFairyLandDataMsg) ProtoMessage() {}

func (x *PlayerFairyLandDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerFairyLandDataMsg.ProtoReflect.Descriptor instead.
func (*PlayerFairyLandDataMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{79}
}

func (x *PlayerFairyLandDataMsg) GetSoarStatus() int32 {
	if x != nil && x.SoarStatus != nil {
		return *x.SoarStatus
	}
	return 0
}

func (x *PlayerFairyLandDataMsg) GetHeartDevilInfo() *FairyLandHeartDevilInfo {
	if x != nil {
		return x.HeartDevilInfo
	}
	return nil
}

func (x *PlayerFairyLandDataMsg) GetBattleInfo() *FairyLandBattleInfo {
	if x != nil {
		return x.BattleInfo
	}
	return nil
}

func (x *PlayerFairyLandDataMsg) GetHelpTimes() int32 {
	if x != nil && x.HelpTimes != nil {
		return *x.HelpTimes
	}
	return 0
}

type FairyLandServerSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerIdList []int64 `protobuf:"varint,1,rep,name=serverIdList" json:"serverIdList,omitempty"`
}

func (x *FairyLandServerSync) Reset() {
	*x = FairyLandServerSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FairyLandServerSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FairyLandServerSync) ProtoMessage() {}

func (x *FairyLandServerSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FairyLandServerSync.ProtoReflect.Descriptor instead.
func (*FairyLandServerSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{80}
}

func (x *FairyLandServerSync) GetServerIdList() []int64 {
	if x != nil {
		return x.ServerIdList
	}
	return nil
}

type FairyLandHeartDevilInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	BattleTimes     *int32 `protobuf:"varint,2,opt,name=battleTimes" json:"battleTimes,omitempty"`
	LastRefreshTime *int64 `protobuf:"varint,3,opt,name=lastRefreshTime" json:"lastRefreshTime,omitempty"`
}

func (x *FairyLandHeartDevilInfo) Reset() {
	*x = FairyLandHeartDevilInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FairyLandHeartDevilInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FairyLandHeartDevilInfo) ProtoMessage() {}

func (x *FairyLandHeartDevilInfo) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FairyLandHeartDevilInfo.ProtoReflect.Descriptor instead.
func (*FairyLandHeartDevilInfo) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{81}
}

func (x *FairyLandHeartDevilInfo) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *FairyLandHeartDevilInfo) GetBattleTimes() int32 {
	if x != nil && x.BattleTimes != nil {
		return *x.BattleTimes
	}
	return 0
}

func (x *FairyLandHeartDevilInfo) GetLastRefreshTime() int64 {
	if x != nil && x.LastRefreshTime != nil {
		return *x.LastRefreshTime
	}
	return 0
}

type FairyLandBattleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hp        *int64                     `protobuf:"varint,1,req,name=hp" json:"hp,omitempty"`
	MaxHpTime *int64                     `protobuf:"varint,2,opt,name=maxHpTime" json:"maxHpTime,omitempty"`
	Members   []*PlayerAppearanceDataMsg `protobuf:"bytes,3,rep,name=members" json:"members,omitempty"`
}

func (x *FairyLandBattleInfo) Reset() {
	*x = FairyLandBattleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FairyLandBattleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FairyLandBattleInfo) ProtoMessage() {}

func (x *FairyLandBattleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FairyLandBattleInfo.ProtoReflect.Descriptor instead.
func (*FairyLandBattleInfo) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{82}
}

func (x *FairyLandBattleInfo) GetHp() int64 {
	if x != nil && x.Hp != nil {
		return *x.Hp
	}
	return 0
}

func (x *FairyLandBattleInfo) GetMaxHpTime() int64 {
	if x != nil && x.MaxHpTime != nil {
		return *x.MaxHpTime
	}
	return 0
}

func (x *FairyLandBattleInfo) GetMembers() []*PlayerAppearanceDataMsg {
	if x != nil {
		return x.Members
	}
	return nil
}

type FairyLandSouthDoorHelpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	PlayerId *int64 `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
	InviteId *int32 `protobuf:"varint,3,req,name=inviteId" json:"inviteId,omitempty"`
	ServerId *int64 `protobuf:"varint,4,req,name=serverId" json:"serverId,omitempty"`
	UnionId  *int64 `protobuf:"varint,5,opt,name=unionId" json:"unionId,omitempty"`
}

func (x *FairyLandSouthDoorHelpReq) Reset() {
	*x = FairyLandSouthDoorHelpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FairyLandSouthDoorHelpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FairyLandSouthDoorHelpReq) ProtoMessage() {}

func (x *FairyLandSouthDoorHelpReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FairyLandSouthDoorHelpReq.ProtoReflect.Descriptor instead.
func (*FairyLandSouthDoorHelpReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{83}
}

func (x *FairyLandSouthDoorHelpReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *FairyLandSouthDoorHelpReq) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *FairyLandSouthDoorHelpReq) GetInviteId() int32 {
	if x != nil && x.InviteId != nil {
		return *x.InviteId
	}
	return 0
}

func (x *FairyLandSouthDoorHelpReq) GetServerId() int64 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

func (x *FairyLandSouthDoorHelpReq) GetUnionId() int64 {
	if x != nil && x.UnionId != nil {
		return *x.UnionId
	}
	return 0
}

type FairyLandSouthDoorHelpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Rewards   *string `protobuf:"bytes,2,opt,name=rewards" json:"rewards,omitempty"`
	HelpTimes *int32  `protobuf:"varint,3,opt,name=helpTimes" json:"helpTimes,omitempty"`
	PlayerIds []int64 `protobuf:"varint,4,rep,name=playerIds" json:"playerIds,omitempty"`
}

func (x *FairyLandSouthDoorHelpResp) Reset() {
	*x = FairyLandSouthDoorHelpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FairyLandSouthDoorHelpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FairyLandSouthDoorHelpResp) ProtoMessage() {}

func (x *FairyLandSouthDoorHelpResp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FairyLandSouthDoorHelpResp.ProtoReflect.Descriptor instead.
func (*FairyLandSouthDoorHelpResp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{84}
}

func (x *FairyLandSouthDoorHelpResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *FairyLandSouthDoorHelpResp) GetRewards() string {
	if x != nil && x.Rewards != nil {
		return *x.Rewards
	}
	return ""
}

func (x *FairyLandSouthDoorHelpResp) GetHelpTimes() int32 {
	if x != nil && x.HelpTimes != nil {
		return *x.HelpTimes
	}
	return 0
}

func (x *FairyLandSouthDoorHelpResp) GetPlayerIds() []int64 {
	if x != nil {
		return x.PlayerIds
	}
	return nil
}

type UnionBountyGetExistMonsterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnionBountyGetExistMonsterReq) Reset() {
	*x = UnionBountyGetExistMonsterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionBountyGetExistMonsterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionBountyGetExistMonsterReq) ProtoMessage() {}

func (x *UnionBountyGetExistMonsterReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionBountyGetExistMonsterReq.ProtoReflect.Descriptor instead.
func (*UnionBountyGetExistMonsterReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{85}
}

type UnionBountyGetExistMonsterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret                *int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	MonsterIdList      []int64 `protobuf:"varint,2,rep,name=monsterIdList" json:"monsterIdList,omitempty"`
	OwnerMonsterIdList []int64 `protobuf:"varint,3,rep,name=ownerMonsterIdList" json:"ownerMonsterIdList,omitempty"`
}

func (x *UnionBountyGetExistMonsterResp) Reset() {
	*x = UnionBountyGetExistMonsterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionBountyGetExistMonsterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionBountyGetExistMonsterResp) ProtoMessage() {}

func (x *UnionBountyGetExistMonsterResp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionBountyGetExistMonsterResp.ProtoReflect.Descriptor instead.
func (*UnionBountyGetExistMonsterResp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{86}
}

func (x *UnionBountyGetExistMonsterResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *UnionBountyGetExistMonsterResp) GetMonsterIdList() []int64 {
	if x != nil {
		return x.MonsterIdList
	}
	return nil
}

func (x *UnionBountyGetExistMonsterResp) GetOwnerMonsterIdList() []int64 {
	if x != nil {
		return x.OwnerMonsterIdList
	}
	return nil
}

type UnionBountyManageAskHelpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	PlayerId *int64 `protobuf:"varint,2,opt,name=playerId" json:"playerId,omitempty"`
}

func (x *UnionBountyManageAskHelpReq) Reset() {
	*x = UnionBountyManageAskHelpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionBountyManageAskHelpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionBountyManageAskHelpReq) ProtoMessage() {}

func (x *UnionBountyManageAskHelpReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionBountyManageAskHelpReq.ProtoReflect.Descriptor instead.
func (*UnionBountyManageAskHelpReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{87}
}

func (x *UnionBountyManageAskHelpReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *UnionBountyManageAskHelpReq) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type UnionBountyManageAskHelpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
}

func (x *UnionBountyManageAskHelpResp) Reset() {
	*x = UnionBountyManageAskHelpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionBountyManageAskHelpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionBountyManageAskHelpResp) ProtoMessage() {}

func (x *UnionBountyManageAskHelpResp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionBountyManageAskHelpResp.ProtoReflect.Descriptor instead.
func (*UnionBountyManageAskHelpResp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{88}
}

func (x *UnionBountyManageAskHelpResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type UnionBountySynMonsterInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            *int32           `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	AllBattleRecord *BattleRecordMsg `protobuf:"bytes,2,opt,name=allBattleRecord" json:"allBattleRecord,omitempty"`
}

func (x *UnionBountySynMonsterInfoMsg) Reset() {
	*x = UnionBountySynMonsterInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionBountySynMonsterInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionBountySynMonsterInfoMsg) ProtoMessage() {}

func (x *UnionBountySynMonsterInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionBountySynMonsterInfoMsg.ProtoReflect.Descriptor instead.
func (*UnionBountySynMonsterInfoMsg) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{89}
}

func (x *UnionBountySynMonsterInfoMsg) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *UnionBountySynMonsterInfoMsg) GetAllBattleRecord() *BattleRecordMsg {
	if x != nil {
		return x.AllBattleRecord
	}
	return nil
}

type BeingSnatchedSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            *int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	CultivationTime *int32 `protobuf:"varint,2,opt,name=cultivationTime" json:"cultivationTime,omitempty"`
	GetAnima        *int64 `protobuf:"varint,3,opt,name=getAnima" json:"getAnima,omitempty"`
}

func (x *BeingSnatchedSync) Reset() {
	*x = BeingSnatchedSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeingSnatchedSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeingSnatchedSync) ProtoMessage() {}

func (x *BeingSnatchedSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeingSnatchedSync.ProtoReflect.Descriptor instead.
func (*BeingSnatchedSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{90}
}

func (x *BeingSnatchedSync) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *BeingSnatchedSync) GetCultivationTime() int32 {
	if x != nil && x.CultivationTime != nil {
		return *x.CultivationTime
	}
	return 0
}

func (x *BeingSnatchedSync) GetGetAnima() int64 {
	if x != nil && x.GetAnima != nil {
		return *x.GetAnima
	}
	return 0
}

type CheckFairyPoolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Id         *int32 `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	CardIndex  *int32 `protobuf:"varint,3,req,name=cardIndex" json:"cardIndex,omitempty"`
	PlayerId   *int64 `protobuf:"varint,4,req,name=playerId" json:"playerId,omitempty"`
}

func (x *CheckFairyPoolReq) Reset() {
	*x = CheckFairyPoolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckFairyPoolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFairyPoolReq) ProtoMessage() {}

func (x *CheckFairyPoolReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFairyPoolReq.ProtoReflect.Descriptor instead.
func (*CheckFairyPoolReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{91}
}

func (x *CheckFairyPoolReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *CheckFairyPoolReq) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CheckFairyPoolReq) GetCardIndex() int32 {
	if x != nil && x.CardIndex != nil {
		return *x.CardIndex
	}
	return 0
}

func (x *CheckFairyPoolReq) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type CheckFairyPoolResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *CheckFairyPoolResp) Reset() {
	*x = CheckFairyPoolResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckFairyPoolResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFairyPoolResp) ProtoMessage() {}

func (x *CheckFairyPoolResp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFairyPoolResp.ProtoReflect.Descriptor instead.
func (*CheckFairyPoolResp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{92}
}

func (x *CheckFairyPoolResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type YardLoginSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PieceShopOpen *bool   `protobuf:"varint,1,opt,name=pieceShopOpen" json:"pieceShopOpen,omitempty"`
	GrassNum      *string `protobuf:"bytes,2,opt,name=grassNum" json:"grassNum,omitempty"`
}

func (x *YardLoginSync) Reset() {
	*x = YardLoginSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YardLoginSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YardLoginSync) ProtoMessage() {}

func (x *YardLoginSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YardLoginSync.ProtoReflect.Descriptor instead.
func (*YardLoginSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{93}
}

func (x *YardLoginSync) GetPieceShopOpen() bool {
	if x != nil && x.PieceShopOpen != nil {
		return *x.PieceShopOpen
	}
	return false
}

func (x *YardLoginSync) GetGrassNum() string {
	if x != nil && x.GrassNum != nil {
		return *x.GrassNum
	}
	return ""
}

type YardBuildUpSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*YardBuildUpData `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (x *YardBuildUpSync) Reset() {
	*x = YardBuildUpSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YardBuildUpSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YardBuildUpSync) ProtoMessage() {}

func (x *YardBuildUpSync) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YardBuildUpSync.ProtoReflect.Descriptor instead.
func (*YardBuildUpSync) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{94}
}

func (x *YardBuildUpSync) GetData() []*YardBuildUpData {
	if x != nil {
		return x.Data
	}
	return nil
}

type YardBuildUpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId *int64 `protobuf:"varint,1,opt,name=uniqueId" json:"uniqueId,omitempty"`
	CurLv    *int32 `protobuf:"varint,2,opt,name=curLv" json:"curLv,omitempty"`
}

func (x *YardBuildUpData) Reset() {
	*x = YardBuildUpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YardBuildUpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YardBuildUpData) ProtoMessage() {}

func (x *YardBuildUpData) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YardBuildUpData.ProtoReflect.Descriptor instead.
func (*YardBuildUpData) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{95}
}

func (x *YardBuildUpData) GetUniqueId() int64 {
	if x != nil && x.UniqueId != nil {
		return *x.UniqueId
	}
	return 0
}

func (x *YardBuildUpData) GetCurLv() int32 {
	if x != nil && x.CurLv != nil {
		return *x.CurLv
	}
	return 0
}

type ShuraBattleApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId *int32 `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	TeamId     *int64 `protobuf:"varint,2,req,name=teamId" json:"teamId,omitempty"`
	Join       *bool  `protobuf:"varint,3,req,name=join" json:"join,omitempty"`
}

func (x *ShuraBattleApplyReq) Reset() {
	*x = ShuraBattleApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShuraBattleApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShuraBattleApplyReq) ProtoMessage() {}

func (x *ShuraBattleApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShuraBattleApplyReq.ProtoReflect.Descriptor instead.
func (*ShuraBattleApplyReq) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{96}
}

func (x *ShuraBattleApplyReq) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ShuraBattleApplyReq) GetTeamId() int64 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

func (x *ShuraBattleApplyReq) GetJoin() bool {
	if x != nil && x.Join != nil {
		return *x.Join
	}
	return false
}

type ShuraBattleApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret             *int32  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	ApplyTeamIdList []int64 `protobuf:"varint,7,rep,name=applyTeamIdList" json:"applyTeamIdList,omitempty"`
}

func (x *ShuraBattleApplyResp) Reset() {
	*x = ShuraBattleApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PackagesBase_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShuraBattleApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShuraBattleApplyResp) ProtoMessage() {}

func (x *ShuraBattleApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_PackagesBase_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShuraBattleApplyResp.ProtoReflect.Descriptor instead.
func (*ShuraBattleApplyResp) Descriptor() ([]byte, []int) {
	return file_PackagesBase_proto_rawDescGZIP(), []int{97}
}

func (x *ShuraBattleApplyResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *ShuraBattleApplyResp) GetApplyTeamIdList() []int64 {
	if x != nil {
		return x.ApplyTeamIdList
	}
	return nil
}

var File_PackagesBase_proto protoreflect.FileDescriptor

var file_PackagesBase_proto_rawDesc = []byte{
	0x0a, 0x12, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x1a, 0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x13, 0x53,
	0x6b, 0x79, 0x57, 0x61, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x79,
	0x6e, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x61,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x57,
	0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x57, 0x65,
	0x65, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x4e, 0x65,
	0x78, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x22, 0x35, 0x0a, 0x13, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44,
	0x75, 0x65, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x6e, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x08, 0x52, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc4, 0x02,
	0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x65, 0x6c, 0x4d,
	0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x68, 0x61, 0x73, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x68, 0x61, 0x73, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x44, 0x65, 0x70, 0x75,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x4f, 0x72, 0x44, 0x65, 0x70, 0x75, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x46,
	0x0a, 0x07, 0x6d, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x65, 0x6c, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x6d,
	0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x09, 0x6f, 0x70, 0x70, 0x6f, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x65, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x6f, 0x70, 0x70, 0x6f, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x18, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x75,
	0x65, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x75, 0x72, 0x50, 0x65, 0x6f, 0x70, 0x6c,
	0x65, 0x22, 0x30, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x65, 0x6c, 0x53, 0x79,
	0x6e, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x15, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x65, 0x6c,
	0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x65,
	0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x22, 0x8d, 0x02, 0x0a,
	0x15, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x69, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x73, 0x42, 0x79, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x42, 0x79, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x66, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x44, 0x75, 0x65, 0x6c, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x66, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x2a, 0x0a, 0x10, 0x68, 0x61, 0x73, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x61, 0x73, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x95, 0x02, 0x0a,
	0x12, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x65, 0x6c, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x07, 0x6d, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44,
	0x75, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x6d, 0x79, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x09, 0x6f, 0x70, 0x70, 0x6f, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f,
	0x6e, 0x44, 0x75, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x6f, 0x70,
	0x70, 0x6f, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x4c, 0x65,
	0x66, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x75,
	0x72, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x65, 0x6c, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0xaf, 0x02, 0x0a, 0x10, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x75,
	0x65, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x63, 0x75, 0x72, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x4d, 0x0a, 0x0b, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x65, 0x6c, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x0b, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0xf3, 0x01, 0x0a, 0x17, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x44, 0x75, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d,
	0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x68, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x78, 0x48, 0x65,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x78, 0x48,
	0x65, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x70,
	0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x48, 0x65, 0x61, 0x64, 0x49, 0x63, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x65, 0x71, 0x75, 0x69, 0x70, 0x48, 0x65, 0x61,
	0x64, 0x49, 0x63, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x17,
	0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x65, 0x6c, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x79,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x70, 0x6f, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x70, 0x70, 0x6f, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7e, 0x0a, 0x11, 0x52, 0x75, 0x6c, 0x65, 0x54,
	0x72, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x35, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x52, 0x75, 0x6c, 0x65, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x6f, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x06, 0x62, 0x6f, 0x73, 0x73, 0x49, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x11, 0x52, 0x75, 0x6c, 0x65,
	0x54, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x39, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x54, 0x65,
	0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x65,
	0x73, 0x74, 0x42, 0x6f, 0x6f, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a,
	0x62, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x6f, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x79,
	0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x46, 0x0a, 0x16, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x6f, 0x73,
	0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f,
	0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x62, 0x6f, 0x73, 0x73,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x22, 0x5c, 0x0a, 0x1a, 0x52, 0x75, 0x6c, 0x65,
	0x54, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x6f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x72,
	0x69, 0x61, 0x6c, 0x42, 0x6f, 0x73, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x16, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x16, 0x4d, 0x6f, 0x75, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x53, 0x65, 0x61, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x22, 0x57, 0x0a, 0x1b, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x53,
	0x65, 0x61, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x16,
	0x50, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x16, 0x50, 0x6c,
	0x61, 0x6e, 0x65, 0x73, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x73,
	0x54, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x22, 0xc5, 0x01, 0x0a, 0x1b, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x73,
	0x54, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x68, 0x69, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x61, 0x63, 0x68, 0x69, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x64, 0x22, 0x20, 0x0a,
	0x1e, 0x48, 0x6f, 0x6c, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x22,
	0xf3, 0x01, 0x0a, 0x1b, 0x48, 0x6f, 0x6c, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x68,
	0x61, 0x73, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x68, 0x61, 0x73, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f,
	0x70, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x11, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x11, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x6e,
	0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x49, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x72,
	0x6f, 0x73, 0x73, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x20, 0x48, 0x6f, 0x6c, 0x79, 0x4c, 0x61, 0x6e,
	0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x11, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x9f, 0x01, 0x0a, 0x17, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x6c, 0x4c, 0x69, 0x51, 0x75, 0x69, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x02, 0x6c, 0x76, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x41, 0x75,
	0x72, 0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x41,
	0x75, 0x72, 0x61, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x6f, 0x73, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x15, 0x64, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x73,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x14,
	0x41, 0x73, 0x6b, 0x44, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x79, 0x6e,
	0x63, 0x4d, 0x73, 0x67, 0x12, 0x4c, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41,
	0x73, 0x6b, 0x44, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x44, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x73, 0x6b, 0x44, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x73, 0x67, 0x52, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x22, 0xe2, 0x01, 0x0a, 0x16, 0x41, 0x73, 0x6b,
	0x44, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54,
	0x65, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x69,
	0x7a, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x65, 0x69, 0x7a, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x69,
	0x7a, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0c, 0x73, 0x65, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x22, 0x84, 0x03,
	0x0a, 0x14, 0x41, 0x73, 0x6b, 0x44, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x79, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x62, 0x65, 0x67,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x75,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x64, 0x75, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x09, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x50, 0x72, 0x65,
	0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x75, 0x65, 0x73, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x75, 0x65, 0x73, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x22, 0x3b, 0x0a, 0x19, 0x41, 0x73, 0x6b, 0x44, 0x69, 0x6e, 0x67, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x22, 0xe0, 0x01, 0x0a, 0x1a, 0x41, 0x73, 0x6b, 0x44, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x47, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x07, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x41, 0x73, 0x6b, 0x44, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x19, 0x41, 0x73, 0x6b, 0x44, 0x69, 0x6e, 0x67,
	0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x4d,
	0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x52,
	0x0a, 0x18, 0x41, 0x73, 0x6b, 0x44, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x22, 0x75, 0x0a, 0x12, 0x53, 0x6b, 0x79, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x45, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x53, 0x6b, 0x79, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x53, 0x6b,
	0x79, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x79, 0x70, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6d, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x65, 0x67,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x8d, 0x02, 0x0a, 0x1b, 0x41, 0x75, 0x73, 0x70, 0x69, 0x63,
	0x69, 0x6f, 0x75, 0x73, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x44, 0x72,
	0x61, 0x77, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x44, 0x72, 0x61,
	0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x53,
	0x75, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x64, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x63, 0x64, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x61, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x61, 0x72, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0xb3, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x61, 0x6c,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x43, 0x61, 0x72, 0x64, 0x46, 0x72, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x69, 0x73, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x46, 0x72, 0x65, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x73, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x46, 0x72, 0x65, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x46, 0x72, 0x65,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x22, 0x8c, 0x02, 0x0a, 0x1a,
	0x52, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x6f,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x68, 0x61, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x62, 0x0a, 0x16, 0x72, 0x65, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x16, 0x72, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x46, 0x0a, 0x16, 0x52, 0x65,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4e, 0x65, 0x77, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x4d, 0x0a, 0x0f,
	0x52, 0x65, 0x6e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x52, 0x65, 0x6e, 0x65,
	0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x6e, 0x65,
	0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x53, 0x0a, 0x11, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x11, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x49, 0x64,
	0x22, 0xb6, 0x01, 0x0a, 0x19, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x6d, 0x6f, 0x6e,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x4a,
	0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x44, 0x65,
	0x6d, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x0b, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x6d, 0x6f, 0x6e,
	0x73, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x87, 0x01, 0x0a, 0x16, 0x44, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x73, 0x67, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x9e, 0x01, 0x0a, 0x17, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x44, 0x65,
	0x6d, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x53, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x4d, 0x73, 0x67, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x22, 0x52, 0x0a, 0x14, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x44, 0x65,
	0x6d, 0x6f, 0x6e, 0x73, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x15, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x73, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x22, 0x37, 0x0a, 0x15, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x6d,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x16,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x66, 0x75,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x5b, 0x0a, 0x1d, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x1e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x44,
	0x65, 0x6d, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x5a, 0x0a, 0x1c, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x1d, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x44,
	0x65, 0x6d, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x14, 0x50, 0x75, 0x70,
	0x69, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x79, 0x6e,
	0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x74, 0x4c, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x65, 0x63, 0x74, 0x4c, 0x76, 0x12, 0x49, 0x0a, 0x09, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x6e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x75, 0x6e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x64, 0x50, 0x75, 0x70,
	0x69, 0x6c, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x68, 0x61, 0x76, 0x65, 0x50, 0x75,
	0x70, 0x69, 0x6c, 0x53, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x16, 0x68, 0x61, 0x76, 0x65, 0x50, 0x75, 0x70, 0x69,
	0x6c, 0x53, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa5,
	0x01, 0x0a, 0x17, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x16, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x53, 0x79, 0x6e, 0x63,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x72,
	0x69, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x6d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x1f,
	0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x54,
	0x6f, 0x77, 0x6e, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x22, 0x86, 0x02, 0x0a, 0x16, 0x54, 0x6f, 0x77,
	0x6e, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x11, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x5d, 0x0a, 0x1b, 0x54, 0x6f, 0x77, 0x6e, 0x44, 0x65, 0x6d, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x11, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0x39, 0x0a, 0x15, 0x50, 0x65, 0x61, 0x63, 0x68, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x64,
	0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x65, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x14, 0x50,
	0x65, 0x61, 0x63, 0x68, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x4c, 0x76, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x4c, 0x76, 0x22,
	0xa5, 0x02, 0x0a, 0x10, 0x50, 0x65, 0x61, 0x63, 0x68, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x61, 0x63,
	0x68, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x09, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x65, 0x6e,
	0x69, 0x6f, 0x72, 0x53, 0x65, 0x61, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x69, 0x6f, 0x72, 0x53, 0x65, 0x61,
	0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x76,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61,
	0x76, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x22, 0x5e, 0x0a, 0x14, 0x50, 0x65, 0x61, 0x63, 0x68,
	0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x12,
	0x46, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x61, 0x63, 0x68, 0x42,
	0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x71,
	0x75, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x64, 0x0a, 0x14, 0x50, 0x65, 0x61, 0x63, 0x68,
	0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5c, 0x0a,
	0x14, 0x50, 0x65, 0x61, 0x63, 0x68, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x44, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71,
	0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x65, 0x61,
	0x63, 0x68, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2a, 0x0a, 0x16, 0x55,
	0x73, 0x65, 0x50, 0x65, 0x61, 0x63, 0x68, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x50, 0x65,
	0x61, 0x63, 0x68, 0x42, 0x61, 0x6e, 0x71, 0x75, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xdc, 0x02, 0x0a,
	0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x0e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61,
	0x72, 0x72, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61,
	0x72, 0x72, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x65, 0x6e,
	0x64, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x12, 0x49, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7a, 0x0a, 0x0e, 0x53,
	0x79, 0x6e, 0x63, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a,
	0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x54, 0x6f, 0x64, 0x61, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4e,
	0x75, 0x6d, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x0a, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79,
	0x4d, 0x73, 0x67, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x54, 0x6f, 0x64, 0x61,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x4e, 0x75, 0x6d, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x22, 0xf2, 0x04, 0x0a, 0x0f, 0x55, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x32,
	0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6c, 0x61,
	0x73, 0x74, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x11, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x19, 0x75, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x43, 0x6f, 0x6d, 0x62,
	0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x4c, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x19, 0x75, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x43, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72,
	0x65, 0x65, 0x44, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x66, 0x72, 0x65, 0x65, 0x44, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x57, 0x0a, 0x11, 0x65, 0x71, 0x75, 0x69, 0x70, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x11, 0x65, 0x71, 0x75, 0x69, 0x70, 0x55, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x69, 0x65,
	0x63, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x70, 0x69, 0x65, 0x63, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x64, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x4e, 0x0a,
	0x0d, 0x64, 0x72, 0x61, 0x77, 0x54, 0x77, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x44, 0x72, 0x61, 0x77, 0x54, 0x77, 0x69, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x0d,
	0x64, 0x72, 0x61, 0x77, 0x54, 0x77, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xc4, 0x01,
	0x0a, 0x14, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x44, 0x72, 0x61, 0x77, 0x54, 0x77,
	0x69, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x72, 0x61, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x72, 0x61, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4c, 0x6f, 0x6f,
	0x6b, 0x4d, 0x73, 0x67, 0x52, 0x0f, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4c, 0x6f,
	0x6f, 0x6b, 0x4d, 0x73, 0x67, 0x12, 0x3d, 0x0a, 0x07, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x70,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x44, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x70, 0x52, 0x07, 0x64, 0x72, 0x61,
	0x77, 0x4d, 0x61, 0x70, 0x22, 0x39, 0x0a, 0x0f, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x44, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x64, 0x0a, 0x13, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x73, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x4d, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x52, 0x0f, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x73, 0x67, 0x22, 0x3e, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x75, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x75, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x02, 0x6c, 0x76, 0x22, 0x48, 0x0a, 0x18, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4d, 0x73,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x6c, 0x76, 0x22,
	0xa7, 0x01, 0x0a, 0x0f, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4c, 0x6f, 0x6f, 0x6b,
	0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4c,
	0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x4c, 0x76, 0x12, 0x44, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x48, 0x65, 0x61, 0x64, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x52,
	0x08, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x54, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x54, 0x6f, 0x70, 0x22, 0xf4, 0x01, 0x0a, 0x16, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x46, 0x61, 0x69, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x61, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x53, 0x0a, 0x0e, 0x68, 0x65, 0x61, 0x72, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x46, 0x61, 0x69, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x0a, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x46, 0x61, 0x69, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x22, 0x39, 0x0a, 0x13, 0x46, 0x61, 0x69, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x75, 0x0a, 0x17, 0x46,
	0x61, 0x69, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x13, 0x46, 0x61, 0x69, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x64,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x70,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x68, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x48, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d,
	0x61, 0x78, 0x48, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22,
	0x9d, 0x01, 0x0a, 0x19, 0x46, 0x61, 0x69, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x53, 0x6f, 0x75,
	0x74, 0x68, 0x44, 0x6f, 0x6f, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x84, 0x01, 0x0a, 0x1a, 0x46, 0x61, 0x69, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x53, 0x6f, 0x75,
	0x74, 0x68, 0x44, 0x6f, 0x6f, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65,
	0x6c, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68,
	0x65, 0x6c, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x42,
	0x6f, 0x75, 0x6e, 0x74, 0x79, 0x47, 0x65, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x22, 0x88, 0x01, 0x0a, 0x1e, 0x55, 0x6e, 0x69, 0x6f,
	0x6e, 0x42, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x47, 0x65, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x12,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x4d, 0x0a, 0x1b, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x75, 0x6e, 0x74,
	0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x41, 0x73, 0x6b, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x30, 0x0a, 0x1c, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x75, 0x6e, 0x74, 0x79,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x41, 0x73, 0x6b, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x1c, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x75,
	0x6e, 0x74, 0x79, 0x53, 0x79, 0x6e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x6d, 0x0a, 0x11, 0x42, 0x65, 0x69, 0x6e, 0x67,
	0x53, 0x6e, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x75, 0x6c, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x75, 0x6c, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x65,
	0x74, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x67, 0x65,
	0x74, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x22, 0x7d, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46,
	0x61, 0x69, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x61,
	0x69, 0x72, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x51, 0x0a,
	0x0d, 0x59, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x24,
	0x0a, 0x0d, 0x70, 0x69, 0x65, 0x63, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x69, 0x65, 0x63, 0x65, 0x53, 0x68, 0x6f, 0x70,
	0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x73, 0x73, 0x4e, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x61, 0x73, 0x73, 0x4e, 0x75, 0x6d,
	0x22, 0x4a, 0x0a, 0x0f, 0x59, 0x61, 0x72, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x70, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x59, 0x61, 0x72, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x55, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x43, 0x0a, 0x0f,
	0x59, 0x61, 0x72, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x75, 0x72, 0x4c, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x75, 0x72, 0x4c,
	0x76, 0x22, 0x61, 0x0a, 0x13, 0x53, 0x68, 0x75, 0x72, 0x61, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x04,
	0x6a, 0x6f, 0x69, 0x6e, 0x22, 0x52, 0x0a, 0x14, 0x53, 0x68, 0x75, 0x72, 0x61, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x2a, 0xb9, 0x07, 0x0a, 0x15, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x12, 0x19, 0x0a, 0x13, 0x53, 0x6b, 0x79, 0x57, 0x61, 0x72, 0x50, 0x62, 0x5f, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x53, 0x79, 0x6e, 0x63, 0x10, 0x9e, 0xdc, 0x0c, 0x12, 0x19, 0x0a,
	0x13, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x55, 0x45, 0x4c,
	0x5f, 0x4d, 0x53, 0x47, 0x10, 0xf5, 0xdc, 0x0c, 0x12, 0x1c, 0x0a, 0x16, 0x53, 0x5f, 0x55, 0x4e,
	0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x55, 0x45, 0x4c, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x56, 0x49,
	0x45, 0x57, 0x10, 0xf6, 0xdc, 0x0c, 0x12, 0x1c, 0x0a, 0x16, 0x53, 0x5f, 0x55, 0x4e, 0x49, 0x4f,
	0x4e, 0x5f, 0x44, 0x55, 0x45, 0x4c, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x10, 0xff, 0xdc, 0x0c, 0x12, 0x1c, 0x0a, 0x16, 0x54, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x59,
	0x4e, 0x43, 0x5f, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0xd0,
	0xe1, 0x0c, 0x12, 0x1c, 0x0a, 0x16, 0x54, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x50, 0x4c, 0x41, 0x59,
	0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0xd1, 0xe1, 0x0c,
	0x12, 0x1d, 0x0a, 0x17, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x5f, 0x53, 0x45, 0x41,
	0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0xc5, 0xe6, 0x0c, 0x12,
	0x21, 0x0a, 0x1b, 0x48, 0x6f, 0x6c, 0x79, 0x5f, 0x4c, 0x61, 0x6e, 0x64, 0x5f, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x53, 0x79, 0x6e, 0x63, 0x10, 0xa2,
	0xe5, 0x0c, 0x12, 0x20, 0x0a, 0x1a, 0x48, 0x6f, 0x6c, 0x79, 0x5f, 0x4c, 0x61, 0x6e, 0x64, 0x5f,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x53, 0x79, 0x6e, 0x63,
	0x10, 0xa7, 0xe5, 0x0c, 0x12, 0x1c, 0x0a, 0x16, 0x53, 0x5f, 0x53, 0x4f, 0x55, 0x4c, 0x5f, 0x4c,
	0x49, 0x51, 0x55, 0x49, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4d, 0x53, 0x47, 0x10, 0x89,
	0xe7, 0x0c, 0x12, 0x1f, 0x0a, 0x19, 0x41, 0x53, 0x4b, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x47, 0x45,
	0x54, 0x5f, 0x43, 0x48, 0x41, 0x4d, 0x50, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10,
	0xef, 0xc8, 0x0c, 0x12, 0x1e, 0x0a, 0x18, 0x41, 0x53, 0x4b, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x53,
	0x59, 0x4e, 0x43, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x10,
	0xf2, 0xc8, 0x0c, 0x12, 0x1d, 0x0a, 0x17, 0x53, 0x5f, 0x53, 0x4b, 0x59, 0x5f, 0x50, 0x52, 0x45,
	0x53, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0xf6,
	0xe7, 0x0c, 0x12, 0x23, 0x0a, 0x1d, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x5f, 0x44, 0x45, 0x4d,
	0x4f, 0x4e, 0x53, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x53,
	0x59, 0x4e, 0x43, 0x10, 0xa7, 0xf1, 0x0c, 0x12, 0x19, 0x0a, 0x13, 0x44, 0x4f, 0x55, 0x42, 0x4c,
	0x45, 0x5f, 0x44, 0x45, 0x4d, 0x4f, 0x4e, 0x53, 0x5f, 0x41, 0x47, 0x52, 0x45, 0x45, 0x10, 0xa8,
	0xf1, 0x0c, 0x12, 0x1a, 0x0a, 0x14, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x5f, 0x44, 0x45, 0x4d,
	0x4f, 0x4e, 0x53, 0x5f, 0x52, 0x45, 0x46, 0x55, 0x53, 0x45, 0x10, 0xa9, 0xf1, 0x0c, 0x12, 0x23,
	0x0a, 0x1d, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x5f, 0x44, 0x45, 0x4d, 0x4f, 0x4e, 0x53, 0x5f,
	0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x54, 0x10,
	0xaa, 0xf1, 0x0c, 0x12, 0x22, 0x0a, 0x1c, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x5f, 0x44, 0x45,
	0x4d, 0x4f, 0x4e, 0x53, 0x5f, 0x41, 0x50, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x56,
	0x49, 0x54, 0x45, 0x10, 0xa2, 0xf1, 0x0c, 0x12, 0x1a, 0x0a, 0x14, 0x54, 0x4f, 0x57, 0x4e, 0x44,
	0x45, 0x4d, 0x4f, 0x4e, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10,
	0x82, 0x82, 0x0d, 0x12, 0x19, 0x0a, 0x13, 0x54, 0x4f, 0x57, 0x4e, 0x44, 0x45, 0x4d, 0x4f, 0x4e,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x83, 0x82, 0x0d, 0x12, 0x13,
	0x0a, 0x0d, 0x53, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10,
	0xf2, 0x88, 0x0d, 0x12, 0x1a, 0x0a, 0x14, 0x53, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f,
	0x53, 0x59, 0x4e, 0x43, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x59, 0x10, 0xf4, 0x88, 0x0d, 0x12,
	0x21, 0x0a, 0x1b, 0x53, 0x5f, 0x55, 0x4e, 0x49, 0x56, 0x45, 0x52, 0x53, 0x45, 0x5f, 0x53, 0x59,
	0x4e, 0x43, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x9e,
	0x8a, 0x0d, 0x12, 0x22, 0x0a, 0x1c, 0x46, 0x61, 0x69, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x50,
	0x62, 0x5f, 0x53, 0x79, 0x6e, 0x63, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x44, 0x61,
	0x74, 0x61, 0x10, 0xba, 0x89, 0x0d, 0x12, 0x22, 0x0a, 0x1c, 0x46, 0x61, 0x69, 0x72, 0x79, 0x4c,
	0x61, 0x6e, 0x64, 0x50, 0x62, 0x5f, 0x53, 0x79, 0x6e, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x10, 0xc3, 0x89, 0x0d, 0x12, 0x22, 0x0a, 0x1c, 0x53, 0x5f,
	0x50, 0x41, 0x49, 0x4e, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x52, 0x59, 0x4c, 0x41, 0x4e, 0x44, 0x5f,
	0x42, 0x45, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x8e, 0x8d, 0x0d, 0x12, 0x22,
	0x0a, 0x1c, 0x53, 0x5f, 0x50, 0x41, 0x49, 0x4e, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x52, 0x59, 0x4c,
	0x41, 0x4e, 0x44, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x50, 0x4f, 0x4f, 0x4c, 0x10, 0xaa,
	0x8d, 0x0d, 0x12, 0x1f, 0x0a, 0x19, 0x53, 0x68, 0x75, 0x72, 0x61, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x10,
	0xe6, 0x96, 0x0d, 0x12, 0x15, 0x0a, 0x0f, 0x59, 0x41, 0x52, 0x44, 0x5f, 0x4c, 0x4f, 0x47, 0x49,
	0x4e, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0xa3, 0x96, 0x0d, 0x12, 0x18, 0x0a, 0x12, 0x59, 0x41,
	0x52, 0x44, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x55, 0x50, 0x5f, 0x53, 0x59, 0x4e, 0x43,
	0x10, 0xab, 0x96, 0x0d, 0x2a, 0x43, 0x0a, 0x0d, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x72, 0x69, 0x61,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x57, 0x6f, 0x6f, 0x64, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x61, 0x74,
	0x65, 0x72, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x69, 0x72, 0x65, 0x10, 0x04, 0x12, 0x09,
	0x0a, 0x05, 0x45, 0x61, 0x72, 0x74, 0x68, 0x10, 0x05, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71,
	0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61,
	0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70,
	0x62,
}

var (
	file_PackagesBase_proto_rawDescOnce sync.Once
	file_PackagesBase_proto_rawDescData = file_PackagesBase_proto_rawDesc
)

func file_PackagesBase_proto_rawDescGZIP() []byte {
	file_PackagesBase_proto_rawDescOnce.Do(func() {
		file_PackagesBase_proto_rawDescData = protoimpl.X.CompressGZIP(file_PackagesBase_proto_rawDescData)
	})
	return file_PackagesBase_proto_rawDescData
}

var file_PackagesBase_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_PackagesBase_proto_msgTypes = make([]protoimpl.MessageInfo, 98)
var file_PackagesBase_proto_goTypes = []any{
	(PackagesBaseProtocols)(0),               // 0: com.yq.msg.CityMsg.PackagesBaseProtocols
	(RuleTrialType)(0),                       // 1: com.yq.msg.CityMsg.RuleTrialType
	(*SkyWarDataLoginSync)(nil),              // 2: com.yq.msg.CityMsg.SkyWarDataLoginSync
	(*UnionDuelSyncMsgReq)(nil),              // 3: com.yq.msg.CityMsg.UnionDuelSyncMsgReq
	(*SyncUnionDuelMsg)(nil),                 // 4: com.yq.msg.CityMsg.SyncUnionDuelMsg
	(*UnionDuelBattleResultMsg)(nil),         // 5: com.yq.msg.CityMsg.UnionDuelBattleResultMsg
	(*UnionDuelSyncDataReq)(nil),             // 6: com.yq.msg.CityMsg.UnionDuelSyncDataReq
	(*UnionDuelSyncDataResp)(nil),            // 7: com.yq.msg.CityMsg.UnionDuelSyncDataResp
	(*UnionDuelOpenViewReq)(nil),             // 8: com.yq.msg.CityMsg.UnionDuelOpenViewReq
	(*UnionDuelOpenViewResp)(nil),            // 9: com.yq.msg.CityMsg.UnionDuelOpenViewResp
	(*UnionDuelFightInfo)(nil),               // 10: com.yq.msg.CityMsg.UnionDuelFightInfo
	(*UnionDuelBaseMsg)(nil),                 // 11: com.yq.msg.CityMsg.UnionDuelBaseMsg
	(*UnionDuelCloudMemberMsg)(nil),          // 12: com.yq.msg.CityMsg.UnionDuelCloudMemberMsg
	(*UnionDuelFightRecordMsg)(nil),          // 13: com.yq.msg.CityMsg.UnionDuelFightRecordMsg
	(*RuleTrialDataTemp)(nil),                // 14: com.yq.msg.CityMsg.RuleTrialDataTemp
	(*RuleTrialDataSync)(nil),                // 15: com.yq.msg.CityMsg.RuleTrialDataSync
	(*RuleTrialBossPowerData)(nil),           // 16: com.yq.msg.CityMsg.RuleTrialBossPowerData
	(*RuleTrialBossConfigSyncMsg)(nil),       // 17: com.yq.msg.CityMsg.RuleTrialBossConfigSyncMsg
	(*MountainSeaJoinTeamReq)(nil),           // 18: com.yq.msg.CityMsg.MountainSeaJoinTeamReq
	(*MountainSeaJoinTeamRsp)(nil),           // 19: com.yq.msg.CityMsg.MountainSeaJoinTeamRsp
	(*MountainSeaChallengeTimeReq)(nil),      // 20: com.yq.msg.CityMsg.MountainSeaChallengeTimeReq
	(*MountainSeaChallengeTimeRsp)(nil),      // 21: com.yq.msg.CityMsg.MountainSeaChallengeTimeRsp
	(*PlanesTrialJoinTeamReq)(nil),           // 22: com.yq.msg.CityMsg.PlanesTrialJoinTeamReq
	(*PlanesTrialJoinTeamRsp)(nil),           // 23: com.yq.msg.CityMsg.PlanesTrialJoinTeamRsp
	(*PlanesTrialChallengeTimeReq)(nil),      // 24: com.yq.msg.CityMsg.PlanesTrialChallengeTimeReq
	(*PlanesTrialChallengeTimeRsp)(nil),      // 25: com.yq.msg.CityMsg.PlanesTrialChallengeTimeRsp
	(*HolyLandBattleApplyDataSyncReq)(nil),   // 26: com.yq.msg.CityMsg.HolyLandBattleApplyDataSyncReq
	(*HolyLandBattleApplyDataSync)(nil),      // 27: com.yq.msg.CityMsg.HolyLandBattleApplyDataSync
	(*HolyLandBattleTimeStampsDataSync)(nil), // 28: com.yq.msg.CityMsg.HolyLandBattleTimeStampsDataSync
	(*PlayerSoulLiQuidDataMsg)(nil),          // 29: com.yq.msg.CityMsg.PlayerSoulLiQuidDataMsg
	(*AskDingConfigSyncMsg)(nil),             // 30: com.yq.msg.CityMsg.AskDingConfigSyncMsg
	(*AskDingPlaceConfigTemp)(nil),           // 31: com.yq.msg.CityMsg.AskDingPlaceConfigTemp
	(*AskDingTimeConfigMsg)(nil),             // 32: com.yq.msg.CityMsg.AskDingTimeConfigMsg
	(*AskDingGetChampionInfoReq)(nil),        // 33: com.yq.msg.CityMsg.AskDingGetChampionInfoReq
	(*AskDingGetChampionInfoResp)(nil),       // 34: com.yq.msg.CityMsg.AskDingGetChampionInfoResp
	(*AskDingChampionLeadersMsg)(nil),        // 35: com.yq.msg.CityMsg.AskDingChampionLeadersMsg
	(*AskDingSyncPlayerJoinMsg)(nil),         // 36: com.yq.msg.CityMsg.AskDingSyncPlayerJoinMsg
	(*SkyPresentDataSync)(nil),               // 37: com.yq.msg.CityMsg.SkyPresentDataSync
	(*SkyPresentPresentData)(nil),            // 38: com.yq.msg.CityMsg.SkyPresentPresentData
	(*AuspiciousBlessDataSyncResp)(nil),      // 39: com.yq.msg.CityMsg.AuspiciousBlessDataSyncResp
	(*RecallPlayerDataMsg)(nil),              // 40: com.yq.msg.CityMsg.RecallPlayerDataMsg
	(*RegressionActivePlayerData)(nil),       // 41: com.yq.msg.CityMsg.RegressionActivePlayerData
	(*RegressionSelectReward)(nil),           // 42: com.yq.msg.CityMsg.RegressionSelectReward
	(*RenewNewPlayerDataMsg)(nil),            // 43: com.yq.msg.CityMsg.RenewNewPlayerDataMsg
	(*RenewPlayerInfo)(nil),                  // 44: com.yq.msg.CityMsg.RenewPlayerInfo
	(*DoubleDemonsDataLoginSync)(nil),        // 45: com.yq.msg.CityMsg.DoubleDemonsDataLoginSync
	(*DoubleDemonsInviteData)(nil),           // 46: com.yq.msg.CityMsg.DoubleDemonsInviteData
	(*DoubleDemonsPresentData)(nil),          // 47: com.yq.msg.CityMsg.DoubleDemonsPresentData
	(*DoubleDemonsAgreeReq)(nil),             // 48: com.yq.msg.CityMsg.DoubleDemonsAgreeReq
	(*DoubleDemonsAgreeResp)(nil),            // 49: com.yq.msg.CityMsg.DoubleDemonsAgreeResp
	(*DoubleDemonsRefuseReq)(nil),            // 50: com.yq.msg.CityMsg.DoubleDemonsRefuseReq
	(*DoubleDemonsRefuseResp)(nil),           // 51: com.yq.msg.CityMsg.DoubleDemonsRefuseResp
	(*DoubleDemonsReceivePresentReq)(nil),    // 52: com.yq.msg.CityMsg.DoubleDemonsReceivePresentReq
	(*DoubleDemonsReceivePresentResp)(nil),   // 53: com.yq.msg.CityMsg.DoubleDemonsReceivePresentResp
	(*DoubleDemonsAppointInviteReq)(nil),     // 54: com.yq.msg.CityMsg.DoubleDemonsAppointInviteReq
	(*DoubleDemonsAppointInviteResp)(nil),    // 55: com.yq.msg.CityMsg.DoubleDemonsAppointInviteResp
	(*PupilSystemLoginSync)(nil),             // 56: com.yq.msg.CityMsg.PupilSystemLoginSync
	(*CurrentTrainTimeInfoMsg)(nil),          // 57: com.yq.msg.CityMsg.CurrentTrainTimeInfoMsg
	(*MarriageRecordTempSync)(nil),           // 58: com.yq.msg.CityMsg.MarriageRecordTempSync
	(*MarriageGetAppointApplyTimeSync)(nil),  // 59: com.yq.msg.CityMsg.MarriageGetAppointApplyTimeSync
	(*TownDemonApplyDataSyncReq)(nil),        // 60: com.yq.msg.CityMsg.TownDemonApplyDataSyncReq
	(*TownDemonApplyDataSync)(nil),           // 61: com.yq.msg.CityMsg.TownDemonApplyDataSync
	(*TownDemonTimeStampsDataSync)(nil),      // 62: com.yq.msg.CityMsg.TownDemonTimeStampsDataSync
	(*PeachBanquetLoginSync)(nil),            // 63: com.yq.msg.CityMsg.PeachBanquetLoginSync
	(*PeachBanquetBaseInfo)(nil),             // 64: com.yq.msg.CityMsg.PeachBanquetBaseInfo
	(*PeachBanquetInfo)(nil),                 // 65: com.yq.msg.CityMsg.PeachBanquetInfo
	(*PeachBanquetOpenSync)(nil),             // 66: com.yq.msg.CityMsg.PeachBanquetOpenSync
	(*PeachBanquetItemInfo)(nil),             // 67: com.yq.msg.CityMsg.PeachBanquetItemInfo
	(*PeachBanquetItemSync)(nil),             // 68: com.yq.msg.CityMsg.PeachBanquetItemSync
	(*UsePeachBanquetItemReq)(nil),           // 69: com.yq.msg.CityMsg.UsePeachBanquetItemReq
	(*UsePeachBanquetItemResp)(nil),          // 70: com.yq.msg.CityMsg.UsePeachBanquetItemResp
	(*FriendInfo)(nil),                       // 71: com.yq.msg.CityMsg.FriendInfo
	(*SyncFriendList)(nil),                   // 72: com.yq.msg.CityMsg.SyncFriendList
	(*SyncFriendInfo)(nil),                   // 73: com.yq.msg.CityMsg.SyncFriendInfo
	(*UniverseDataMsg)(nil),                  // 74: com.yq.msg.CityMsg.UniverseDataMsg
	(*UniverseDrawTwiceMsg)(nil),             // 75: com.yq.msg.CityMsg.UniverseDrawTwiceMsg
	(*UniverseDrawMap)(nil),                  // 76: com.yq.msg.CityMsg.UniverseDrawMap
	(*UniverseDataMsgSync)(nil),              // 77: com.yq.msg.CityMsg.UniverseDataMsgSync
	(*UniverseSkillDataMsg)(nil),             // 78: com.yq.msg.CityMsg.UniverseSkillDataMsg
	(*UniverseSkillLCombineMsg)(nil),         // 79: com.yq.msg.CityMsg.universeSkillLCombineMsg
	(*UniverseLookMsg)(nil),                  // 80: com.yq.msg.CityMsg.UniverseLookMsg
	(*PlayerFairyLandDataMsg)(nil),           // 81: com.yq.msg.CityMsg.PlayerFairyLandDataMsg
	(*FairyLandServerSync)(nil),              // 82: com.yq.msg.CityMsg.FairyLandServerSync
	(*FairyLandHeartDevilInfo)(nil),          // 83: com.yq.msg.CityMsg.FairyLandHeartDevilInfo
	(*FairyLandBattleInfo)(nil),              // 84: com.yq.msg.CityMsg.FairyLandBattleInfo
	(*FairyLandSouthDoorHelpReq)(nil),        // 85: com.yq.msg.CityMsg.FairyLandSouthDoorHelpReq
	(*FairyLandSouthDoorHelpResp)(nil),       // 86: com.yq.msg.CityMsg.FairyLandSouthDoorHelpResp
	(*UnionBountyGetExistMonsterReq)(nil),    // 87: com.yq.msg.CityMsg.UnionBountyGetExistMonsterReq
	(*UnionBountyGetExistMonsterResp)(nil),   // 88: com.yq.msg.CityMsg.UnionBountyGetExistMonsterResp
	(*UnionBountyManageAskHelpReq)(nil),      // 89: com.yq.msg.CityMsg.UnionBountyManageAskHelpReq
	(*UnionBountyManageAskHelpResp)(nil),     // 90: com.yq.msg.CityMsg.UnionBountyManageAskHelpResp
	(*UnionBountySynMonsterInfoMsg)(nil),     // 91: com.yq.msg.CityMsg.UnionBountySynMonsterInfoMsg
	(*BeingSnatchedSync)(nil),                // 92: com.yq.msg.CityMsg.BeingSnatchedSync
	(*CheckFairyPoolReq)(nil),                // 93: com.yq.msg.CityMsg.CheckFairyPoolReq
	(*CheckFairyPoolResp)(nil),               // 94: com.yq.msg.CityMsg.CheckFairyPoolResp
	(*YardLoginSync)(nil),                    // 95: com.yq.msg.CityMsg.YardLoginSync
	(*YardBuildUpSync)(nil),                  // 96: com.yq.msg.CityMsg.YardBuildUpSync
	(*YardBuildUpData)(nil),                  // 97: com.yq.msg.CityMsg.YardBuildUpData
	(*ShuraBattleApplyReq)(nil),              // 98: com.yq.msg.CityMsg.ShuraBattleApplyReq
	(*ShuraBattleApplyResp)(nil),             // 99: com.yq.msg.CityMsg.ShuraBattleApplyResp
	(*UnionBaseData)(nil),                    // 100: com.yq.msg.CityMsg.UnionBaseData
	(*PlayerBaseDataMsg)(nil),                // 101: com.yq.msg.CityMsg.PlayerBaseDataMsg
	(*PlayerCharacterImageMsg)(nil),          // 102: com.yq.msg.CityMsg.PlayerCharacterImageMsg
	(*WorldMessageTempMsg)(nil),              // 103: com.yq.msg.CityMsg.WorldMessageTempMsg
	(*EquipUniverseSkillMsg)(nil),            // 104: com.yq.msg.CityMsg.EquipUniverseSkillMsg
	(*PlayerHeadAndNameMsg)(nil),             // 105: com.yq.msg.CityMsg.PlayerHeadAndNameMsg
	(*PlayerAppearanceDataMsg)(nil),          // 106: com.yq.msg.CityMsg.PlayerAppearanceDataMsg
	(*BattleRecordMsg)(nil),                  // 107: com.yq.msg.CityMsg.BattleRecordMsg
}
var file_PackagesBase_proto_depIdxs = []int32{
	5,   // 0: com.yq.msg.CityMsg.SyncUnionDuelMsg.myUnion:type_name -> com.yq.msg.CityMsg.UnionDuelBattleResultMsg
	5,   // 1: com.yq.msg.CityMsg.SyncUnionDuelMsg.oppoUnion:type_name -> com.yq.msg.CityMsg.UnionDuelBattleResultMsg
	10,  // 2: com.yq.msg.CityMsg.UnionDuelOpenViewResp.fightInfo:type_name -> com.yq.msg.CityMsg.UnionDuelFightInfo
	11,  // 3: com.yq.msg.CityMsg.UnionDuelFightInfo.myUnion:type_name -> com.yq.msg.CityMsg.UnionDuelBaseMsg
	11,  // 4: com.yq.msg.CityMsg.UnionDuelFightInfo.oppoUnion:type_name -> com.yq.msg.CityMsg.UnionDuelBaseMsg
	13,  // 5: com.yq.msg.CityMsg.UnionDuelFightInfo.record:type_name -> com.yq.msg.CityMsg.UnionDuelFightRecordMsg
	12,  // 6: com.yq.msg.CityMsg.UnionDuelBaseMsg.cloudMember:type_name -> com.yq.msg.CityMsg.UnionDuelCloudMemberMsg
	1,   // 7: com.yq.msg.CityMsg.RuleTrialDataTemp.type:type_name -> com.yq.msg.CityMsg.RuleTrialType
	14,  // 8: com.yq.msg.CityMsg.RuleTrialDataSync.data:type_name -> com.yq.msg.CityMsg.RuleTrialDataTemp
	16,  // 9: com.yq.msg.CityMsg.RuleTrialBossConfigSyncMsg.data:type_name -> com.yq.msg.CityMsg.RuleTrialBossPowerData
	31,  // 10: com.yq.msg.CityMsg.AskDingConfigSyncMsg.placeConfig:type_name -> com.yq.msg.CityMsg.AskDingPlaceConfigTemp
	32,  // 11: com.yq.msg.CityMsg.AskDingConfigSyncMsg.timeConf:type_name -> com.yq.msg.CityMsg.AskDingTimeConfigMsg
	100, // 12: com.yq.msg.CityMsg.AskDingGetChampionInfoResp.championUnion:type_name -> com.yq.msg.CityMsg.UnionBaseData
	35,  // 13: com.yq.msg.CityMsg.AskDingGetChampionInfoResp.leaders:type_name -> com.yq.msg.CityMsg.AskDingChampionLeadersMsg
	38,  // 14: com.yq.msg.CityMsg.SkyPresentDataSync.dataList:type_name -> com.yq.msg.CityMsg.SkyPresentPresentData
	42,  // 15: com.yq.msg.CityMsg.RegressionActivePlayerData.regressionSelectReward:type_name -> com.yq.msg.CityMsg.RegressionSelectReward
	44,  // 16: com.yq.msg.CityMsg.RenewNewPlayerDataMsg.RenewPlayerInfo:type_name -> com.yq.msg.CityMsg.RenewPlayerInfo
	101, // 17: com.yq.msg.CityMsg.RenewPlayerInfo.playerBaseDataMsg:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	46,  // 18: com.yq.msg.CityMsg.DoubleDemonsDataLoginSync.inviteData:type_name -> com.yq.msg.CityMsg.DoubleDemonsInviteData
	47,  // 19: com.yq.msg.CityMsg.DoubleDemonsDataLoginSync.presentData:type_name -> com.yq.msg.CityMsg.DoubleDemonsPresentData
	101, // 20: com.yq.msg.CityMsg.DoubleDemonsInviteData.playerBaseData:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	102, // 21: com.yq.msg.CityMsg.DoubleDemonsPresentData.playerShowData:type_name -> com.yq.msg.CityMsg.PlayerCharacterImageMsg
	57,  // 22: com.yq.msg.CityMsg.PupilSystemLoginSync.trainInfo:type_name -> com.yq.msg.CityMsg.CurrentTrainTimeInfoMsg
	64,  // 23: com.yq.msg.CityMsg.PeachBanquetInfo.baseInfo:type_name -> com.yq.msg.CityMsg.PeachBanquetBaseInfo
	101, // 24: com.yq.msg.CityMsg.PeachBanquetInfo.ownerInfo:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	65,  // 25: com.yq.msg.CityMsg.PeachBanquetOpenSync.banquetList:type_name -> com.yq.msg.CityMsg.PeachBanquetInfo
	67,  // 26: com.yq.msg.CityMsg.PeachBanquetItemSync.itemList:type_name -> com.yq.msg.CityMsg.PeachBanquetItemInfo
	101, // 27: com.yq.msg.CityMsg.FriendInfo.playerBaseData:type_name -> com.yq.msg.CityMsg.PlayerBaseDataMsg
	103, // 28: com.yq.msg.CityMsg.FriendInfo.lastMessage:type_name -> com.yq.msg.CityMsg.WorldMessageTempMsg
	71,  // 29: com.yq.msg.CityMsg.SyncFriendList.friendList:type_name -> com.yq.msg.CityMsg.FriendInfo
	71,  // 30: com.yq.msg.CityMsg.SyncFriendInfo.friendInfo:type_name -> com.yq.msg.CityMsg.FriendInfo
	78,  // 31: com.yq.msg.CityMsg.UniverseDataMsg.universeSkillList:type_name -> com.yq.msg.CityMsg.UniverseSkillDataMsg
	79,  // 32: com.yq.msg.CityMsg.UniverseDataMsg.universeSkillLCombineList:type_name -> com.yq.msg.CityMsg.universeSkillLCombineMsg
	104, // 33: com.yq.msg.CityMsg.UniverseDataMsg.equipUniverseData:type_name -> com.yq.msg.CityMsg.EquipUniverseSkillMsg
	75,  // 34: com.yq.msg.CityMsg.UniverseDataMsg.drawTwiceData:type_name -> com.yq.msg.CityMsg.UniverseDrawTwiceMsg
	80,  // 35: com.yq.msg.CityMsg.UniverseDrawTwiceMsg.universeLookMsg:type_name -> com.yq.msg.CityMsg.UniverseLookMsg
	76,  // 36: com.yq.msg.CityMsg.UniverseDrawTwiceMsg.drawMap:type_name -> com.yq.msg.CityMsg.UniverseDrawMap
	74,  // 37: com.yq.msg.CityMsg.UniverseDataMsgSync.universeDataMsg:type_name -> com.yq.msg.CityMsg.UniverseDataMsg
	105, // 38: com.yq.msg.CityMsg.UniverseLookMsg.headInfo:type_name -> com.yq.msg.CityMsg.PlayerHeadAndNameMsg
	83,  // 39: com.yq.msg.CityMsg.PlayerFairyLandDataMsg.heartDevilInfo:type_name -> com.yq.msg.CityMsg.FairyLandHeartDevilInfo
	84,  // 40: com.yq.msg.CityMsg.PlayerFairyLandDataMsg.battleInfo:type_name -> com.yq.msg.CityMsg.FairyLandBattleInfo
	106, // 41: com.yq.msg.CityMsg.FairyLandBattleInfo.members:type_name -> com.yq.msg.CityMsg.PlayerAppearanceDataMsg
	107, // 42: com.yq.msg.CityMsg.UnionBountySynMonsterInfoMsg.allBattleRecord:type_name -> com.yq.msg.CityMsg.BattleRecordMsg
	97,  // 43: com.yq.msg.CityMsg.YardBuildUpSync.data:type_name -> com.yq.msg.CityMsg.YardBuildUpData
	44,  // [44:44] is the sub-list for method output_type
	44,  // [44:44] is the sub-list for method input_type
	44,  // [44:44] is the sub-list for extension type_name
	44,  // [44:44] is the sub-list for extension extendee
	0,   // [0:44] is the sub-list for field type_name
}

func init() { file_PackagesBase_proto_init() }
func file_PackagesBase_proto_init() {
	if File_PackagesBase_proto != nil {
		return
	}
	file_Battle_proto_init()
	file_Common_proto_init()
	file_WatchPlayer_proto_init()
	file_WorldMessage_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_PackagesBase_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SkyWarDataLoginSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UnionDuelSyncMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SyncUnionDuelMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UnionDuelBattleResultMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UnionDuelSyncDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UnionDuelSyncDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UnionDuelOpenViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UnionDuelOpenViewResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UnionDuelFightInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UnionDuelBaseMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UnionDuelCloudMemberMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UnionDuelFightRecordMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*RuleTrialDataTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*RuleTrialDataSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*RuleTrialBossPowerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*RuleTrialBossConfigSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*MountainSeaJoinTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*MountainSeaJoinTeamRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*MountainSeaChallengeTimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*MountainSeaChallengeTimeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*PlanesTrialJoinTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*PlanesTrialJoinTeamRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*PlanesTrialChallengeTimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*PlanesTrialChallengeTimeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*HolyLandBattleApplyDataSyncReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*HolyLandBattleApplyDataSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*HolyLandBattleTimeStampsDataSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerSoulLiQuidDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*AskDingConfigSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*AskDingPlaceConfigTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*AskDingTimeConfigMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*AskDingGetChampionInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*AskDingGetChampionInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*AskDingChampionLeadersMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*AskDingSyncPlayerJoinMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*SkyPresentDataSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*SkyPresentPresentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*AuspiciousBlessDataSyncResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*RecallPlayerDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*RegressionActivePlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*RegressionSelectReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*RenewNewPlayerDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*RenewPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*DoubleDemonsDataLoginSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*DoubleDemonsInviteData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*DoubleDemonsPresentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*DoubleDemonsAgreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*DoubleDemonsAgreeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*DoubleDemonsRefuseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*DoubleDemonsRefuseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*DoubleDemonsReceivePresentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*DoubleDemonsReceivePresentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*DoubleDemonsAppointInviteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*DoubleDemonsAppointInviteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*PupilSystemLoginSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*CurrentTrainTimeInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageRecordTempSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageGetAppointApplyTimeSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*TownDemonApplyDataSyncReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*TownDemonApplyDataSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*TownDemonTimeStampsDataSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*PeachBanquetLoginSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*PeachBanquetBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*PeachBanquetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*PeachBanquetOpenSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*PeachBanquetItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*PeachBanquetItemSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*UsePeachBanquetItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*UsePeachBanquetItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*FriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*SyncFriendList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*SyncFriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*UniverseDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*UniverseDrawTwiceMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*UniverseDrawMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*UniverseDataMsgSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*UniverseSkillDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*UniverseSkillLCombineMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*UniverseLookMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerFairyLandDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*FairyLandServerSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*FairyLandHeartDevilInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*FairyLandBattleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*FairyLandSouthDoorHelpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*FairyLandSouthDoorHelpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*UnionBountyGetExistMonsterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*UnionBountyGetExistMonsterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*UnionBountyManageAskHelpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*UnionBountyManageAskHelpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*UnionBountySynMonsterInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*BeingSnatchedSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*CheckFairyPoolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*CheckFairyPoolResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*YardLoginSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*YardBuildUpSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*YardBuildUpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*ShuraBattleApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PackagesBase_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*ShuraBattleApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_PackagesBase_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   98,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_PackagesBase_proto_goTypes,
		DependencyIndexes: file_PackagesBase_proto_depIdxs,
		EnumInfos:         file_PackagesBase_proto_enumTypes,
		MessageInfos:      file_PackagesBase_proto_msgTypes,
	}.Build()
	File_PackagesBase_proto = out.File
	file_PackagesBase_proto_rawDesc = nil
	file_PackagesBase_proto_goTypes = nil
	file_PackagesBase_proto_depIdxs = nil
}
