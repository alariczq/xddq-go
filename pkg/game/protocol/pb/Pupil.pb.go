// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: Pupil.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PupilPb int32

const (
	PupilPb_S_SYNC_PUPIL_NULL                    PupilPb = 0
	PupilPb_S_ENTER_PUPIL_SYSTEM                 PupilPb = 211801
	PupilPb_S_PUPIL_TRAIN                        PupilPb = 211802
	PupilPb_S_PUPIL_SITE_TRAIN_TIMES_RECOVER     PupilPb = 211803
	PupilPb_S_PUPIL_INVITATION                   PupilPb = 211805
	PupilPb_S_PUPIL_GRADUATE                     PupilPb = 211806
	PupilPb_S_PUPIL_GET_GRADUATED_LIST           PupilPb = 211807
	PupilPb_S_PUPIL_FIGHT_LIST                   PupilPb = 211808
	PupilPb_S_PUPIL_FIGHT_ON                     PupilPb = 211809
	PupilPb_S_PUPIL_SECT_INFO                    PupilPb = 211810
	PupilPb_S_PUPIL_SEARCH_PLAYER                PupilPb = 211811
	PupilPb_S_PUPIL_FIGHT_SYNC                   PupilPb = 211812
	PupilPb_S_PUPIL_LOGIN_SYNC                   PupilPb = 211813
	PupilPb_S_PUPIL_GET_AD_AWARD                 PupilPb = 211814
	PupilPb_S_PUPIL_LOCK                         PupilPb = 211815
	PupilPb_S_PUPIL_EXACT_SEARCH                 PupilPb = 211816
	PupilPb_S_MARRIAGE_USER_DATA_SYNC            PupilPb = 211850
	PupilPb_S_MARRIAGE_GET_APPOINT_APPLY_SYNC    PupilPb = 211851
	PupilPb_S_PUPIL_GRADUATED_UNMARRY_LIST_SYNC  PupilPb = 211852
	PupilPb_S_MARRIAGE_MARRIAGE_RECORD_TEMP_SYNC PupilPb = 211853
	PupilPb_S_MARRIAGE_REFUSE_NOTIFY             PupilPb = 211854
	PupilPb_S_PUPIL_GRADUATED_UNMARRY_LIST       PupilPb = 211855
	PupilPb_S_MARRIAGE_MARRIAGR_RECORD_LIST      PupilPb = 211856
	PupilPb_S_MARRIAGE_GET_SERVER_APPLY          PupilPb = 211857
	PupilPb_S_MARRIAGE_RECOMMEND_PLAYER          PupilPb = 211858
	PupilPb_S_MARRIAGE_GET_APPOINT_APPLY         PupilPb = 211859
	PupilPb_S_MARRIAGE_APPLY_DEAL                PupilPb = 211860
	PupilPb_S_MARRIAGE_APPLY_PUBLISH             PupilPb = 211861
	PupilPb_S_MARRIAGE_APPLY_CANCEL              PupilPb = 211862
	PupilPb_S_MARRIAGE_REFRESH_SERVER_APPLY      PupilPb = 211863
	PupilPb_S_MARRIAGE_SET_APPOINT_MARRIAGE      PupilPb = 211864
	PupilPb_S_MARRIAGE_MARRIAGE_DEAL_SYNC        PupilPb = 211865
)

// Enum value maps for PupilPb.
var (
	PupilPb_name = map[int32]string{
		0:      "S_SYNC_PUPIL_NULL",
		211801: "S_ENTER_PUPIL_SYSTEM",
		211802: "S_PUPIL_TRAIN",
		211803: "S_PUPIL_SITE_TRAIN_TIMES_RECOVER",
		211805: "S_PUPIL_INVITATION",
		211806: "S_PUPIL_GRADUATE",
		211807: "S_PUPIL_GET_GRADUATED_LIST",
		211808: "S_PUPIL_FIGHT_LIST",
		211809: "S_PUPIL_FIGHT_ON",
		211810: "S_PUPIL_SECT_INFO",
		211811: "S_PUPIL_SEARCH_PLAYER",
		211812: "S_PUPIL_FIGHT_SYNC",
		211813: "S_PUPIL_LOGIN_SYNC",
		211814: "S_PUPIL_GET_AD_AWARD",
		211815: "S_PUPIL_LOCK",
		211816: "S_PUPIL_EXACT_SEARCH",
		211850: "S_MARRIAGE_USER_DATA_SYNC",
		211851: "S_MARRIAGE_GET_APPOINT_APPLY_SYNC",
		211852: "S_PUPIL_GRADUATED_UNMARRY_LIST_SYNC",
		211853: "S_MARRIAGE_MARRIAGE_RECORD_TEMP_SYNC",
		211854: "S_MARRIAGE_REFUSE_NOTIFY",
		211855: "S_PUPIL_GRADUATED_UNMARRY_LIST",
		211856: "S_MARRIAGE_MARRIAGR_RECORD_LIST",
		211857: "S_MARRIAGE_GET_SERVER_APPLY",
		211858: "S_MARRIAGE_RECOMMEND_PLAYER",
		211859: "S_MARRIAGE_GET_APPOINT_APPLY",
		211860: "S_MARRIAGE_APPLY_DEAL",
		211861: "S_MARRIAGE_APPLY_PUBLISH",
		211862: "S_MARRIAGE_APPLY_CANCEL",
		211863: "S_MARRIAGE_REFRESH_SERVER_APPLY",
		211864: "S_MARRIAGE_SET_APPOINT_MARRIAGE",
		211865: "S_MARRIAGE_MARRIAGE_DEAL_SYNC",
	}
	PupilPb_value = map[string]int32{
		"S_SYNC_PUPIL_NULL":                    0,
		"S_ENTER_PUPIL_SYSTEM":                 211801,
		"S_PUPIL_TRAIN":                        211802,
		"S_PUPIL_SITE_TRAIN_TIMES_RECOVER":     211803,
		"S_PUPIL_INVITATION":                   211805,
		"S_PUPIL_GRADUATE":                     211806,
		"S_PUPIL_GET_GRADUATED_LIST":           211807,
		"S_PUPIL_FIGHT_LIST":                   211808,
		"S_PUPIL_FIGHT_ON":                     211809,
		"S_PUPIL_SECT_INFO":                    211810,
		"S_PUPIL_SEARCH_PLAYER":                211811,
		"S_PUPIL_FIGHT_SYNC":                   211812,
		"S_PUPIL_LOGIN_SYNC":                   211813,
		"S_PUPIL_GET_AD_AWARD":                 211814,
		"S_PUPIL_LOCK":                         211815,
		"S_PUPIL_EXACT_SEARCH":                 211816,
		"S_MARRIAGE_USER_DATA_SYNC":            211850,
		"S_MARRIAGE_GET_APPOINT_APPLY_SYNC":    211851,
		"S_PUPIL_GRADUATED_UNMARRY_LIST_SYNC":  211852,
		"S_MARRIAGE_MARRIAGE_RECORD_TEMP_SYNC": 211853,
		"S_MARRIAGE_REFUSE_NOTIFY":             211854,
		"S_PUPIL_GRADUATED_UNMARRY_LIST":       211855,
		"S_MARRIAGE_MARRIAGR_RECORD_LIST":      211856,
		"S_MARRIAGE_GET_SERVER_APPLY":          211857,
		"S_MARRIAGE_RECOMMEND_PLAYER":          211858,
		"S_MARRIAGE_GET_APPOINT_APPLY":         211859,
		"S_MARRIAGE_APPLY_DEAL":                211860,
		"S_MARRIAGE_APPLY_PUBLISH":             211861,
		"S_MARRIAGE_APPLY_CANCEL":              211862,
		"S_MARRIAGE_REFRESH_SERVER_APPLY":      211863,
		"S_MARRIAGE_SET_APPOINT_MARRIAGE":      211864,
		"S_MARRIAGE_MARRIAGE_DEAL_SYNC":        211865,
	}
)

func (x PupilPb) Enum() *PupilPb {
	p := new(PupilPb)
	*p = x
	return p
}

func (x PupilPb) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PupilPb) Descriptor() protoreflect.EnumDescriptor {
	return file_Pupil_proto_enumTypes[0].Descriptor()
}

func (PupilPb) Type() protoreflect.EnumType {
	return &file_Pupil_proto_enumTypes[0]
}

func (x PupilPb) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PupilPb) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PupilPb(num)
	return nil
}

// Deprecated: Use PupilPb.Descriptor instead.
func (PupilPb) EnumDescriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{0}
}

type PupilState int32

const (
	PupilState_Training                       PupilState = 0
	PupilState_Graduation_UnMarry             PupilState = 1
	PupilState_Graduation_Marry               PupilState = 2
	PupilState_Graduation_RequestMarry_Server PupilState = 3
	PupilState_Graduation_RequestMarry_Union  PupilState = 4
	PupilState_Graduation_RequestMarry_Player PupilState = 5
)

// Enum value maps for PupilState.
var (
	PupilState_name = map[int32]string{
		0: "Training",
		1: "Graduation_UnMarry",
		2: "Graduation_Marry",
		3: "Graduation_RequestMarry_Server",
		4: "Graduation_RequestMarry_Union",
		5: "Graduation_RequestMarry_Player",
	}
	PupilState_value = map[string]int32{
		"Training":                       0,
		"Graduation_UnMarry":             1,
		"Graduation_Marry":               2,
		"Graduation_RequestMarry_Server": 3,
		"Graduation_RequestMarry_Union":  4,
		"Graduation_RequestMarry_Player": 5,
	}
)

func (x PupilState) Enum() *PupilState {
	p := new(PupilState)
	*p = x
	return p
}

func (x PupilState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PupilState) Descriptor() protoreflect.EnumDescriptor {
	return file_Pupil_proto_enumTypes[1].Descriptor()
}

func (PupilState) Type() protoreflect.EnumType {
	return &file_Pupil_proto_enumTypes[1]
}

func (x PupilState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PupilState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PupilState(num)
	return nil
}

// Deprecated: Use PupilState.Descriptor instead.
func (PupilState) EnumDescriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{1}
}

type CoupleDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerName    *string             `protobuf:"bytes,1,req,name=playerName" json:"playerName,omitempty"`
	MarryTime     *int64              `protobuf:"varint,2,req,name=marryTime" json:"marryTime,omitempty"`
	Quality       *int32              `protobuf:"varint,3,req,name=quality" json:"quality,omitempty"`
	FateIdList    []int32             `protobuf:"varint,4,rep,name=fateIdList" json:"fateIdList,omitempty"`
	Job           *int32              `protobuf:"varint,5,req,name=job" json:"job,omitempty"`
	Name          *string             `protobuf:"bytes,6,req,name=name" json:"name,omitempty"`
	TeacherId     *int32              `protobuf:"varint,7,req,name=teacherId" json:"teacherId,omitempty"`
	Level         *int32              `protobuf:"varint,8,req,name=level" json:"level,omitempty"`
	BaseAttr      []*AttributeDataMsg `protobuf:"bytes,9,rep,name=baseAttr" json:"baseAttr,omitempty"`
	BattleAttr    *AttributeDataMsg   `protobuf:"bytes,10,opt,name=battleAttr" json:"battleAttr,omitempty"`
	EvaluateParam *int32              `protobuf:"varint,11,opt,name=evaluateParam" json:"evaluateParam,omitempty"`
	ServerId      *int64              `protobuf:"varint,12,opt,name=serverId" json:"serverId,omitempty"`
	PlayerId      *int64              `protobuf:"varint,13,opt,name=playerId" json:"playerId,omitempty"`
}

func (x *CoupleDataMsg) Reset() {
	*x = CoupleDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoupleDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoupleDataMsg) ProtoMessage() {}

func (x *CoupleDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoupleDataMsg.ProtoReflect.Descriptor instead.
func (*CoupleDataMsg) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{0}
}

func (x *CoupleDataMsg) GetPlayerName() string {
	if x != nil && x.PlayerName != nil {
		return *x.PlayerName
	}
	return ""
}

func (x *CoupleDataMsg) GetMarryTime() int64 {
	if x != nil && x.MarryTime != nil {
		return *x.MarryTime
	}
	return 0
}

func (x *CoupleDataMsg) GetQuality() int32 {
	if x != nil && x.Quality != nil {
		return *x.Quality
	}
	return 0
}

func (x *CoupleDataMsg) GetFateIdList() []int32 {
	if x != nil {
		return x.FateIdList
	}
	return nil
}

func (x *CoupleDataMsg) GetJob() int32 {
	if x != nil && x.Job != nil {
		return *x.Job
	}
	return 0
}

func (x *CoupleDataMsg) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CoupleDataMsg) GetTeacherId() int32 {
	if x != nil && x.TeacherId != nil {
		return *x.TeacherId
	}
	return 0
}

func (x *CoupleDataMsg) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *CoupleDataMsg) GetBaseAttr() []*AttributeDataMsg {
	if x != nil {
		return x.BaseAttr
	}
	return nil
}

func (x *CoupleDataMsg) GetBattleAttr() *AttributeDataMsg {
	if x != nil {
		return x.BattleAttr
	}
	return nil
}

func (x *CoupleDataMsg) GetEvaluateParam() int32 {
	if x != nil && x.EvaluateParam != nil {
		return *x.EvaluateParam
	}
	return 0
}

func (x *CoupleDataMsg) GetServerId() int64 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

func (x *CoupleDataMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

type PupilDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             *int32              `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	Quality         *int32              `protobuf:"varint,2,req,name=quality" json:"quality,omitempty"`
	FateIdList      []int32             `protobuf:"varint,3,rep,name=fateIdList" json:"fateIdList,omitempty"`
	Level           *int32              `protobuf:"varint,4,req,name=level" json:"level,omitempty"`
	Name            *string             `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	TeacherId       *int32              `protobuf:"varint,6,req,name=teacherId" json:"teacherId,omitempty"`
	Job             *int32              `protobuf:"varint,7,req,name=job" json:"job,omitempty"`
	State           *PupilState         `protobuf:"varint,8,req,name=state,enum=com.yq.msg.CityMsg.PupilState" json:"state,omitempty"`
	BaseAttr        []*AttributeDataMsg `protobuf:"bytes,9,rep,name=baseAttr" json:"baseAttr,omitempty"`
	BattleAttr      *AttributeDataMsg   `protobuf:"bytes,10,opt,name=battleAttr" json:"battleAttr,omitempty"`
	CoupleData      *CoupleDataMsg      `protobuf:"bytes,11,opt,name=coupleData" json:"coupleData,omitempty"`
	PupilFightValue *int64              `protobuf:"varint,12,opt,name=pupilFightValue" json:"pupilFightValue,omitempty"`
	EvaluateParam   *int32              `protobuf:"varint,13,opt,name=evaluateParam" json:"evaluateParam,omitempty"`
	IsLock          *int32              `protobuf:"varint,14,opt,name=isLock" json:"isLock,omitempty"`
}

func (x *PupilDataMsg) Reset() {
	*x = PupilDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilDataMsg) ProtoMessage() {}

func (x *PupilDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilDataMsg.ProtoReflect.Descriptor instead.
func (*PupilDataMsg) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{1}
}

func (x *PupilDataMsg) GetUid() int32 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

func (x *PupilDataMsg) GetQuality() int32 {
	if x != nil && x.Quality != nil {
		return *x.Quality
	}
	return 0
}

func (x *PupilDataMsg) GetFateIdList() []int32 {
	if x != nil {
		return x.FateIdList
	}
	return nil
}

func (x *PupilDataMsg) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *PupilDataMsg) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PupilDataMsg) GetTeacherId() int32 {
	if x != nil && x.TeacherId != nil {
		return *x.TeacherId
	}
	return 0
}

func (x *PupilDataMsg) GetJob() int32 {
	if x != nil && x.Job != nil {
		return *x.Job
	}
	return 0
}

func (x *PupilDataMsg) GetState() PupilState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return PupilState_Training
}

func (x *PupilDataMsg) GetBaseAttr() []*AttributeDataMsg {
	if x != nil {
		return x.BaseAttr
	}
	return nil
}

func (x *PupilDataMsg) GetBattleAttr() *AttributeDataMsg {
	if x != nil {
		return x.BattleAttr
	}
	return nil
}

func (x *PupilDataMsg) GetCoupleData() *CoupleDataMsg {
	if x != nil {
		return x.CoupleData
	}
	return nil
}

func (x *PupilDataMsg) GetPupilFightValue() int64 {
	if x != nil && x.PupilFightValue != nil {
		return *x.PupilFightValue
	}
	return 0
}

func (x *PupilDataMsg) GetEvaluateParam() int32 {
	if x != nil && x.EvaluateParam != nil {
		return *x.EvaluateParam
	}
	return 0
}

func (x *PupilDataMsg) GetIsLock() int32 {
	if x != nil && x.IsLock != nil {
		return *x.IsLock
	}
	return 0
}

type PupilSiteDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index         *int32                   `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	PupilData     *PupilDataMsg            `protobuf:"bytes,2,opt,name=pupilData" json:"pupilData,omitempty"`
	TrainTimeInfo *CurrentTrainTimeInfoMsg `protobuf:"bytes,3,opt,name=trainTimeInfo" json:"trainTimeInfo,omitempty"`
}

func (x *PupilSiteDataMsg) Reset() {
	*x = PupilSiteDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilSiteDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilSiteDataMsg) ProtoMessage() {}

func (x *PupilSiteDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilSiteDataMsg.ProtoReflect.Descriptor instead.
func (*PupilSiteDataMsg) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{2}
}

func (x *PupilSiteDataMsg) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *PupilSiteDataMsg) GetPupilData() *PupilDataMsg {
	if x != nil {
		return x.PupilData
	}
	return nil
}

func (x *PupilSiteDataMsg) GetTrainTimeInfo() *CurrentTrainTimeInfoMsg {
	if x != nil {
		return x.TrainTimeInfo
	}
	return nil
}

type SectInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarriageCount       *int32              `protobuf:"varint,1,opt,name=marriageCount" json:"marriageCount,omitempty"`
	MarriageRewardCount *int32              `protobuf:"varint,2,opt,name=marriageRewardCount" json:"marriageRewardCount,omitempty"`
	TrainAttrValue      []*AttributeDataMsg `protobuf:"bytes,3,rep,name=trainAttrValue" json:"trainAttrValue,omitempty"`
	FightAttrValue      []*AttributeDataMsg `protobuf:"bytes,4,rep,name=fightAttrValue" json:"fightAttrValue,omitempty"`
	FightFateAttrValue  []*AttributeDataMsg `protobuf:"bytes,5,rep,name=fightFateAttrValue" json:"fightFateAttrValue,omitempty"`
}

func (x *SectInfoMsg) Reset() {
	*x = SectInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectInfoMsg) ProtoMessage() {}

func (x *SectInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectInfoMsg.ProtoReflect.Descriptor instead.
func (*SectInfoMsg) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{3}
}

func (x *SectInfoMsg) GetMarriageCount() int32 {
	if x != nil && x.MarriageCount != nil {
		return *x.MarriageCount
	}
	return 0
}

func (x *SectInfoMsg) GetMarriageRewardCount() int32 {
	if x != nil && x.MarriageRewardCount != nil {
		return *x.MarriageRewardCount
	}
	return 0
}

func (x *SectInfoMsg) GetTrainAttrValue() []*AttributeDataMsg {
	if x != nil {
		return x.TrainAttrValue
	}
	return nil
}

func (x *SectInfoMsg) GetFightAttrValue() []*AttributeDataMsg {
	if x != nil {
		return x.FightAttrValue
	}
	return nil
}

func (x *SectInfoMsg) GetFightFateAttrValue() []*AttributeDataMsg {
	if x != nil {
		return x.FightFateAttrValue
	}
	return nil
}

type PupilRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   *int64        `protobuf:"varint,1,opt,name=playerId" json:"playerId,omitempty"`
	OwnerName  *string       `protobuf:"bytes,2,opt,name=ownerName" json:"ownerName,omitempty"`
	FightValue *int64        `protobuf:"varint,3,opt,name=fightValue" json:"fightValue,omitempty"`
	PupilData  *PupilDataMsg `protobuf:"bytes,4,opt,name=pupilData" json:"pupilData,omitempty"`
}

func (x *PupilRank) Reset() {
	*x = PupilRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilRank) ProtoMessage() {}

func (x *PupilRank) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilRank.ProtoReflect.Descriptor instead.
func (*PupilRank) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{4}
}

func (x *PupilRank) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *PupilRank) GetOwnerName() string {
	if x != nil && x.OwnerName != nil {
		return *x.OwnerName
	}
	return ""
}

func (x *PupilRank) GetFightValue() int64 {
	if x != nil && x.FightValue != nil {
		return *x.FightValue
	}
	return 0
}

func (x *PupilRank) GetPupilData() *PupilDataMsg {
	if x != nil {
		return x.PupilData
	}
	return nil
}

type FightPupilDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index     *int32        `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	PupilData *PupilDataMsg `protobuf:"bytes,2,opt,name=pupilData" json:"pupilData,omitempty"`
}

func (x *FightPupilDataMsg) Reset() {
	*x = FightPupilDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FightPupilDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FightPupilDataMsg) ProtoMessage() {}

func (x *FightPupilDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FightPupilDataMsg.ProtoReflect.Descriptor instead.
func (*FightPupilDataMsg) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{5}
}

func (x *FightPupilDataMsg) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *FightPupilDataMsg) GetPupilData() *PupilDataMsg {
	if x != nil {
		return x.PupilData
	}
	return nil
}

type PupilRankList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PupilRank []*PupilRank `protobuf:"bytes,2,rep,name=pupilRank" json:"pupilRank,omitempty"`
}

func (x *PupilRankList) Reset() {
	*x = PupilRankList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilRankList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilRankList) ProtoMessage() {}

func (x *PupilRankList) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilRankList.ProtoReflect.Descriptor instead.
func (*PupilRankList) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{6}
}

func (x *PupilRankList) GetPupilRank() []*PupilRank {
	if x != nil {
		return x.PupilRank
	}
	return nil
}

type PupilTrainTimesRecover struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index    *int32 `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	UseCount *int32 `protobuf:"varint,2,req,name=useCount" json:"useCount,omitempty"`
}

func (x *PupilTrainTimesRecover) Reset() {
	*x = PupilTrainTimesRecover{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilTrainTimesRecover) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilTrainTimesRecover) ProtoMessage() {}

func (x *PupilTrainTimesRecover) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilTrainTimesRecover.ProtoReflect.Descriptor instead.
func (*PupilTrainTimesRecover) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{7}
}

func (x *PupilTrainTimesRecover) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *PupilTrainTimesRecover) GetUseCount() int32 {
	if x != nil && x.UseCount != nil {
		return *x.UseCount
	}
	return 0
}

type EnterPupilSystemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnterPupilSystemReq) Reset() {
	*x = EnterPupilSystemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterPupilSystemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterPupilSystemReq) ProtoMessage() {}

func (x *EnterPupilSystemReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterPupilSystemReq.ProtoReflect.Descriptor instead.
func (*EnterPupilSystemReq) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{8}
}

type EnterPupilSystemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret              *int32              `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	SiteList         []*PupilSiteDataMsg `protobuf:"bytes,2,rep,name=siteList" json:"siteList,omitempty"`
	AllGraduatedNums *int32              `protobuf:"varint,3,opt,name=allGraduatedNums" json:"allGraduatedNums,omitempty"`
	GetTimes         *int32              `protobuf:"varint,4,opt,name=getTimes" json:"getTimes,omitempty"`
	ServerIdList     []int64             `protobuf:"varint,5,rep,name=serverIdList" json:"serverIdList,omitempty"`
}

func (x *EnterPupilSystemResp) Reset() {
	*x = EnterPupilSystemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterPupilSystemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterPupilSystemResp) ProtoMessage() {}

func (x *EnterPupilSystemResp) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterPupilSystemResp.ProtoReflect.Descriptor instead.
func (*EnterPupilSystemResp) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{9}
}

func (x *EnterPupilSystemResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *EnterPupilSystemResp) GetSiteList() []*PupilSiteDataMsg {
	if x != nil {
		return x.SiteList
	}
	return nil
}

func (x *EnterPupilSystemResp) GetAllGraduatedNums() int32 {
	if x != nil && x.AllGraduatedNums != nil {
		return *x.AllGraduatedNums
	}
	return 0
}

func (x *EnterPupilSystemResp) GetGetTimes() int32 {
	if x != nil && x.GetTimes != nil {
		return *x.GetTimes
	}
	return 0
}

func (x *EnterPupilSystemResp) GetServerIdList() []int64 {
	if x != nil {
		return x.ServerIdList
	}
	return nil
}

type PupilTrainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOneKey *int32 `protobuf:"varint,1,opt,name=isOneKey" json:"isOneKey,omitempty"`
}

func (x *PupilTrainReq) Reset() {
	*x = PupilTrainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilTrainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilTrainReq) ProtoMessage() {}

func (x *PupilTrainReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilTrainReq.ProtoReflect.Descriptor instead.
func (*PupilTrainReq) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{10}
}

func (x *PupilTrainReq) GetIsOneKey() int32 {
	if x != nil && x.IsOneKey != nil {
		return *x.IsOneKey
	}
	return 0
}

type PupilTrainResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32              `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	SiteList []*PupilSiteDataMsg `protobuf:"bytes,2,rep,name=siteList" json:"siteList,omitempty"`
}

func (x *PupilTrainResp) Reset() {
	*x = PupilTrainResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilTrainResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilTrainResp) ProtoMessage() {}

func (x *PupilTrainResp) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilTrainResp.ProtoReflect.Descriptor instead.
func (*PupilTrainResp) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{11}
}

func (x *PupilTrainResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PupilTrainResp) GetSiteList() []*PupilSiteDataMsg {
	if x != nil {
		return x.SiteList
	}
	return nil
}

type PupilSiteTrainTimesRecoverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainTimesRecoverList []*PupilTrainTimesRecover `protobuf:"bytes,1,rep,name=trainTimesRecoverList" json:"trainTimesRecoverList,omitempty"`
}

func (x *PupilSiteTrainTimesRecoverReq) Reset() {
	*x = PupilSiteTrainTimesRecoverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilSiteTrainTimesRecoverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilSiteTrainTimesRecoverReq) ProtoMessage() {}

func (x *PupilSiteTrainTimesRecoverReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilSiteTrainTimesRecoverReq.ProtoReflect.Descriptor instead.
func (*PupilSiteTrainTimesRecoverReq) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{12}
}

func (x *PupilSiteTrainTimesRecoverReq) GetTrainTimesRecoverList() []*PupilTrainTimesRecover {
	if x != nil {
		return x.TrainTimesRecoverList
	}
	return nil
}

type PupilSiteTrainTimesRecoverResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32              `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	SiteList []*PupilSiteDataMsg `protobuf:"bytes,2,rep,name=siteList" json:"siteList,omitempty"`
}

func (x *PupilSiteTrainTimesRecoverResp) Reset() {
	*x = PupilSiteTrainTimesRecoverResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilSiteTrainTimesRecoverResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilSiteTrainTimesRecoverResp) ProtoMessage() {}

func (x *PupilSiteTrainTimesRecoverResp) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilSiteTrainTimesRecoverResp.ProtoReflect.Descriptor instead.
func (*PupilSiteTrainTimesRecoverResp) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{13}
}

func (x *PupilSiteTrainTimesRecoverResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PupilSiteTrainTimesRecoverResp) GetSiteList() []*PupilSiteDataMsg {
	if x != nil {
		return x.SiteList
	}
	return nil
}

type PupilRecruitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PupilRecruitReq) Reset() {
	*x = PupilRecruitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilRecruitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilRecruitReq) ProtoMessage() {}

func (x *PupilRecruitReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilRecruitReq.ProtoReflect.Descriptor instead.
func (*PupilRecruitReq) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{14}
}

type PupilRecruitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32            `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	SiteData *PupilSiteDataMsg `protobuf:"bytes,2,opt,name=siteData" json:"siteData,omitempty"`
}

func (x *PupilRecruitResp) Reset() {
	*x = PupilRecruitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilRecruitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilRecruitResp) ProtoMessage() {}

func (x *PupilRecruitResp) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilRecruitResp.ProtoReflect.Descriptor instead.
func (*PupilRecruitResp) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{15}
}

func (x *PupilRecruitResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PupilRecruitResp) GetSiteData() *PupilSiteDataMsg {
	if x != nil {
		return x.SiteData
	}
	return nil
}

type PupilGraduateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteIndex *int32 `protobuf:"varint,1,req,name=siteIndex" json:"siteIndex,omitempty"`
}

func (x *PupilGraduateReq) Reset() {
	*x = PupilGraduateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilGraduateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilGraduateReq) ProtoMessage() {}

func (x *PupilGraduateReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilGraduateReq.ProtoReflect.Descriptor instead.
func (*PupilGraduateReq) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{16}
}

func (x *PupilGraduateReq) GetSiteIndex() int32 {
	if x != nil && x.SiteIndex != nil {
		return *x.SiteIndex
	}
	return 0
}

type PupilGraduateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret              *int32            `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	SiteData         *PupilSiteDataMsg `protobuf:"bytes,2,opt,name=siteData" json:"siteData,omitempty"`
	AllGraduatedNums *int32            `protobuf:"varint,3,opt,name=allGraduatedNums" json:"allGraduatedNums,omitempty"`
	PupilData        *PupilDataMsg     `protobuf:"bytes,4,opt,name=pupilData" json:"pupilData,omitempty"`
	SectLv           *int32            `protobuf:"varint,5,opt,name=sectLv" json:"sectLv,omitempty"`
}

func (x *PupilGraduateResp) Reset() {
	*x = PupilGraduateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilGraduateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilGraduateResp) ProtoMessage() {}

func (x *PupilGraduateResp) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilGraduateResp.ProtoReflect.Descriptor instead.
func (*PupilGraduateResp) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{17}
}

func (x *PupilGraduateResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PupilGraduateResp) GetSiteData() *PupilSiteDataMsg {
	if x != nil {
		return x.SiteData
	}
	return nil
}

func (x *PupilGraduateResp) GetAllGraduatedNums() int32 {
	if x != nil && x.AllGraduatedNums != nil {
		return *x.AllGraduatedNums
	}
	return 0
}

func (x *PupilGraduateResp) GetPupilData() *PupilDataMsg {
	if x != nil {
		return x.PupilData
	}
	return nil
}

func (x *PupilGraduateResp) GetSectLv() int32 {
	if x != nil && x.SectLv != nil {
		return *x.SectLv
	}
	return 0
}

type PupilGetGraduatedListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
}

func (x *PupilGetGraduatedListReq) Reset() {
	*x = PupilGetGraduatedListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilGetGraduatedListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilGetGraduatedListReq) ProtoMessage() {}

func (x *PupilGetGraduatedListReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilGetGraduatedListReq.ProtoReflect.Descriptor instead.
func (*PupilGetGraduatedListReq) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{18}
}

func (x *PupilGetGraduatedListReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type PupilGetGraduatedListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32          `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	PupilDataList []*PupilDataMsg `protobuf:"bytes,2,rep,name=pupilDataList" json:"pupilDataList,omitempty"`
}

func (x *PupilGetGraduatedListResp) Reset() {
	*x = PupilGetGraduatedListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilGetGraduatedListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilGetGraduatedListResp) ProtoMessage() {}

func (x *PupilGetGraduatedListResp) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilGetGraduatedListResp.ProtoReflect.Descriptor instead.
func (*PupilGetGraduatedListResp) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{19}
}

func (x *PupilGetGraduatedListResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PupilGetGraduatedListResp) GetPupilDataList() []*PupilDataMsg {
	if x != nil {
		return x.PupilDataList
	}
	return nil
}

type PupilGetFightListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PupilGetFightListReq) Reset() {
	*x = PupilGetFightListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilGetFightListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilGetFightListReq) ProtoMessage() {}

func (x *PupilGetFightListReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilGetFightListReq.ProtoReflect.Descriptor instead.
func (*PupilGetFightListReq) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{20}
}

type PupilGetFightListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret            *int32               `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	FightPupilData []*FightPupilDataMsg `protobuf:"bytes,2,rep,name=fightPupilData" json:"fightPupilData,omitempty"`
}

func (x *PupilGetFightListResp) Reset() {
	*x = PupilGetFightListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilGetFightListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilGetFightListResp) ProtoMessage() {}

func (x *PupilGetFightListResp) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilGetFightListResp.ProtoReflect.Descriptor instead.
func (*PupilGetFightListResp) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{21}
}

func (x *PupilGetFightListResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PupilGetFightListResp) GetFightPupilData() []*FightPupilDataMsg {
	if x != nil {
		return x.FightPupilData
	}
	return nil
}

type PupilFightOnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index       *int32 `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	PupilUid    *int32 `protobuf:"varint,2,req,name=pupilUid" json:"pupilUid,omitempty"`
	FightOnType *int32 `protobuf:"varint,3,req,name=fightOnType" json:"fightOnType,omitempty"`
}

func (x *PupilFightOnReq) Reset() {
	*x = PupilFightOnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilFightOnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilFightOnReq) ProtoMessage() {}

func (x *PupilFightOnReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilFightOnReq.ProtoReflect.Descriptor instead.
func (*PupilFightOnReq) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{22}
}

func (x *PupilFightOnReq) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *PupilFightOnReq) GetPupilUid() int32 {
	if x != nil && x.PupilUid != nil {
		return *x.PupilUid
	}
	return 0
}

func (x *PupilFightOnReq) GetFightOnType() int32 {
	if x != nil && x.FightOnType != nil {
		return *x.FightOnType
	}
	return 0
}

type PupilFightOnResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret            *int32               `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	FightPupilData []*FightPupilDataMsg `protobuf:"bytes,2,rep,name=fightPupilData" json:"fightPupilData,omitempty"`
}

func (x *PupilFightOnResp) Reset() {
	*x = PupilFightOnResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilFightOnResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilFightOnResp) ProtoMessage() {}

func (x *PupilFightOnResp) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilFightOnResp.ProtoReflect.Descriptor instead.
func (*PupilFightOnResp) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{23}
}

func (x *PupilFightOnResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PupilFightOnResp) GetFightPupilData() []*FightPupilDataMsg {
	if x != nil {
		return x.FightPupilData
	}
	return nil
}

type PupilGetSectInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PupilGetSectInfoReq) Reset() {
	*x = PupilGetSectInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilGetSectInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilGetSectInfoReq) ProtoMessage() {}

func (x *PupilGetSectInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilGetSectInfoReq.ProtoReflect.Descriptor instead.
func (*PupilGetSectInfoReq) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{24}
}

type PupilGetSectInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret         *int32       `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	SectInfoMsg *SectInfoMsg `protobuf:"bytes,2,opt,name=sectInfoMsg" json:"sectInfoMsg,omitempty"`
}

func (x *PupilGetSectInfoResp) Reset() {
	*x = PupilGetSectInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilGetSectInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilGetSectInfoResp) ProtoMessage() {}

func (x *PupilGetSectInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilGetSectInfoResp.ProtoReflect.Descriptor instead.
func (*PupilGetSectInfoResp) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{25}
}

func (x *PupilGetSectInfoResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PupilGetSectInfoResp) GetSectInfoMsg() *SectInfoMsg {
	if x != nil {
		return x.SectInfoMsg
	}
	return nil
}

type PupilGetAdRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUseADTime *bool `protobuf:"varint,1,opt,name=isUseADTime" json:"isUseADTime,omitempty"`
}

func (x *PupilGetAdRewardReq) Reset() {
	*x = PupilGetAdRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilGetAdRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilGetAdRewardReq) ProtoMessage() {}

func (x *PupilGetAdRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilGetAdRewardReq.ProtoReflect.Descriptor instead.
func (*PupilGetAdRewardReq) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{26}
}

func (x *PupilGetAdRewardReq) GetIsUseADTime() bool {
	if x != nil && x.IsUseADTime != nil {
		return *x.IsUseADTime
	}
	return false
}

type PupilGetAdRewardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	GetTimes *int32 `protobuf:"varint,2,opt,name=getTimes" json:"getTimes,omitempty"`
}

func (x *PupilGetAdRewardResp) Reset() {
	*x = PupilGetAdRewardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilGetAdRewardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilGetAdRewardResp) ProtoMessage() {}

func (x *PupilGetAdRewardResp) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilGetAdRewardResp.ProtoReflect.Descriptor instead.
func (*PupilGetAdRewardResp) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{27}
}

func (x *PupilGetAdRewardResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PupilGetAdRewardResp) GetGetTimes() int32 {
	if x != nil && x.GetTimes != nil {
		return *x.GetTimes
	}
	return 0
}

type PupilLockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PupilUid *int32 `protobuf:"varint,1,req,name=pupilUid" json:"pupilUid,omitempty"`
	LockType *int32 `protobuf:"varint,2,req,name=lockType" json:"lockType,omitempty"`
}

func (x *PupilLockReq) Reset() {
	*x = PupilLockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilLockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilLockReq) ProtoMessage() {}

func (x *PupilLockReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilLockReq.ProtoReflect.Descriptor instead.
func (*PupilLockReq) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{28}
}

func (x *PupilLockReq) GetPupilUid() int32 {
	if x != nil && x.PupilUid != nil {
		return *x.PupilUid
	}
	return 0
}

func (x *PupilLockReq) GetLockType() int32 {
	if x != nil && x.LockType != nil {
		return *x.LockType
	}
	return 0
}

type PupilLockResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *PupilLockResp) Reset() {
	*x = PupilLockResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilLockResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilLockResp) ProtoMessage() {}

func (x *PupilLockResp) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilLockResp.ProtoReflect.Descriptor instead.
func (*PupilLockResp) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{29}
}

func (x *PupilLockResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type PupilExactSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstType  *int32 `protobuf:"varint,1,opt,name=firstType" json:"firstType,omitempty"`
	SecondType *int32 `protobuf:"varint,2,opt,name=secondType" json:"secondType,omitempty"`
}

func (x *PupilExactSearchReq) Reset() {
	*x = PupilExactSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilExactSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilExactSearchReq) ProtoMessage() {}

func (x *PupilExactSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilExactSearchReq.ProtoReflect.Descriptor instead.
func (*PupilExactSearchReq) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{30}
}

func (x *PupilExactSearchReq) GetFirstType() int32 {
	if x != nil && x.FirstType != nil {
		return *x.FirstType
	}
	return 0
}

func (x *PupilExactSearchReq) GetSecondType() int32 {
	if x != nil && x.SecondType != nil {
		return *x.SecondType
	}
	return 0
}

type PupilExactSearchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           *int32          `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	PupilDataList []*PupilDataMsg `protobuf:"bytes,2,rep,name=pupilDataList" json:"pupilDataList,omitempty"`
}

func (x *PupilExactSearchResp) Reset() {
	*x = PupilExactSearchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Pupil_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilExactSearchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilExactSearchResp) ProtoMessage() {}

func (x *PupilExactSearchResp) ProtoReflect() protoreflect.Message {
	mi := &file_Pupil_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilExactSearchResp.ProtoReflect.Descriptor instead.
func (*PupilExactSearchResp) Descriptor() ([]byte, []int) {
	return file_Pupil_proto_rawDescGZIP(), []int{31}
}

func (x *PupilExactSearchResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PupilExactSearchResp) GetPupilDataList() []*PupilDataMsg {
	if x != nil {
		return x.PupilDataList
	}
	return nil
}

var File_Pupil_proto protoreflect.FileDescriptor

var file_Pupil_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x12, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x03, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x70, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x72, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x61, 0x74, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0a, 0x66, 0x61, 0x74, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6a, 0x6f, 0x62, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x40, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x41, 0x74, 0x74, 0x72, 0x12, 0x44, 0x0a, 0x0a, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x73, 0x67, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x12,
	0x24, 0x0a, 0x0d, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9d, 0x04,
	0x0a, 0x0c, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a,
	0x66, 0x61, 0x74, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x6a, 0x6f, 0x62, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x41, 0x74, 0x74, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x73, 0x67, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x41, 0x74, 0x74, 0x72, 0x12, 0x44, 0x0a, 0x0a,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x43, 0x6f, 0x75, 0x70,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x70, 0x75, 0x70, 0x69, 0x6c, 0x46, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x22, 0xbb, 0x01,
	0x0a, 0x10, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x53, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3e, 0x0a, 0x09, 0x70, 0x75, 0x70, 0x69,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x70,
	0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd7, 0x02, 0x0a, 0x0b,
	0x53, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x6d,
	0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13,
	0x6d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73,
	0x67, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x66, 0x69, 0x67, 0x68, 0x74, 0x41, 0x74, 0x74, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52,
	0x0e, 0x66, 0x69, 0x67, 0x68, 0x74, 0x41, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x54, 0x0a, 0x12, 0x66, 0x69, 0x67, 0x68, 0x74, 0x46, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73,
	0x67, 0x52, 0x12, 0x66, 0x69, 0x67, 0x68, 0x74, 0x46, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x09, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3e, 0x0a,
	0x09, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x73, 0x67, 0x52, 0x09, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0x69, 0x0a,
	0x11, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3e, 0x0a, 0x09, 0x70, 0x75, 0x70, 0x69,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x70,
	0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x0d, 0x50, 0x75, 0x70, 0x69,
	0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x70, 0x75, 0x70,
	0x69, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x09, 0x70, 0x75, 0x70,
	0x69, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x4a, 0x0a, 0x16, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x75, 0x70, 0x69, 0x6c,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x22, 0xd6, 0x01, 0x0a, 0x14, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x75, 0x70, 0x69,
	0x6c, 0x53, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x73, 0x69,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61,
	0x64, 0x75, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x75,
	0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x2b, 0x0a, 0x0d, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x22,
	0x64, 0x0a, 0x0e, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x75, 0x70, 0x69, 0x6c,
	0x53, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x73, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x1d, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x53,
	0x69, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x60, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x75, 0x70, 0x69,
	0x6c, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x52, 0x15, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x74, 0x0a, 0x1e, 0x50, 0x75, 0x70,
	0x69, 0x6c, 0x53, 0x69, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x40, 0x0a,
	0x08, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x53, 0x69, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x11, 0x0a, 0x0f, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x52, 0x65, 0x63, 0x72, 0x75, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x22, 0x66, 0x0a, 0x10, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x52, 0x65, 0x63, 0x72, 0x75,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e,
	0x50, 0x75, 0x70, 0x69, 0x6c, 0x53, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67,
	0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x10, 0x50, 0x75,
	0x70, 0x69, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xeb, 0x01, 0x0a,
	0x11, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x75, 0x70, 0x69,
	0x6c, 0x53, 0x69, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x73, 0x69,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61,
	0x64, 0x75, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x61, 0x6c, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x75,
	0x6d, 0x73, 0x12, 0x3e, 0x0a, 0x09, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x75, 0x70, 0x69, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x74, 0x4c, 0x76, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x63, 0x74, 0x4c, 0x76, 0x22, 0x2e, 0x0a, 0x18, 0x50, 0x75,
	0x70, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a, 0x19, 0x50, 0x75,
	0x70, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x46, 0x0a, 0x0d, 0x70, 0x75, 0x70,
	0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x73, 0x67, 0x52, 0x0d, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x16, 0x0a, 0x14, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x78, 0x0a, 0x15, 0x50, 0x75, 0x70,
	0x69, 0x6c, 0x47, 0x65, 0x74, 0x46, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x4d, 0x0a, 0x0e, 0x66, 0x69, 0x67, 0x68, 0x74, 0x50, 0x75, 0x70,
	0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x73, 0x67, 0x52, 0x0e, 0x66, 0x69, 0x67, 0x68, 0x74, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x0f, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x4f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x67, 0x68,
	0x74, 0x4f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x66,
	0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x73, 0x0a, 0x10, 0x50, 0x75,
	0x70, 0x69, 0x6c, 0x46, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x4d, 0x0a, 0x0e, 0x66, 0x69, 0x67, 0x68, 0x74, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79,
	0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52,
	0x0e, 0x66, 0x69, 0x67, 0x68, 0x74, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x15, 0x0a, 0x13, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x22, 0x6b, 0x0a, 0x14, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x41, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x4d, 0x73, 0x67, 0x22, 0x37, 0x0a, 0x13, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x41,
	0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73,
	0x55, 0x73, 0x65, 0x41, 0x44, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x55, 0x73, 0x65, 0x41, 0x44, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x14,
	0x50, 0x75, 0x70, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x41, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x22, 0x46, 0x0a, 0x0c, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x4c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0x21, 0x0a, 0x0d, 0x50, 0x75,
	0x70, 0x69, 0x6c, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x53, 0x0a,
	0x13, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x45, 0x78, 0x61, 0x63, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x70, 0x0a, 0x14, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x45, 0x78, 0x61, 0x63, 0x74,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x46, 0x0a, 0x0d,
	0x70, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x0d, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x2a, 0xfc, 0x07, 0x0a, 0x07, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x50, 0x62,
	0x12, 0x15, 0x0a, 0x11, 0x53, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x50, 0x55, 0x50, 0x49, 0x4c,
	0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x14, 0x53, 0x5f, 0x45, 0x4e, 0x54,
	0x45, 0x52, 0x5f, 0x50, 0x55, 0x50, 0x49, 0x4c, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10,
	0xd9, 0xf6, 0x0c, 0x12, 0x13, 0x0a, 0x0d, 0x53, 0x5f, 0x50, 0x55, 0x50, 0x49, 0x4c, 0x5f, 0x54,
	0x52, 0x41, 0x49, 0x4e, 0x10, 0xda, 0xf6, 0x0c, 0x12, 0x26, 0x0a, 0x20, 0x53, 0x5f, 0x50, 0x55,
	0x50, 0x49, 0x4c, 0x5f, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x5f, 0x54,
	0x49, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x10, 0xdb, 0xf6, 0x0c,
	0x12, 0x18, 0x0a, 0x12, 0x53, 0x5f, 0x50, 0x55, 0x50, 0x49, 0x4c, 0x5f, 0x49, 0x4e, 0x56, 0x49,
	0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xdd, 0xf6, 0x0c, 0x12, 0x16, 0x0a, 0x10, 0x53, 0x5f,
	0x50, 0x55, 0x50, 0x49, 0x4c, 0x5f, 0x47, 0x52, 0x41, 0x44, 0x55, 0x41, 0x54, 0x45, 0x10, 0xde,
	0xf6, 0x0c, 0x12, 0x20, 0x0a, 0x1a, 0x53, 0x5f, 0x50, 0x55, 0x50, 0x49, 0x4c, 0x5f, 0x47, 0x45,
	0x54, 0x5f, 0x47, 0x52, 0x41, 0x44, 0x55, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x4c, 0x49, 0x53, 0x54,
	0x10, 0xdf, 0xf6, 0x0c, 0x12, 0x18, 0x0a, 0x12, 0x53, 0x5f, 0x50, 0x55, 0x50, 0x49, 0x4c, 0x5f,
	0x46, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xe0, 0xf6, 0x0c, 0x12, 0x16,
	0x0a, 0x10, 0x53, 0x5f, 0x50, 0x55, 0x50, 0x49, 0x4c, 0x5f, 0x46, 0x49, 0x47, 0x48, 0x54, 0x5f,
	0x4f, 0x4e, 0x10, 0xe1, 0xf6, 0x0c, 0x12, 0x17, 0x0a, 0x11, 0x53, 0x5f, 0x50, 0x55, 0x50, 0x49,
	0x4c, 0x5f, 0x53, 0x45, 0x43, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0xe2, 0xf6, 0x0c, 0x12,
	0x1b, 0x0a, 0x15, 0x53, 0x5f, 0x50, 0x55, 0x50, 0x49, 0x4c, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43,
	0x48, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0xe3, 0xf6, 0x0c, 0x12, 0x18, 0x0a, 0x12,
	0x53, 0x5f, 0x50, 0x55, 0x50, 0x49, 0x4c, 0x5f, 0x46, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x53, 0x59,
	0x4e, 0x43, 0x10, 0xe4, 0xf6, 0x0c, 0x12, 0x18, 0x0a, 0x12, 0x53, 0x5f, 0x50, 0x55, 0x50, 0x49,
	0x4c, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0xe5, 0xf6, 0x0c,
	0x12, 0x1a, 0x0a, 0x14, 0x53, 0x5f, 0x50, 0x55, 0x50, 0x49, 0x4c, 0x5f, 0x47, 0x45, 0x54, 0x5f,
	0x41, 0x44, 0x5f, 0x41, 0x57, 0x41, 0x52, 0x44, 0x10, 0xe6, 0xf6, 0x0c, 0x12, 0x12, 0x0a, 0x0c,
	0x53, 0x5f, 0x50, 0x55, 0x50, 0x49, 0x4c, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xe7, 0xf6, 0x0c,
	0x12, 0x1a, 0x0a, 0x14, 0x53, 0x5f, 0x50, 0x55, 0x50, 0x49, 0x4c, 0x5f, 0x45, 0x58, 0x41, 0x43,
	0x54, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0xe8, 0xf6, 0x0c, 0x12, 0x1f, 0x0a, 0x19,
	0x53, 0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x8a, 0xf7, 0x0c, 0x12, 0x27, 0x0a,
	0x21, 0x53, 0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f,
	0x41, 0x50, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x53, 0x59,
	0x4e, 0x43, 0x10, 0x8b, 0xf7, 0x0c, 0x12, 0x29, 0x0a, 0x23, 0x53, 0x5f, 0x50, 0x55, 0x50, 0x49,
	0x4c, 0x5f, 0x47, 0x52, 0x41, 0x44, 0x55, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x55, 0x4e, 0x4d, 0x41,
	0x52, 0x52, 0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x8c, 0xf7,
	0x0c, 0x12, 0x2a, 0x0a, 0x24, 0x53, 0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x45, 0x5f,
	0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f,
	0x54, 0x45, 0x4d, 0x50, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x8d, 0xf7, 0x0c, 0x12, 0x1e, 0x0a,
	0x18, 0x53, 0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x55,
	0x53, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x8e, 0xf7, 0x0c, 0x12, 0x24, 0x0a,
	0x1e, 0x53, 0x5f, 0x50, 0x55, 0x50, 0x49, 0x4c, 0x5f, 0x47, 0x52, 0x41, 0x44, 0x55, 0x41, 0x54,
	0x45, 0x44, 0x5f, 0x55, 0x4e, 0x4d, 0x41, 0x52, 0x52, 0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10,
	0x8f, 0xf7, 0x0c, 0x12, 0x25, 0x0a, 0x1f, 0x53, 0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47,
	0x45, 0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x52, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52,
	0x44, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x90, 0xf7, 0x0c, 0x12, 0x21, 0x0a, 0x1b, 0x53, 0x5f,
	0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x45, 0x52, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x10, 0x91, 0xf7, 0x0c, 0x12, 0x21, 0x0a,
	0x1b, 0x53, 0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x4f,
	0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x92, 0xf7, 0x0c,
	0x12, 0x22, 0x0a, 0x1c, 0x53, 0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x45, 0x5f, 0x47,
	0x45, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59,
	0x10, 0x93, 0xf7, 0x0c, 0x12, 0x1b, 0x0a, 0x15, 0x53, 0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41,
	0x47, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x44, 0x45, 0x41, 0x4c, 0x10, 0x94, 0xf7,
	0x0c, 0x12, 0x1e, 0x0a, 0x18, 0x53, 0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x45, 0x5f,
	0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x95, 0xf7,
	0x0c, 0x12, 0x1d, 0x0a, 0x17, 0x53, 0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x45, 0x5f,
	0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x96, 0xf7, 0x0c,
	0x12, 0x25, 0x0a, 0x1f, 0x53, 0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x45, 0x5f, 0x52,
	0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x41, 0x50,
	0x50, 0x4c, 0x59, 0x10, 0x97, 0xf7, 0x0c, 0x12, 0x25, 0x0a, 0x1f, 0x53, 0x5f, 0x4d, 0x41, 0x52,
	0x52, 0x49, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x45, 0x10, 0x98, 0xf7, 0x0c, 0x12, 0x23,
	0x0a, 0x1d, 0x53, 0x5f, 0x4d, 0x41, 0x52, 0x52, 0x49, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x41, 0x52,
	0x52, 0x49, 0x41, 0x47, 0x45, 0x5f, 0x44, 0x45, 0x41, 0x4c, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10,
	0x99, 0xf7, 0x0c, 0x2a, 0xb3, 0x01, 0x0a, 0x0a, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x55,
	0x6e, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x72, 0x61, 0x64,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x10, 0x02, 0x12, 0x22,
	0x0a, 0x1e, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x5f, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x10, 0x04, 0x12, 0x22, 0x0a, 0x1e, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x72, 0x79,
	0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x05, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71,
	0x69, 0x2f, 0x78, 0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61,
	0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70,
	0x62,
}

var (
	file_Pupil_proto_rawDescOnce sync.Once
	file_Pupil_proto_rawDescData = file_Pupil_proto_rawDesc
)

func file_Pupil_proto_rawDescGZIP() []byte {
	file_Pupil_proto_rawDescOnce.Do(func() {
		file_Pupil_proto_rawDescData = protoimpl.X.CompressGZIP(file_Pupil_proto_rawDescData)
	})
	return file_Pupil_proto_rawDescData
}

var file_Pupil_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_Pupil_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_Pupil_proto_goTypes = []any{
	(PupilPb)(0),                           // 0: com.yq.msg.CityMsg.PupilPb
	(PupilState)(0),                        // 1: com.yq.msg.CityMsg.PupilState
	(*CoupleDataMsg)(nil),                  // 2: com.yq.msg.CityMsg.CoupleDataMsg
	(*PupilDataMsg)(nil),                   // 3: com.yq.msg.CityMsg.PupilDataMsg
	(*PupilSiteDataMsg)(nil),               // 4: com.yq.msg.CityMsg.PupilSiteDataMsg
	(*SectInfoMsg)(nil),                    // 5: com.yq.msg.CityMsg.SectInfoMsg
	(*PupilRank)(nil),                      // 6: com.yq.msg.CityMsg.PupilRank
	(*FightPupilDataMsg)(nil),              // 7: com.yq.msg.CityMsg.FightPupilDataMsg
	(*PupilRankList)(nil),                  // 8: com.yq.msg.CityMsg.PupilRankList
	(*PupilTrainTimesRecover)(nil),         // 9: com.yq.msg.CityMsg.PupilTrainTimesRecover
	(*EnterPupilSystemReq)(nil),            // 10: com.yq.msg.CityMsg.EnterPupilSystemReq
	(*EnterPupilSystemResp)(nil),           // 11: com.yq.msg.CityMsg.EnterPupilSystemResp
	(*PupilTrainReq)(nil),                  // 12: com.yq.msg.CityMsg.PupilTrainReq
	(*PupilTrainResp)(nil),                 // 13: com.yq.msg.CityMsg.PupilTrainResp
	(*PupilSiteTrainTimesRecoverReq)(nil),  // 14: com.yq.msg.CityMsg.PupilSiteTrainTimesRecoverReq
	(*PupilSiteTrainTimesRecoverResp)(nil), // 15: com.yq.msg.CityMsg.PupilSiteTrainTimesRecoverResp
	(*PupilRecruitReq)(nil),                // 16: com.yq.msg.CityMsg.PupilRecruitReq
	(*PupilRecruitResp)(nil),               // 17: com.yq.msg.CityMsg.PupilRecruitResp
	(*PupilGraduateReq)(nil),               // 18: com.yq.msg.CityMsg.PupilGraduateReq
	(*PupilGraduateResp)(nil),              // 19: com.yq.msg.CityMsg.PupilGraduateResp
	(*PupilGetGraduatedListReq)(nil),       // 20: com.yq.msg.CityMsg.PupilGetGraduatedListReq
	(*PupilGetGraduatedListResp)(nil),      // 21: com.yq.msg.CityMsg.PupilGetGraduatedListResp
	(*PupilGetFightListReq)(nil),           // 22: com.yq.msg.CityMsg.PupilGetFightListReq
	(*PupilGetFightListResp)(nil),          // 23: com.yq.msg.CityMsg.PupilGetFightListResp
	(*PupilFightOnReq)(nil),                // 24: com.yq.msg.CityMsg.PupilFightOnReq
	(*PupilFightOnResp)(nil),               // 25: com.yq.msg.CityMsg.PupilFightOnResp
	(*PupilGetSectInfoReq)(nil),            // 26: com.yq.msg.CityMsg.PupilGetSectInfoReq
	(*PupilGetSectInfoResp)(nil),           // 27: com.yq.msg.CityMsg.PupilGetSectInfoResp
	(*PupilGetAdRewardReq)(nil),            // 28: com.yq.msg.CityMsg.PupilGetAdRewardReq
	(*PupilGetAdRewardResp)(nil),           // 29: com.yq.msg.CityMsg.PupilGetAdRewardResp
	(*PupilLockReq)(nil),                   // 30: com.yq.msg.CityMsg.PupilLockReq
	(*PupilLockResp)(nil),                  // 31: com.yq.msg.CityMsg.PupilLockResp
	(*PupilExactSearchReq)(nil),            // 32: com.yq.msg.CityMsg.PupilExactSearchReq
	(*PupilExactSearchResp)(nil),           // 33: com.yq.msg.CityMsg.PupilExactSearchResp
	(*AttributeDataMsg)(nil),               // 34: com.yq.msg.CityMsg.AttributeDataMsg
	(*CurrentTrainTimeInfoMsg)(nil),        // 35: com.yq.msg.CityMsg.CurrentTrainTimeInfoMsg
}
var file_Pupil_proto_depIdxs = []int32{
	34, // 0: com.yq.msg.CityMsg.CoupleDataMsg.baseAttr:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	34, // 1: com.yq.msg.CityMsg.CoupleDataMsg.battleAttr:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	1,  // 2: com.yq.msg.CityMsg.PupilDataMsg.state:type_name -> com.yq.msg.CityMsg.PupilState
	34, // 3: com.yq.msg.CityMsg.PupilDataMsg.baseAttr:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	34, // 4: com.yq.msg.CityMsg.PupilDataMsg.battleAttr:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	2,  // 5: com.yq.msg.CityMsg.PupilDataMsg.coupleData:type_name -> com.yq.msg.CityMsg.CoupleDataMsg
	3,  // 6: com.yq.msg.CityMsg.PupilSiteDataMsg.pupilData:type_name -> com.yq.msg.CityMsg.PupilDataMsg
	35, // 7: com.yq.msg.CityMsg.PupilSiteDataMsg.trainTimeInfo:type_name -> com.yq.msg.CityMsg.CurrentTrainTimeInfoMsg
	34, // 8: com.yq.msg.CityMsg.SectInfoMsg.trainAttrValue:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	34, // 9: com.yq.msg.CityMsg.SectInfoMsg.fightAttrValue:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	34, // 10: com.yq.msg.CityMsg.SectInfoMsg.fightFateAttrValue:type_name -> com.yq.msg.CityMsg.AttributeDataMsg
	3,  // 11: com.yq.msg.CityMsg.PupilRank.pupilData:type_name -> com.yq.msg.CityMsg.PupilDataMsg
	3,  // 12: com.yq.msg.CityMsg.FightPupilDataMsg.pupilData:type_name -> com.yq.msg.CityMsg.PupilDataMsg
	6,  // 13: com.yq.msg.CityMsg.PupilRankList.pupilRank:type_name -> com.yq.msg.CityMsg.PupilRank
	4,  // 14: com.yq.msg.CityMsg.EnterPupilSystemResp.siteList:type_name -> com.yq.msg.CityMsg.PupilSiteDataMsg
	4,  // 15: com.yq.msg.CityMsg.PupilTrainResp.siteList:type_name -> com.yq.msg.CityMsg.PupilSiteDataMsg
	9,  // 16: com.yq.msg.CityMsg.PupilSiteTrainTimesRecoverReq.trainTimesRecoverList:type_name -> com.yq.msg.CityMsg.PupilTrainTimesRecover
	4,  // 17: com.yq.msg.CityMsg.PupilSiteTrainTimesRecoverResp.siteList:type_name -> com.yq.msg.CityMsg.PupilSiteDataMsg
	4,  // 18: com.yq.msg.CityMsg.PupilRecruitResp.siteData:type_name -> com.yq.msg.CityMsg.PupilSiteDataMsg
	4,  // 19: com.yq.msg.CityMsg.PupilGraduateResp.siteData:type_name -> com.yq.msg.CityMsg.PupilSiteDataMsg
	3,  // 20: com.yq.msg.CityMsg.PupilGraduateResp.pupilData:type_name -> com.yq.msg.CityMsg.PupilDataMsg
	3,  // 21: com.yq.msg.CityMsg.PupilGetGraduatedListResp.pupilDataList:type_name -> com.yq.msg.CityMsg.PupilDataMsg
	7,  // 22: com.yq.msg.CityMsg.PupilGetFightListResp.fightPupilData:type_name -> com.yq.msg.CityMsg.FightPupilDataMsg
	7,  // 23: com.yq.msg.CityMsg.PupilFightOnResp.fightPupilData:type_name -> com.yq.msg.CityMsg.FightPupilDataMsg
	5,  // 24: com.yq.msg.CityMsg.PupilGetSectInfoResp.sectInfoMsg:type_name -> com.yq.msg.CityMsg.SectInfoMsg
	3,  // 25: com.yq.msg.CityMsg.PupilExactSearchResp.pupilDataList:type_name -> com.yq.msg.CityMsg.PupilDataMsg
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_Pupil_proto_init() }
func file_Pupil_proto_init() {
	if File_Pupil_proto != nil {
		return
	}
	file_Common_proto_init()
	file_PackagesBase_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Pupil_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CoupleDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PupilDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PupilSiteDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SectInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PupilRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*FightPupilDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PupilRankList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PupilTrainTimesRecover); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*EnterPupilSystemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*EnterPupilSystemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PupilTrainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PupilTrainResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PupilSiteTrainTimesRecoverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*PupilSiteTrainTimesRecoverResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*PupilRecruitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*PupilRecruitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*PupilGraduateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*PupilGraduateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*PupilGetGraduatedListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*PupilGetGraduatedListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*PupilGetFightListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*PupilGetFightListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*PupilFightOnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*PupilFightOnResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*PupilGetSectInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*PupilGetSectInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*PupilGetAdRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*PupilGetAdRewardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*PupilLockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*PupilLockResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*PupilExactSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Pupil_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*PupilExactSearchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Pupil_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Pupil_proto_goTypes,
		DependencyIndexes: file_Pupil_proto_depIdxs,
		EnumInfos:         file_Pupil_proto_enumTypes,
		MessageInfos:      file_Pupil_proto_msgTypes,
	}.Build()
	File_Pupil_proto = out.File
	file_Pupil_proto_rawDesc = nil
	file_Pupil_proto_goTypes = nil
	file_Pupil_proto_depIdxs = nil
}
