// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: Marriage.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApplyType int32

const (
	ApplyType_UnApply     ApplyType = 0
	ApplyType_Server      ApplyType = 1
	ApplyType_Union       ApplyType = 2
	ApplyType_Appoint     ApplyType = 3
	ApplyType_CrossServer ApplyType = 4
)

// Enum value maps for ApplyType.
var (
	ApplyType_name = map[int32]string{
		0: "UnApply",
		1: "Server",
		2: "Union",
		3: "Appoint",
		4: "CrossServer",
	}
	ApplyType_value = map[string]int32{
		"UnApply":     0,
		"Server":      1,
		"Union":       2,
		"Appoint":     3,
		"CrossServer": 4,
	}
)

func (x ApplyType) Enum() *ApplyType {
	p := new(ApplyType)
	*p = x
	return p
}

func (x ApplyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplyType) Descriptor() protoreflect.EnumDescriptor {
	return file_Marriage_proto_enumTypes[0].Descriptor()
}

func (ApplyType) Type() protoreflect.EnumType {
	return &file_Marriage_proto_enumTypes[0]
}

func (x ApplyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ApplyType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ApplyType(num)
	return nil
}

// Deprecated: Use ApplyType.Descriptor instead.
func (ApplyType) EnumDescriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{0}
}

type MarriageApplyTempMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId         *int64        `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	PlayerNickName   *string       `protobuf:"bytes,2,req,name=playerNickName" json:"playerNickName,omitempty"`
	PupilInfo        *PupilDataMsg `protobuf:"bytes,3,req,name=pupilInfo" json:"pupilInfo,omitempty"`
	RequestMarryTime *int64        `protobuf:"varint,4,req,name=requestMarryTime" json:"requestMarryTime,omitempty"`
	AppointUserId    *int64        `protobuf:"varint,5,req,name=appointUserId" json:"appointUserId,omitempty"`
	Type             *ApplyType    `protobuf:"varint,6,req,name=type,enum=com.yq.msg.CityMsg.ApplyType" json:"type,omitempty"`
	ServerId         *int64        `protobuf:"varint,7,opt,name=serverId" json:"serverId,omitempty"`
	LevelLimit       *int32        `protobuf:"varint,8,opt,name=levelLimit" json:"levelLimit,omitempty"`
}

func (x *MarriageApplyTempMsg) Reset() {
	*x = MarriageApplyTempMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageApplyTempMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageApplyTempMsg) ProtoMessage() {}

func (x *MarriageApplyTempMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageApplyTempMsg.ProtoReflect.Descriptor instead.
func (*MarriageApplyTempMsg) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{0}
}

func (x *MarriageApplyTempMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *MarriageApplyTempMsg) GetPlayerNickName() string {
	if x != nil && x.PlayerNickName != nil {
		return *x.PlayerNickName
	}
	return ""
}

func (x *MarriageApplyTempMsg) GetPupilInfo() *PupilDataMsg {
	if x != nil {
		return x.PupilInfo
	}
	return nil
}

func (x *MarriageApplyTempMsg) GetRequestMarryTime() int64 {
	if x != nil && x.RequestMarryTime != nil {
		return *x.RequestMarryTime
	}
	return 0
}

func (x *MarriageApplyTempMsg) GetAppointUserId() int64 {
	if x != nil && x.AppointUserId != nil {
		return *x.AppointUserId
	}
	return 0
}

func (x *MarriageApplyTempMsg) GetType() ApplyType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ApplyType_UnApply
}

func (x *MarriageApplyTempMsg) GetServerId() int64 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

func (x *MarriageApplyTempMsg) GetLevelLimit() int32 {
	if x != nil && x.LevelLimit != nil {
		return *x.LevelLimit
	}
	return 0
}

type MarriageRecordTempMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId     *int64        `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	PupilInfo    *PupilDataMsg `protobuf:"bytes,2,req,name=pupilInfo" json:"pupilInfo,omitempty"`
	MarriageTime *int64        `protobuf:"varint,3,req,name=marriageTime" json:"marriageTime,omitempty"`
}

func (x *MarriageRecordTempMsg) Reset() {
	*x = MarriageRecordTempMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageRecordTempMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageRecordTempMsg) ProtoMessage() {}

func (x *MarriageRecordTempMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageRecordTempMsg.ProtoReflect.Descriptor instead.
func (*MarriageRecordTempMsg) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{1}
}

func (x *MarriageRecordTempMsg) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *MarriageRecordTempMsg) GetPupilInfo() *PupilDataMsg {
	if x != nil {
		return x.PupilInfo
	}
	return nil
}

func (x *MarriageRecordTempMsg) GetMarriageTime() int64 {
	if x != nil && x.MarriageTime != nil {
		return *x.MarriageTime
	}
	return 0
}

type MarriageUserDataMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAcceptAppoint                  *bool  `protobuf:"varint,1,req,name=isAcceptAppoint" json:"isAcceptAppoint,omitempty"`
	ServerApplyRefreshTimes          *int32 `protobuf:"varint,2,req,name=serverApplyRefreshTimes" json:"serverApplyRefreshTimes,omitempty"`
	CrossServerApplyRefreshTimes     *int32 `protobuf:"varint,3,opt,name=crossServerApplyRefreshTimes" json:"crossServerApplyRefreshTimes,omitempty"`
	ServerApplyItemRefreshTimes      *int32 `protobuf:"varint,4,req,name=serverApplyItemRefreshTimes" json:"serverApplyItemRefreshTimes,omitempty"`
	CrossServerApplyItemRefreshTimes *int32 `protobuf:"varint,5,opt,name=crossServerApplyItemRefreshTimes" json:"crossServerApplyItemRefreshTimes,omitempty"`
}

func (x *MarriageUserDataMsg) Reset() {
	*x = MarriageUserDataMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageUserDataMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageUserDataMsg) ProtoMessage() {}

func (x *MarriageUserDataMsg) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageUserDataMsg.ProtoReflect.Descriptor instead.
func (*MarriageUserDataMsg) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{2}
}

func (x *MarriageUserDataMsg) GetIsAcceptAppoint() bool {
	if x != nil && x.IsAcceptAppoint != nil {
		return *x.IsAcceptAppoint
	}
	return false
}

func (x *MarriageUserDataMsg) GetServerApplyRefreshTimes() int32 {
	if x != nil && x.ServerApplyRefreshTimes != nil {
		return *x.ServerApplyRefreshTimes
	}
	return 0
}

func (x *MarriageUserDataMsg) GetCrossServerApplyRefreshTimes() int32 {
	if x != nil && x.CrossServerApplyRefreshTimes != nil {
		return *x.CrossServerApplyRefreshTimes
	}
	return 0
}

func (x *MarriageUserDataMsg) GetServerApplyItemRefreshTimes() int32 {
	if x != nil && x.ServerApplyItemRefreshTimes != nil {
		return *x.ServerApplyItemRefreshTimes
	}
	return 0
}

func (x *MarriageUserDataMsg) GetCrossServerApplyItemRefreshTimes() int32 {
	if x != nil && x.CrossServerApplyItemRefreshTimes != nil {
		return *x.CrossServerApplyItemRefreshTimes
	}
	return 0
}

type MarriageUserDataMsgSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserMarriageInfo *MarriageUserDataMsg `protobuf:"bytes,1,req,name=userMarriageInfo" json:"userMarriageInfo,omitempty"`
}

func (x *MarriageUserDataMsgSync) Reset() {
	*x = MarriageUserDataMsgSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageUserDataMsgSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageUserDataMsgSync) ProtoMessage() {}

func (x *MarriageUserDataMsgSync) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageUserDataMsgSync.ProtoReflect.Descriptor instead.
func (*MarriageUserDataMsgSync) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{3}
}

func (x *MarriageUserDataMsgSync) GetUserMarriageInfo() *MarriageUserDataMsg {
	if x != nil {
		return x.UserMarriageInfo
	}
	return nil
}

type MarriageGetAppointApplySync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataList []*MarriageApplyTempMsg `protobuf:"bytes,1,rep,name=dataList" json:"dataList,omitempty"`
}

func (x *MarriageGetAppointApplySync) Reset() {
	*x = MarriageGetAppointApplySync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageGetAppointApplySync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageGetAppointApplySync) ProtoMessage() {}

func (x *MarriageGetAppointApplySync) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageGetAppointApplySync.ProtoReflect.Descriptor instead.
func (*MarriageGetAppointApplySync) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{4}
}

func (x *MarriageGetAppointApplySync) GetDataList() []*MarriageApplyTempMsg {
	if x != nil {
		return x.DataList
	}
	return nil
}

type PupilGraduatedUnMarryListSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataList []*MarriageApplyTempMsg `protobuf:"bytes,1,rep,name=dataList" json:"dataList,omitempty"`
}

func (x *PupilGraduatedUnMarryListSync) Reset() {
	*x = PupilGraduatedUnMarryListSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilGraduatedUnMarryListSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilGraduatedUnMarryListSync) ProtoMessage() {}

func (x *PupilGraduatedUnMarryListSync) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilGraduatedUnMarryListSync.ProtoReflect.Descriptor instead.
func (*PupilGraduatedUnMarryListSync) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{5}
}

func (x *PupilGraduatedUnMarryListSync) GetDataList() []*MarriageApplyTempMsg {
	if x != nil {
		return x.DataList
	}
	return nil
}

type MarriageRefuseNotifyMsgSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PupilUid   *int32  `protobuf:"varint,1,req,name=pupilUid" json:"pupilUid,omitempty"`
	PlayerName *string `protobuf:"bytes,2,req,name=playerName" json:"playerName,omitempty"`
}

func (x *MarriageRefuseNotifyMsgSync) Reset() {
	*x = MarriageRefuseNotifyMsgSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageRefuseNotifyMsgSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageRefuseNotifyMsgSync) ProtoMessage() {}

func (x *MarriageRefuseNotifyMsgSync) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageRefuseNotifyMsgSync.ProtoReflect.Descriptor instead.
func (*MarriageRefuseNotifyMsgSync) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{6}
}

func (x *MarriageRefuseNotifyMsgSync) GetPupilUid() int32 {
	if x != nil && x.PupilUid != nil {
		return *x.PupilUid
	}
	return 0
}

func (x *MarriageRefuseNotifyMsgSync) GetPlayerName() string {
	if x != nil && x.PlayerName != nil {
		return *x.PlayerName
	}
	return ""
}

type PupilGraduatedUnMarryListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PupilGraduatedUnMarryListReq) Reset() {
	*x = PupilGraduatedUnMarryListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilGraduatedUnMarryListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilGraduatedUnMarryListReq) ProtoMessage() {}

func (x *PupilGraduatedUnMarryListReq) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilGraduatedUnMarryListReq.ProtoReflect.Descriptor instead.
func (*PupilGraduatedUnMarryListReq) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{7}
}

type PupilGraduatedUnMarryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32                  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	DataList []*MarriageApplyTempMsg `protobuf:"bytes,2,rep,name=dataList" json:"dataList,omitempty"`
}

func (x *PupilGraduatedUnMarryListResp) Reset() {
	*x = PupilGraduatedUnMarryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PupilGraduatedUnMarryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PupilGraduatedUnMarryListResp) ProtoMessage() {}

func (x *PupilGraduatedUnMarryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PupilGraduatedUnMarryListResp.ProtoReflect.Descriptor instead.
func (*PupilGraduatedUnMarryListResp) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{8}
}

func (x *PupilGraduatedUnMarryListResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *PupilGraduatedUnMarryListResp) GetDataList() []*MarriageApplyTempMsg {
	if x != nil {
		return x.DataList
	}
	return nil
}

type MarriageRecordListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MarriageRecordListReq) Reset() {
	*x = MarriageRecordListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageRecordListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageRecordListReq) ProtoMessage() {}

func (x *MarriageRecordListReq) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageRecordListReq.ProtoReflect.Descriptor instead.
func (*MarriageRecordListReq) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{9}
}

type MarriageRecordListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32                   `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	DataList []*MarriageRecordTempMsg `protobuf:"bytes,2,rep,name=dataList" json:"dataList,omitempty"`
	TotalNum *int32                   `protobuf:"varint,3,opt,name=totalNum" json:"totalNum,omitempty"`
}

func (x *MarriageRecordListResp) Reset() {
	*x = MarriageRecordListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageRecordListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageRecordListResp) ProtoMessage() {}

func (x *MarriageRecordListResp) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageRecordListResp.ProtoReflect.Descriptor instead.
func (*MarriageRecordListResp) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{10}
}

func (x *MarriageRecordListResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *MarriageRecordListResp) GetDataList() []*MarriageRecordTempMsg {
	if x != nil {
		return x.DataList
	}
	return nil
}

func (x *MarriageRecordListResp) GetTotalNum() int32 {
	if x != nil && x.TotalNum != nil {
		return *x.TotalNum
	}
	return 0
}

type MarriageGetServerApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PupilSex  *int32 `protobuf:"varint,1,req,name=pupilSex" json:"pupilSex,omitempty"`
	ApplyType *int32 `protobuf:"varint,2,req,name=applyType" json:"applyType,omitempty"`
}

func (x *MarriageGetServerApplyReq) Reset() {
	*x = MarriageGetServerApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageGetServerApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageGetServerApplyReq) ProtoMessage() {}

func (x *MarriageGetServerApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageGetServerApplyReq.ProtoReflect.Descriptor instead.
func (*MarriageGetServerApplyReq) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{11}
}

func (x *MarriageGetServerApplyReq) GetPupilSex() int32 {
	if x != nil && x.PupilSex != nil {
		return *x.PupilSex
	}
	return 0
}

func (x *MarriageGetServerApplyReq) GetApplyType() int32 {
	if x != nil && x.ApplyType != nil {
		return *x.ApplyType
	}
	return 0
}

type MarriageGetServerApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       *int32                  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	ApplyType *int32                  `protobuf:"varint,2,opt,name=applyType" json:"applyType,omitempty"`
	DataList  []*MarriageApplyTempMsg `protobuf:"bytes,3,rep,name=dataList" json:"dataList,omitempty"`
}

func (x *MarriageGetServerApplyResp) Reset() {
	*x = MarriageGetServerApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageGetServerApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageGetServerApplyResp) ProtoMessage() {}

func (x *MarriageGetServerApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageGetServerApplyResp.ProtoReflect.Descriptor instead.
func (*MarriageGetServerApplyResp) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{12}
}

func (x *MarriageGetServerApplyResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *MarriageGetServerApplyResp) GetApplyType() int32 {
	if x != nil && x.ApplyType != nil {
		return *x.ApplyType
	}
	return 0
}

func (x *MarriageGetServerApplyResp) GetDataList() []*MarriageApplyTempMsg {
	if x != nil {
		return x.DataList
	}
	return nil
}

type MarriageRecommendPlayerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PupilUid *int32 `protobuf:"varint,1,req,name=pupilUid" json:"pupilUid,omitempty"`
}

func (x *MarriageRecommendPlayerReq) Reset() {
	*x = MarriageRecommendPlayerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageRecommendPlayerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageRecommendPlayerReq) ProtoMessage() {}

func (x *MarriageRecommendPlayerReq) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageRecommendPlayerReq.ProtoReflect.Descriptor instead.
func (*MarriageRecommendPlayerReq) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{13}
}

func (x *MarriageRecommendPlayerReq) GetPupilUid() int32 {
	if x != nil && x.PupilUid != nil {
		return *x.PupilUid
	}
	return 0
}

type MarriageRecommendPlayerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32             `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	DataList []*SearchPlayerMsg `protobuf:"bytes,2,rep,name=dataList" json:"dataList,omitempty"`
}

func (x *MarriageRecommendPlayerResp) Reset() {
	*x = MarriageRecommendPlayerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageRecommendPlayerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageRecommendPlayerResp) ProtoMessage() {}

func (x *MarriageRecommendPlayerResp) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageRecommendPlayerResp.ProtoReflect.Descriptor instead.
func (*MarriageRecommendPlayerResp) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{14}
}

func (x *MarriageRecommendPlayerResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *MarriageRecommendPlayerResp) GetDataList() []*SearchPlayerMsg {
	if x != nil {
		return x.DataList
	}
	return nil
}

type MarriageGetAppointApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MarriageGetAppointApplyReq) Reset() {
	*x = MarriageGetAppointApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageGetAppointApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageGetAppointApplyReq) ProtoMessage() {}

func (x *MarriageGetAppointApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageGetAppointApplyReq.ProtoReflect.Descriptor instead.
func (*MarriageGetAppointApplyReq) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{15}
}

type MarriageGetAppointApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32                  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	DataList []*MarriageApplyTempMsg `protobuf:"bytes,2,rep,name=dataList" json:"dataList,omitempty"`
}

func (x *MarriageGetAppointApplyResp) Reset() {
	*x = MarriageGetAppointApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageGetAppointApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageGetAppointApplyResp) ProtoMessage() {}

func (x *MarriageGetAppointApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageGetAppointApplyResp.ProtoReflect.Descriptor instead.
func (*MarriageGetAppointApplyResp) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{16}
}

func (x *MarriageGetAppointApplyResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *MarriageGetAppointApplyResp) GetDataList() []*MarriageApplyTempMsg {
	if x != nil {
		return x.DataList
	}
	return nil
}

type MarriageApplyDealReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	MyPupilUid      *int32 `protobuf:"varint,2,opt,name=myPupilUid" json:"myPupilUid,omitempty"`
	PartnerPlayerId *int64 `protobuf:"varint,3,opt,name=partnerPlayerId" json:"partnerPlayerId,omitempty"`
	PartnerPupilUid *int32 `protobuf:"varint,4,opt,name=partnerPupilUid" json:"partnerPupilUid,omitempty"`
	Agree           *bool  `protobuf:"varint,5,opt,name=agree" json:"agree,omitempty"`
}

func (x *MarriageApplyDealReq) Reset() {
	*x = MarriageApplyDealReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageApplyDealReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageApplyDealReq) ProtoMessage() {}

func (x *MarriageApplyDealReq) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageApplyDealReq.ProtoReflect.Descriptor instead.
func (*MarriageApplyDealReq) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{17}
}

func (x *MarriageApplyDealReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *MarriageApplyDealReq) GetMyPupilUid() int32 {
	if x != nil && x.MyPupilUid != nil {
		return *x.MyPupilUid
	}
	return 0
}

func (x *MarriageApplyDealReq) GetPartnerPlayerId() int64 {
	if x != nil && x.PartnerPlayerId != nil {
		return *x.PartnerPlayerId
	}
	return 0
}

func (x *MarriageApplyDealReq) GetPartnerPupilUid() int32 {
	if x != nil && x.PartnerPupilUid != nil {
		return *x.PartnerPupilUid
	}
	return 0
}

func (x *MarriageApplyDealReq) GetAgree() bool {
	if x != nil && x.Agree != nil {
		return *x.Agree
	}
	return false
}

type MarriageApplyDealResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          *int32                  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Type         *int32                  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Reward       *string                 `protobuf:"bytes,3,opt,name=reward" json:"reward,omitempty"`
	MarriageData *MarriageRecordTempMsg  `protobuf:"bytes,4,opt,name=marriageData" json:"marriageData,omitempty"`
	Applylist    []*MarriageApplyTempMsg `protobuf:"bytes,5,rep,name=applylist" json:"applylist,omitempty"`
}

func (x *MarriageApplyDealResp) Reset() {
	*x = MarriageApplyDealResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageApplyDealResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageApplyDealResp) ProtoMessage() {}

func (x *MarriageApplyDealResp) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageApplyDealResp.ProtoReflect.Descriptor instead.
func (*MarriageApplyDealResp) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{18}
}

func (x *MarriageApplyDealResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *MarriageApplyDealResp) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *MarriageApplyDealResp) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *MarriageApplyDealResp) GetMarriageData() *MarriageRecordTempMsg {
	if x != nil {
		return x.MarriageData
	}
	return nil
}

func (x *MarriageApplyDealResp) GetApplylist() []*MarriageApplyTempMsg {
	if x != nil {
		return x.Applylist
	}
	return nil
}

type MarriageApplyPublishReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PupilUid      *int32     `protobuf:"varint,1,opt,name=pupilUid" json:"pupilUid,omitempty"`
	ApplyType     *ApplyType `protobuf:"varint,2,opt,name=applyType,enum=com.yq.msg.CityMsg.ApplyType" json:"applyType,omitempty"`
	AppointUserId *int64     `protobuf:"varint,3,opt,name=appointUserId" json:"appointUserId,omitempty"`
	LevelLimit    *int32     `protobuf:"varint,4,opt,name=levelLimit" json:"levelLimit,omitempty"`
}

func (x *MarriageApplyPublishReq) Reset() {
	*x = MarriageApplyPublishReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageApplyPublishReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageApplyPublishReq) ProtoMessage() {}

func (x *MarriageApplyPublishReq) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageApplyPublishReq.ProtoReflect.Descriptor instead.
func (*MarriageApplyPublishReq) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{19}
}

func (x *MarriageApplyPublishReq) GetPupilUid() int32 {
	if x != nil && x.PupilUid != nil {
		return *x.PupilUid
	}
	return 0
}

func (x *MarriageApplyPublishReq) GetApplyType() ApplyType {
	if x != nil && x.ApplyType != nil {
		return *x.ApplyType
	}
	return ApplyType_UnApply
}

func (x *MarriageApplyPublishReq) GetAppointUserId() int64 {
	if x != nil && x.AppointUserId != nil {
		return *x.AppointUserId
	}
	return 0
}

func (x *MarriageApplyPublishReq) GetLevelLimit() int32 {
	if x != nil && x.LevelLimit != nil {
		return *x.LevelLimit
	}
	return 0
}

type MarriageApplyPublishResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *MarriageApplyPublishResp) Reset() {
	*x = MarriageApplyPublishResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageApplyPublishResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageApplyPublishResp) ProtoMessage() {}

func (x *MarriageApplyPublishResp) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageApplyPublishResp.ProtoReflect.Descriptor instead.
func (*MarriageApplyPublishResp) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{20}
}

func (x *MarriageApplyPublishResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

type MarriageApplyCancelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PupilUid *int32 `protobuf:"varint,1,req,name=pupilUid" json:"pupilUid,omitempty"`
}

func (x *MarriageApplyCancelReq) Reset() {
	*x = MarriageApplyCancelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageApplyCancelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageApplyCancelReq) ProtoMessage() {}

func (x *MarriageApplyCancelReq) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageApplyCancelReq.ProtoReflect.Descriptor instead.
func (*MarriageApplyCancelReq) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{21}
}

func (x *MarriageApplyCancelReq) GetPupilUid() int32 {
	if x != nil && x.PupilUid != nil {
		return *x.PupilUid
	}
	return 0
}

type MarriageApplyCancelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	PupilUid *int32 `protobuf:"varint,2,opt,name=pupilUid" json:"pupilUid,omitempty"`
}

func (x *MarriageApplyCancelResp) Reset() {
	*x = MarriageApplyCancelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageApplyCancelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageApplyCancelResp) ProtoMessage() {}

func (x *MarriageApplyCancelResp) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageApplyCancelResp.ProtoReflect.Descriptor instead.
func (*MarriageApplyCancelResp) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{22}
}

func (x *MarriageApplyCancelResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *MarriageApplyCancelResp) GetPupilUid() int32 {
	if x != nil && x.PupilUid != nil {
		return *x.PupilUid
	}
	return 0
}

type MarriageRefreshServerApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PupilSex *int32 `protobuf:"varint,1,req,name=pupilSex" json:"pupilSex,omitempty"`
	Type     *int32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
}

func (x *MarriageRefreshServerApplyReq) Reset() {
	*x = MarriageRefreshServerApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageRefreshServerApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageRefreshServerApplyReq) ProtoMessage() {}

func (x *MarriageRefreshServerApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageRefreshServerApplyReq.ProtoReflect.Descriptor instead.
func (*MarriageRefreshServerApplyReq) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{23}
}

func (x *MarriageRefreshServerApplyReq) GetPupilSex() int32 {
	if x != nil && x.PupilSex != nil {
		return *x.PupilSex
	}
	return 0
}

func (x *MarriageRefreshServerApplyReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type MarriageRefreshServerApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      *int32                  `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	DataList []*MarriageApplyTempMsg `protobuf:"bytes,2,rep,name=dataList" json:"dataList,omitempty"`
}

func (x *MarriageRefreshServerApplyResp) Reset() {
	*x = MarriageRefreshServerApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageRefreshServerApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageRefreshServerApplyResp) ProtoMessage() {}

func (x *MarriageRefreshServerApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageRefreshServerApplyResp.ProtoReflect.Descriptor instead.
func (*MarriageRefreshServerApplyResp) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{24}
}

func (x *MarriageRefreshServerApplyResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

func (x *MarriageRefreshServerApplyResp) GetDataList() []*MarriageApplyTempMsg {
	if x != nil {
		return x.DataList
	}
	return nil
}

type MarriageSetAppointReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAcceptAppoint *bool `protobuf:"varint,1,req,name=isAcceptAppoint" json:"isAcceptAppoint,omitempty"`
}

func (x *MarriageSetAppointReq) Reset() {
	*x = MarriageSetAppointReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageSetAppointReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageSetAppointReq) ProtoMessage() {}

func (x *MarriageSetAppointReq) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageSetAppointReq.ProtoReflect.Descriptor instead.
func (*MarriageSetAppointReq) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{25}
}

func (x *MarriageSetAppointReq) GetIsAcceptAppoint() bool {
	if x != nil && x.IsAcceptAppoint != nil {
		return *x.IsAcceptAppoint
	}
	return false
}

type MarriageSetAppointResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
}

func (x *MarriageSetAppointResp) Reset() {
	*x = MarriageSetAppointResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Marriage_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarriageSetAppointResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarriageSetAppointResp) ProtoMessage() {}

func (x *MarriageSetAppointResp) ProtoReflect() protoreflect.Message {
	mi := &file_Marriage_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarriageSetAppointResp.ProtoReflect.Descriptor instead.
func (*MarriageSetAppointResp) Descriptor() ([]byte, []int) {
	return file_Marriage_proto_rawDescGZIP(), []int{26}
}

func (x *MarriageSetAppointResp) GetRet() int32 {
	if x != nil && x.Ret != nil {
		return *x.Ret
	}
	return 0
}

var File_Marriage_proto protoreflect.FileDescriptor

var file_Marriage_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x1a, 0x0b, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdb, 0x02, 0x0a, 0x14, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3e, 0x0a, 0x09, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x72,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x15, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x09, 0x70, 0x75, 0x70, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x70,
	0x75, 0x70, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x72,
	0x69, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c,
	0x6d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xcb, 0x02, 0x0a,
	0x13, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x73, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0f, 0x69,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x38,
	0x0a, 0x17, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x17, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x1c, 0x63, 0x72, 0x6f, 0x73,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1c,
	0x63, 0x72, 0x6f, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x1b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x4a,
	0x0a, 0x20, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x20, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x6e, 0x0a, 0x17, 0x4d, 0x61,
	0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73,
	0x67, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x53, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x72,
	0x72, 0x69, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x73, 0x67, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x61,
	0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x63, 0x0a, 0x1b, 0x4d, 0x61,
	0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x44, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65,
	0x6d, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x65, 0x0a, 0x1d, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61, 0x74, 0x65,
	0x64, 0x55, 0x6e, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6e, 0x63,
	0x12, 0x44, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x1b, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73,
	0x67, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61,
	0x74, 0x65, 0x64, 0x55, 0x6e, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x22, 0x77, 0x0a, 0x1d, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x75, 0x61,
	0x74, 0x65, 0x64, 0x55, 0x6e, 0x4d, 0x61, 0x72, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e,
	0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x72, 0x72,
	0x69, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x73, 0x67,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x4d, 0x61,
	0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x22, 0x8d, 0x01, 0x0a, 0x16, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x45, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x22, 0x55, 0x0a, 0x19, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x53, 0x65, 0x78, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x53, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x1a, 0x4d,
	0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x70, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x2e, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65,
	0x6d, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x38, 0x0a, 0x1a, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x1b, 0x4d, 0x61, 0x72,
	0x72, 0x69, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x4d,
	0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x22, 0x75, 0x0a, 0x1b, 0x4d, 0x61, 0x72,
	0x72, 0x69, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73,
	0x67, 0x2e, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54,
	0x65, 0x6d, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xb4, 0x01, 0x0a, 0x14, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x79, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x6d, 0x79, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x15, 0x4d, 0x61, 0x72, 0x72,
	0x69, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x4d, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x72, 0x72, 0x69,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x73, 0x67,
	0x52, 0x0c, 0x6d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x46,
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x17, 0x4d, 0x61, 0x72, 0x72, 0x69,
	0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69, 0x64, 0x12, 0x3b,
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x2c, 0x0a, 0x18, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22,
	0x34, 0x0a, 0x16, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x70,
	0x69, 0x6c, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x70, 0x75, 0x70,
	0x69, 0x6c, 0x55, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x17, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x55, 0x69, 0x64, 0x22, 0x4f,
	0x0a, 0x1d, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x53, 0x65, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x75, 0x70, 0x69, 0x6c, 0x53, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x78, 0x0a, 0x1e, 0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x79, 0x71, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x72, 0x72, 0x69,
	0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x73, 0x67, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x15, 0x4d, 0x61, 0x72,
	0x72, 0x69, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x16,
	0x4d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x2a, 0x4d, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x04, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6d, 0x7a, 0x68, 0x6f, 0x6e, 0x67, 0x71, 0x69, 0x2f,
	0x78, 0x64, 0x64, 0x71, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x61, 0x6d, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
}

var (
	file_Marriage_proto_rawDescOnce sync.Once
	file_Marriage_proto_rawDescData = file_Marriage_proto_rawDesc
)

func file_Marriage_proto_rawDescGZIP() []byte {
	file_Marriage_proto_rawDescOnce.Do(func() {
		file_Marriage_proto_rawDescData = protoimpl.X.CompressGZIP(file_Marriage_proto_rawDescData)
	})
	return file_Marriage_proto_rawDescData
}

var file_Marriage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Marriage_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_Marriage_proto_goTypes = []any{
	(ApplyType)(0),                         // 0: com.yq.msg.CityMsg.ApplyType
	(*MarriageApplyTempMsg)(nil),           // 1: com.yq.msg.CityMsg.MarriageApplyTempMsg
	(*MarriageRecordTempMsg)(nil),          // 2: com.yq.msg.CityMsg.MarriageRecordTempMsg
	(*MarriageUserDataMsg)(nil),            // 3: com.yq.msg.CityMsg.MarriageUserDataMsg
	(*MarriageUserDataMsgSync)(nil),        // 4: com.yq.msg.CityMsg.MarriageUserDataMsgSync
	(*MarriageGetAppointApplySync)(nil),    // 5: com.yq.msg.CityMsg.MarriageGetAppointApplySync
	(*PupilGraduatedUnMarryListSync)(nil),  // 6: com.yq.msg.CityMsg.PupilGraduatedUnMarryListSync
	(*MarriageRefuseNotifyMsgSync)(nil),    // 7: com.yq.msg.CityMsg.MarriageRefuseNotifyMsgSync
	(*PupilGraduatedUnMarryListReq)(nil),   // 8: com.yq.msg.CityMsg.PupilGraduatedUnMarryListReq
	(*PupilGraduatedUnMarryListResp)(nil),  // 9: com.yq.msg.CityMsg.PupilGraduatedUnMarryListResp
	(*MarriageRecordListReq)(nil),          // 10: com.yq.msg.CityMsg.MarriageRecordListReq
	(*MarriageRecordListResp)(nil),         // 11: com.yq.msg.CityMsg.MarriageRecordListResp
	(*MarriageGetServerApplyReq)(nil),      // 12: com.yq.msg.CityMsg.MarriageGetServerApplyReq
	(*MarriageGetServerApplyResp)(nil),     // 13: com.yq.msg.CityMsg.MarriageGetServerApplyResp
	(*MarriageRecommendPlayerReq)(nil),     // 14: com.yq.msg.CityMsg.MarriageRecommendPlayerReq
	(*MarriageRecommendPlayerResp)(nil),    // 15: com.yq.msg.CityMsg.MarriageRecommendPlayerResp
	(*MarriageGetAppointApplyReq)(nil),     // 16: com.yq.msg.CityMsg.MarriageGetAppointApplyReq
	(*MarriageGetAppointApplyResp)(nil),    // 17: com.yq.msg.CityMsg.MarriageGetAppointApplyResp
	(*MarriageApplyDealReq)(nil),           // 18: com.yq.msg.CityMsg.MarriageApplyDealReq
	(*MarriageApplyDealResp)(nil),          // 19: com.yq.msg.CityMsg.MarriageApplyDealResp
	(*MarriageApplyPublishReq)(nil),        // 20: com.yq.msg.CityMsg.MarriageApplyPublishReq
	(*MarriageApplyPublishResp)(nil),       // 21: com.yq.msg.CityMsg.MarriageApplyPublishResp
	(*MarriageApplyCancelReq)(nil),         // 22: com.yq.msg.CityMsg.MarriageApplyCancelReq
	(*MarriageApplyCancelResp)(nil),        // 23: com.yq.msg.CityMsg.MarriageApplyCancelResp
	(*MarriageRefreshServerApplyReq)(nil),  // 24: com.yq.msg.CityMsg.MarriageRefreshServerApplyReq
	(*MarriageRefreshServerApplyResp)(nil), // 25: com.yq.msg.CityMsg.MarriageRefreshServerApplyResp
	(*MarriageSetAppointReq)(nil),          // 26: com.yq.msg.CityMsg.MarriageSetAppointReq
	(*MarriageSetAppointResp)(nil),         // 27: com.yq.msg.CityMsg.MarriageSetAppointResp
	(*PupilDataMsg)(nil),                   // 28: com.yq.msg.CityMsg.PupilDataMsg
	(*SearchPlayerMsg)(nil),                // 29: com.yq.msg.CityMsg.SearchPlayerMsg
}
var file_Marriage_proto_depIdxs = []int32{
	28, // 0: com.yq.msg.CityMsg.MarriageApplyTempMsg.pupilInfo:type_name -> com.yq.msg.CityMsg.PupilDataMsg
	0,  // 1: com.yq.msg.CityMsg.MarriageApplyTempMsg.type:type_name -> com.yq.msg.CityMsg.ApplyType
	28, // 2: com.yq.msg.CityMsg.MarriageRecordTempMsg.pupilInfo:type_name -> com.yq.msg.CityMsg.PupilDataMsg
	3,  // 3: com.yq.msg.CityMsg.MarriageUserDataMsgSync.userMarriageInfo:type_name -> com.yq.msg.CityMsg.MarriageUserDataMsg
	1,  // 4: com.yq.msg.CityMsg.MarriageGetAppointApplySync.dataList:type_name -> com.yq.msg.CityMsg.MarriageApplyTempMsg
	1,  // 5: com.yq.msg.CityMsg.PupilGraduatedUnMarryListSync.dataList:type_name -> com.yq.msg.CityMsg.MarriageApplyTempMsg
	1,  // 6: com.yq.msg.CityMsg.PupilGraduatedUnMarryListResp.dataList:type_name -> com.yq.msg.CityMsg.MarriageApplyTempMsg
	2,  // 7: com.yq.msg.CityMsg.MarriageRecordListResp.dataList:type_name -> com.yq.msg.CityMsg.MarriageRecordTempMsg
	1,  // 8: com.yq.msg.CityMsg.MarriageGetServerApplyResp.dataList:type_name -> com.yq.msg.CityMsg.MarriageApplyTempMsg
	29, // 9: com.yq.msg.CityMsg.MarriageRecommendPlayerResp.dataList:type_name -> com.yq.msg.CityMsg.SearchPlayerMsg
	1,  // 10: com.yq.msg.CityMsg.MarriageGetAppointApplyResp.dataList:type_name -> com.yq.msg.CityMsg.MarriageApplyTempMsg
	2,  // 11: com.yq.msg.CityMsg.MarriageApplyDealResp.marriageData:type_name -> com.yq.msg.CityMsg.MarriageRecordTempMsg
	1,  // 12: com.yq.msg.CityMsg.MarriageApplyDealResp.applylist:type_name -> com.yq.msg.CityMsg.MarriageApplyTempMsg
	0,  // 13: com.yq.msg.CityMsg.MarriageApplyPublishReq.applyType:type_name -> com.yq.msg.CityMsg.ApplyType
	1,  // 14: com.yq.msg.CityMsg.MarriageRefreshServerApplyResp.dataList:type_name -> com.yq.msg.CityMsg.MarriageApplyTempMsg
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_Marriage_proto_init() }
func file_Marriage_proto_init() {
	if File_Marriage_proto != nil {
		return
	}
	file_Pupil_proto_init()
	file_WatchPlayer_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Marriage_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageApplyTempMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageRecordTempMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageUserDataMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageUserDataMsgSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageGetAppointApplySync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PupilGraduatedUnMarryListSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageRefuseNotifyMsgSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PupilGraduatedUnMarryListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PupilGraduatedUnMarryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageRecordListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageRecordListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageGetServerApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageGetServerApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageRecommendPlayerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageRecommendPlayerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageGetAppointApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageGetAppointApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageApplyDealReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageApplyDealResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageApplyPublishReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageApplyPublishResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageApplyCancelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageApplyCancelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageRefreshServerApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageRefreshServerApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageSetAppointReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Marriage_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*MarriageSetAppointResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Marriage_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Marriage_proto_goTypes,
		DependencyIndexes: file_Marriage_proto_depIdxs,
		EnumInfos:         file_Marriage_proto_enumTypes,
		MessageInfos:      file_Marriage_proto_msgTypes,
	}.Build()
	File_Marriage_proto = out.File
	file_Marriage_proto_rawDesc = nil
	file_Marriage_proto_goTypes = nil
	file_Marriage_proto_depIdxs = nil
}
